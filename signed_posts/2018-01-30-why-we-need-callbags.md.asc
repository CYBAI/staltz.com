-----BEGIN PGP MESSAGE-----
Comment: https://keybase.io/download
Version: Keybase Go 2.1.0 (linux)

xA0DAAoBnt4j6n6KSJABy+F0AOIAAAAA7S0tLQpsYXlvdXQ6IHBvc3QKdGl0bGU6
ICJXaHkgd2UgbmVlZCBDYWxsYmFncyIKdGFnczogW2Jsb2ddCi0tLQoKSW4gdGhl
IHBhc3QgSSd2ZSBoZWxwZWQgd3JpdGUgcGFydHMgb2YgW1J4SlNdKGh0dHBzOi8v
Z2l0aHViLmNvbS9SZWFjdGl2ZVgvUnhKUyksIEkndmUgd3JpdHRlbiBbeHN0cmVh
bV0oaHR0cHM6Ly9naXRodWIuY29tL3N0YWx0ei94c3RyZWFtL2lzc3VlcyksIGFu
ZCBub3cgSSBicmluZyBhIG5ldyBzdHJlYW0gbGlicmFyeSBmb3IgSmF2YVNjcmlw
dC4gVGhpcyB0aW1lLCBpdCdzIGEgYml0IGRpZmZlcmVudCwgdGhvdWdoLCBiZWNh
dXNlIHRoZXJlIGFyZSAzIG5ldyB0aGluZ3M6CgotIEEgcmVhY3RpdmUgc3RyZWFt
IHByb2dyYW1taW5nIGxpYnJhcnkKLSBBbiBpdGVyYWJsZSBwcm9ncmFtbWluZyBs
aWJyYXJ5Ci0gQSBzcGVjaWZpY2F0aW9uIGZvciBjYWxsYmFjay1iYXNlZCBwcm9n
cmFtbWluZwoKSW4gcmVhbGl0eSwgdGhvc2UgMyBhcmUgcmVhbGl6ZWQgaW4ganVz
dCBvbmUgdGhpbmc6IFtDYWxsYmFnc10oaHR0cHM6Ly9naXRodWIuY29tL3N0YWx0
ei9jYWxsYmFnLWJhc2ljcykuCgpgYGBqcwpjb25zdCB7Zm9yRWFjaCwgZnJvbUV2
ZW50LCBtYXAsIGZpbHRlciwgcGlwZX0gPSByZXF1aXJlKCdjYWxsYmFnLWJhc2lj
cycpOwoKcGlwZSgKICBmcm9tRXZlbnQoZG9jdW1lbnQsICdjbGljaycpLAogIGZp
bHRlcihldiA9PiBldi50YXJnZXQudGFnTmFtZSA9PT0gJ0JVVFRPTicpLAogIG1h
cChldiA9PiAoe3g6IGV2LmNsaWVudFgsIHk6IGV2LmNsaWVudFl9KSksCiAgZm9y
RWFjaCh4ID0+IGNvbnNvbGUubG9nKHgpKQopOwpgYGAKCkl0J3MgYSBzcGVjIG1v
cmUgdGhhbiBpdCBpcyBhIGxpYnJhcnksIGFuZCBjb21iaW5lcyBhIGNvdXBsZSBv
ZiBpZGVhcyBmcm9tIHBlb3BsZSBJIGFkbWlyZSBpbiB0aGlzIGZpZWxkOgoKLSBF
cmlrIE1laWplcidzIFtnZXR0ZXIgYW5kIHNldHRlciBtYW50cmFdKGh0dHBzOi8v
d3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9c1RTUWxZWDVEVTApCi0gUGF1bCBUYXls
b3IncyBbZGVmaW5pdGlvbiBvZiBJdGVyYWJsZXMgYW5kIE9ic2VydmFibGVzXSho
dHRwczovL2dpdGh1Yi5jb20vUmVhY3RpdmVYL3J4anMvaXNzdWVzLzc1MiNpc3N1
ZWNvbW1lbnQtMTYxMjM0NTQ5KSB1bnZlaWxzIGEgbG90IG9mIHNpbWlsYXJpdGll
cyBiZXR3ZWVuIHRoZW0KLSBCZW4gTGVzaDogWyphbiBvYnNlcnZhYmxlIGlzIGp1
c3QgYSBmdW5jdGlvbipdKGh0dHBzOi8vbWVkaXVtLmNvbS9AYmVubGVzaC9sZWFy
bmluZy1vYnNlcnZhYmxlLWJ5LWJ1aWxkaW5nLW9ic2VydmFibGUtZDVkYTU3NDA1
ZDg3KQotIFJ4SmF2YSAyOiBbT2JzZXJ2ZXIgaXMgbm90aWZpZWQgb2YgdGhlIFN1
YnNjcmlwdGlvbl0oaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtb2Jz
ZXJ2YWJsZS9pc3N1ZXMvNDMjaXNzdWVjb21tZW50LTEyMTAwMzM2NyksIGZvciBi
YWNrcHJlc3N1cmUgKGEgdHlwZSBvZiBjb21tdW5pY2F0aW9uIHVwd2FyZHMgd2l0
aCB0aGUgT2JzZXJ2YWJsZSkKLSBQYXVsIFRheWxvcidzIGlkZWEgb2YgYW4gW3Vs
dHJhLW1vZHVsYXIgT2JzZXJ2YWJsZSBsaWJyYXJ5XShodHRwczovL2dpdGh1Yi5j
b20vUmVhY3RpdmVYL3J4anMvaXNzdWVzLzI5KQotIERvbWluaWMgVGFycidzIFtw
dWxsLXN0cmVhbXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9wdWxsLXN0cmVhbS9wdWxs
LXN0cmVhbSksIHdoZXJlIGEgc3RyZWFtIGlzIGp1c3QgYSBmdW5jdGlvbiBmb2xs
b3dpbmcgc29tZSBjb252ZW50aW9ucwoKQWZ0ZXIgYSBsb3Qgb2YgZGlzY3Vzc2lv
biBhbmQgZXhwZXJpbWVudGF0aW9uLCBJIGRpc2NvdmVyZWQgd2hhdCBJIGNhbGwg
ImNhbGxiYWNrIGhlYXZlbiIuIEV2ZW4gdGhvdWdoIHlvdSBjYW4gZXhwZXJpZW5j
ZSBjYWxsYmFjayBoZWxsLCBjYWxsYmFja3MgYXJlIGltbWVuc2VseSBwb3dlcmZ1
bCwgYW5kIGlmIHlvdSdyZSBhYmxlIHRvIHRhbWUgdGhlbSwgdGhlbiB5b3UgZG9u
J3QgbmVlZCBoZWF2eSBsaWJyYXJpZXMgZm9yIGFzeW5jIGJlY2F1c2UgdGhlIGxh
bmd1YWdlIGFscmVhZHkgaGFzIHRoZW0gbmF0aXZlbHkuIFNvIGlmIHdlIGNhbiBj
b250YWluIHRyaWNreSBjYWxsYmFjayBjb2RlIGluIHV0aWxpdGllcywgdGhlbiB3
ZSBjYW4gbGlmdCB0aGUgbGV2ZWwgb2YgYWJzdHJhY3Rpb24gYW5kIGZyb20gdGhh
dCBwb2ludCBvbndhcmRzIHVzZSBmYW1pbGlhciBvcGVyYXRvcnMgbGlrZSBgbWFw
YCwgYG1lcmdlYCwgYGNvbWJpbmVgLCBgc2hhcmVgLCBldGMuCgpDYWxsYmFnIGlz
IGEgW3NwZWNpZmljYXRpb25dKGh0dHBzOi8vZ2l0aHViLmNvbS9jYWxsYmFnL2Nh
bGxiYWcpIHRoYXQgZ2l2ZXMgc29tZSBndWlkZWxpbmVzIGZvciBjYWxsYmFjay1i
YXNlZCBwcm9ncmFtbWluZyBpbiBKYXZhU2NyaXB0LCBzbyB0aGF0IHRoZXkgY2Fu
IGJlIGVhc2lseSB1c2VkIGZvciByZWFjdGl2ZSBwcm9ncmFtbWluZyB3aXRoIG9w
ZXJhdG9ycywgb3IgZm9yIGl0ZXJhYmxlIHByb2dyYW1taW5nIHRocm91Z2ggc2lt
aWxhciBvcGVyYXRvcnMuIEluIGZhY3QsIG9mdGVuIHRoZSBzYW1lIG9wZXJhdG9y
IHdvcmtzIGZvciBib3RoIHJlYWN0aXZlIHByb2dyYW1taW5nIGFuZCBpdGVyYWJs
ZSBwcm9ncmFtbWluZy4KCkluIHRoaXMgYXJ0aWNsZSwgbGV0IG1lIHRlbGwgeW91
IHdoYXQgcHJvYmxlbXMgSSB3YW50ZWQgdG8gc29sdmUgYW5kIGhvdyBDYWxsYmFn
cyBhcmUgYSBzb2x1dGlvbi4KCiMjIEh5YnJpZCBwdXNoIGFuZCBwdWxsIHByaW1p
dGl2ZQoKSXQgc3RhcnRlZCBpbiBbQ3ljbGVDb25mIDIwMTddKGh0dHBzOi8vdmlt
ZW8uY29tL2FsYnVtLzQ1Nzg5MzcpIChBcHJpbCkgd2hlbiB3ZSB3ZXJlIHRhbGtp
bmcgYWJvdXQgYW4gdW50YXBwZWQgaXNzdWUgd2hlcmUgd2Ugc2hvdWxkIGJlIGhh
bmRsaW5nIGluaGVyZW50bHkgcHVsbC1zdHlsZSBkYXRhIHNvdXJjZXMsIHN1Y2gg
YXMgYE1hdGgucmFuZG9tKClgLCBgVVVJRCgpYCwgYW5kIGV2ZW4gbmV0d29yayBy
ZXF1ZXN0cywgd2hpY2ggbGVkIHRvIGEgW2xlbmd0aHkgZGlzY3Vzc2lvbiBpbiB0
aGlzIGlzc3VlXShodHRwczovL2dpdGh1Yi5jb20vY3ljbGVqcy9jeWNsZWpzL2lz
c3Vlcy81ODEpLiBPdXIgaW5pdGlhbCBwbGFuIHdhcyB0byBidWlsZCBhIGRlZGlj
YXRlZCBwdWxsIGxpYnJhcnkgKHRlbnRhdGl2ZWx5IGNhbGxlZCBgeXNpZ25hbGAp
IHNvIHRoYXQgQ3ljbGUuanMgc2lua3MgY291bGQgYmUgZWl0aGVyIHhzdHJlYW0g
b3IgeXNpZ25hbCwgZGVwZW5kaW5nIG9uIHRoZSBkcml2ZXIuCgpUaGlzIGRpZG4n
dCBtYWtlIHVzIGNvbWZvcnRhYmxlLCB0aG91Z2gsIHNpbmNlIGl0IG1lYW50IGFu
IGFkZGl0aW9uYWwgbWVudGFsIGNvc3QgKHNwZWNpYWxseSBmb3IgYmVnaW5uZXJz
KSBvZiBiZWluZyBhd2FyZSB3aGljaCBBUElzIHJlcXVpcmVkIHN0cmVhbXMgYW5k
IHdoaWNoIHJlcXVpcmVkIHNpZ25hbHMuIFJlY2VudGx5LCBpbiBEZWNlbWJlciwg
YWZ0ZXIgZGlzY3Vzc2luZyB3aXRoIFtKYW5dKGh0dHBzOi8vZ2l0aHViLmNvbS9q
dmFuYnJ1ZWdnZSksIEkgbm90aWNlZCB0aGF0IFsiYSBQdWxsIGlzIGp1c3QgdHdv
IFB1c2hlcyJdKGh0dHBzOi8vZ2l0aHViLmNvbS9jeWNsZWpzL2N5Y2xlanMvaXNz
dWVzLzU4MSNpc3N1ZWNvbW1lbnQtMzUzODk1NTE3KS4gVGhpcyB3YXMgZXhjaXRp
bmcgYmVjYXVzZSBpdCBtZWFudCB0aGF0IFB1c2ggaXMgYSBtb3JlIGZvdW5kYXRp
b25hbCBwcmltaXRpdmUgdGhhbiBQdWxsIGlzLCBhbmQgc2luY2UgQ3ljbGUuanMg
aGFzIHNvIGZhciBiZWVuIGEgUHVzaC1vbmx5IGZyYW1ld29yaywgd2UgYXJlbid0
IG1pc3NpbmcgYW55dGhpbmcgaW1wb3J0YW50IGluIHRoZSBmb3VuZGF0aW9ucyBv
ZiB0aGUgZnJhbWV3b3JrLiBJbiBwcmFjdGljZSwgd2Ugc3RpbGwgbmVlZCB0byBp
bXByb3ZlIHRoZSB1c2FnZSBvZiBQdWxsLXN0eWxlIEFQSXMsIGJ1dCBub3cgd2Un
cmUgY29tZm9ydGFibGUgdGhhdCB0aGlzIGNhbiBiZSBhZGRlZCBvbiB0b3Agb2Yg
ZXhpc3Rpbmcgc3RydWN0dXJlcywgYXMgb3Bwb3NlZCB0byBjYXVzaW5nIGEgYmln
IHJld3JpdGUgdG8gaW50cm9kdWNlIGEgbmV3IGZvdW5kYXRpb24uCgoiQSBQdWxs
IGlzIGp1c3QgdHdvIFB1c2hlcyIgc29vbiBjb252ZXJ0ZWQgaW4gbXkgbWluZCBp
bnRvICJQdXNoIGlzIGFub3RoZXIgd29yZCBmb3IgKm1lc3NhZ2UgcGFzc2luZyos
IHNvIFB1bGwgaXMganVzdCB0d28gbWVzc2FnZXMiLiBGcm9tIHRoZXJlLCBJIG5v
dGljZWQgdGhhdCBmdW5jdGlvbnMgb2YgdHlwZSBgeCA9PiB2b2lkYCBpbiBKYXZh
U2NyaXB0IHByb3ZpZGUgb25lLXdheSBtZXNzYWdlIHBhc3NpbmcuIFdlJ3ZlIGFs
cmVhZHkgYmVlbiB1c2luZyBwbGVudHkgb2YgdGhvc2UgZnVuY3Rpb25zLCBhbmQg
dGhleSdyZSBjYWxsZWQgY2FsbGJhY2tzLiBXaGF0IE9ic2VydmFibGVzIGhhZCBi
cm91Z2h0IG9uIHRvcCBvZiBjYWxsYmFja3Mgd2VyZToKCi0gMyBkaWZmZXJlbnQg
dHlwZXMgb2Ygbm90aWZpY2F0aW9uczogbmV4dCwgZXJyb3IsIGNvbXBsZXRlCi0g
QSBjb250cmFjdCBvZiB2YWxpZGl0eSBmb3IgdGhvc2Ugbm90aWZpY2F0aW9uczog
YChuZXh0KSooZXJyb3J8Y29tcGxldGUpP2AKLSBGdW5jdGlvbmFsIG9wZXJhdG9y
cyB0aGF0IHdvcmsgb24gYW4gYWJzdHJhY3QgbGV2ZWwsIGxhemlseQoKU28gSSB0
b29rIHRob3NlIHZhbHVhYmxlIHByaW5jaXBsZXMgZnJvbSBSeEpTIGFuZCBJIGxv
b2tlZCBhdCBob3cgSSBjb3VsZCBzaW1wbGlmeSB0aGUgT2JzZXJ2ZXIgLyBPYnNl
cnZhYmxlIG1ldGhvZHMtb24tYW4tb2JqZWN0IEFQSToKCmBgYAppbnRlcmZhY2Ug
T2JzZXJ2ZXIgewogIG5leHQoeCk6IHZvaWQ7CiAgZXJyb3IoZSk6IHZvaWQ7CiAg
Y29tcGxldGUoKTogdm9pZDsKfQoKaW50ZXJmYWNlIE9ic2VydmFibGUgewogIHN1
YnNjcmliZShvYnNlcnZlcik6IFN1YnNjcmlwdGlvbjsKfQpgYGAKCkFuZCBJIGRl
Y2lkZWQgdG8gdHJ5IGEgbW9yZSByYXcgZm9ybSB0aGF0IHlvdSBtYXkgaGF2ZSBm
b3VuZCBpbiBzb21lIFJ4SlMgdHV0b3JpYWxzOgoKYGBganMKZnVuY3Rpb24gbXlP
YnNlcnZhYmxlKG5leHRDYWxsYmFjaykgewp9CmBgYAoKSXQgc3RydWNrIG1lIHRo
YXQgYSByYXcgb2JzZXJ2YWJsZSBpc24ndCB0aGF0IG11Y2ggZGlmZmVyZW50IHRo
YW4gYSByYXcgb2JzZXJ2ZXIgKGBuZXh0Q2FsbGJhY2tgKS4gQm90aCBhcmUgZnVu
Y3Rpb25zLiBUaGUgb2JzZXJ2YWJsZSBpcyBzdXBwb3NlZCB0byByZXR1cm4gYSBT
dWJzY3JpcHRpb24gc28gdGhhdCB3ZSBjYW4gY2FsbCBgdW5zdWJzY3JpYmVgIG9u
IGl0LCBidXQgd2hhdCBpZiB0aGVyZSB3YXMgYW5vdGhlciB3YXk/IFRoZSBvYnNl
cnZlciBjYW4gZG8gZGlzcG9zYWwgbG9naWMgb24gYGNvbXBsZXRlYCwgc28gY291
bGRuJ3QgdGhlIG9ic2VydmFibGUgcmVjZWl2ZSBzb21lIGBjb21wbGV0ZWAgbm90
aWZpY2F0aW9uIHRvbz8gVGhpcyBraW5kIG9mIHRoaW5raW5nIGxlZCBtZSB0byBh
IHNpbWlsYXIgQVBJOgoKYGBganMKZnVuY3Rpb24gb2JzZXJ2YWJsZShtc2dUeXBl
LCBtc2dQYXlsb2FkKSB7Cn0KYGBgCgpXaGVuIGBtc2dUeXBlID09IDBgLCB0aGUg
cGF5bG9hZCBzaG91bGQgYmUgdGhlIG9ic2VydmVyIGZ1bmN0aW9uLiBXaGVuIGBt
c2dUeXBlID09IDJgLCBpdCBtZWFucyB1bnN1YnNjcmliZS4gVGhpcyBtZWFudCB0
aGF0IHRoZSBvYnNlcnZhYmxlIGZ1bmN0aW9uIChhLmsuYS4gc3Vic2NyaWJlKSBu
byBsb25nZXIgbmVlZHMgdG8gcmV0dXJuIGEgU3Vic2NyaXB0aW9uLiBUaGUgQVBJ
IGZvciB0aGUgb2JzZXJ2ZXIgY291bGQgYWxzbyBiZSB0aGUgZm9sbG93aW5nOgoK
YGBganMKZnVuY3Rpb24gb2JzZXJ2ZXIobXNnVHlwZSwgbXNnUGF5bG9hZCkgewp9
CmBgYAoKV2hlbiBgbXNnVHlwZSA9PSAxYCwgaXQgbWVhbnMgYG9ic2VydmVyLm5l
eHRgIGFuZCB0aGUgcGF5bG9hZCBjb250YWlucyB0aGUgZGF0YS4gV2hlbiBgbXNn
VHlwZSA9PSAyYCBhbmQgcGF5bG9hZCBpcyB1bmRlZmluZWQsIGl0IG1lYW5zIGBv
YnNlcnZlci5jb21wbGV0ZWAuIFdoZW4gYG1zZ1R5cGUgPT0gMmAgYW5kIHBheWxv
YWQgaXMgYSB0cnV0aHkgdmFsdWUsIHRoZW4gaXQgbWVhbnMgYG9ic2VydmVyLmVy
cm9yYC4gU28gSSdtIGFibGUgdG8gY292ZXIgYWxsIHRoZSB0cmFkaXRpb25hbCBP
YnNlcnZlciB1c2UgY2FzZXMgd2l0aCB0aGlzLgoKVGhlbiBJIHB1dCBib3RoIG9m
IHRoZXNlIHJhdyBBUElzIHNpZGUgYnkgc2lkZSBhbmQgSSBzYXc6CgoqKk9ic2Vy
dmVyKio6CgotIGBvYnNlcnZlcigxLCBkYXRhKTogdm9pZGAKICAtICJuZXh0Igot
IGBvYnNlcnZlcigyLCBlcnIpOiB2b2lkYAogIC0gImVycm9yIgotIGBvYnNlcnZl
cigyKTogdm9pZGAKICAtICJjb21wbGV0ZSIKCioqT2JzZXJ2YWJsZSoqOgoKLSBg
b2JzZXJ2YWJsZSgwLCBvYnNlcnZlcik6IHZvaWRgCiAgLSAic3Vic2NyaWJlIgot
IGBvYnNlcnZhYmxlKDIpOiB2b2lkYAogIC0gInVuc3Vic2NyaWJlIgoKQW5kIEkg
aW1tZWRpYXRlbHkgbm90aWNlZCBob3cgdGhleSBoYXZlIGJhc2ljYWxseSB0aGUg
c2FtZSBmdW5jdGlvbiBzaWduYXR1cmUsIGJ1dCB3aXRoIHNvbWUgaG9sZXMgaGVy
ZSBhbmQgdGhlcmUuIFdlIGhhdmVuJ3QgdXRpbGl6ZWQgYG9ic2VydmVyKDAsIHBh
eWxvYWQpYCBuZWl0aGVyIGBvYnNlcnZhYmxlKDEsIHBheWxvYWQpYC4gQW5kIHRo
YXQncyBiZWNhdXNlIHRob3NlIGFyZSB0aGUgb25seSBwaWVjZXMgbmVlZGVkIGlu
IG9yZGVyIHRvIGVuYWJsZS4uLiAod2FpdCBmb3IgaXQpIEl0ZXJhYmxlIHByb2dy
YW1taW5nLgoKfn5PYnNlcnZlcn5+ICoqQ29uc3VtZXIqKjoKCi0gYGNvbnN1bWVy
KDAsIHByb2R1Y2VyKTogdm9pZGAKICAtICoqcGFzcyB0aGUgcHJvZHVjZXIgdG8g
dGhlIGNvbnN1bWVyKioKLSBgY29uc3VtZXIoMSwgZGF0YSk6IHZvaWRgCiAgLSAi
bmV4dCIKLSBgY29uc3VtZXIoMiwgZXJyKTogdm9pZGAKICAtICJlcnJvciIKLSBg
Y29uc3VtZXIoMik6IHZvaWRgCiAgLSAiY29tcGxldGUiCgp+fk9ic2VydmFibGV+
fiAqKlByb2R1Y2VyKio6CgotIGBwcm9kdWNlcigwLCBjb25zdW1lcik6IHZvaWRg
CiAgLSAic3Vic2NyaWJlIgotIGBwcm9kdWNlcigxLCBkYXRhKTogdm9pZGAKICAt
ICoqcmVxdWVzdCByZWNlaXZlZCBmcm9tIGNvbnN1bWVyKioKLSBgcHJvZHVjZXIo
Mik6IHZvaWRgCiAgLSAidW5zdWJzY3JpYmUiIHJlY2VpdmVkIGZyb20gY29uc3Vt
ZXIKCkFuZCBub3cgYSBjb25zdW1lciBjYW4gYmUgYSAqTGlzdGVuZXIqICgib2Jz
ZXJ2ZXIiKSBvciBhICpQdWxsZXIqLCBpdCdzIHVwIHRvIHRoZSBjb25zdW1lciB3
aGV0aGVyIGl0IHdpbGwgcHVsbCB0aGUgcHJvZHVjZXIgb3Igbm90LiBBbmQgdGhl
IHByb2R1Y2VyIGNhbiBiZSBhICpMaXN0ZW5hYmxlKiAoIm9ic2VydmFibGUiKSBv
ciBhICpQdWxsYWJsZSogKCJpdGVyYWJsZSIpLCBpdCdzIHVwIHRvIHRoZSBwcm9k
dWNlciB3aGV0aGVyIGl0IHNlbmRzIGRhdGEgcHJvYWN0aXZlbHkgb3Igb25seSBv
biBkZW1hbmQuIEFzIHlvdSBjYW4gc2VlLCBib3RoIGNvbnN1bWVyIGFuZCBwcm9k
dWNlciBhcmUgc2ltcGxlIGZ1bmN0aW9ucyBvZiB0aGUgc2FtZSB0eXBlOgoKKipg
KG51bSwgcGF5bG9hZCkgPT4gdm9pZGAqKgoKU28gYW55IG9wZXJhdG9yIHRoYXQg
d2UgYnVpbGQgd2lsbCB3b3JrIGZvciBib3RoIHJlYWN0aXZlIHByb2dyYW1taW5n
IG9yIGl0ZXJhYmxlIHByb2dyYW1taW5nLCBzaW1wbHkgYmVjYXVzZSB0aGUgbGlu
ZSBiZXR3ZWVuIHRob3NlIHR3byBtb2RlcyBnZXRzIGJsdXJyZWQgYW5kIGl0J3Mg
bm90IGFueW1vcmUgYWJvdXQgb2JzZXJ2YWJsZXMgdmVyc3VzIGl0ZXJhYmxlcywg
aXQncyBqdXN0IGFib3V0IHRyYW5zZm9ybWF0aW9ucyBvZiBkYXRhIGJldHdlZW4g
cHJvZHVjZXIgYW5kIGNvbnN1bWVyLiBTcGVha2luZyBhYm91dCBvcGVyYXRvcnMu
Li4KCiMjIEVjb3N5c3RlbSBvZiBvcGVyYXRvcnMKCltSeEpTIHZlcnNpb24gNF0o
aHR0cHM6Ly9naXRodWIuY29tL1JlYWN0aXZlLUV4dGVuc2lvbnMvUnhKUy8pIHdh
cyBxdWl0ZSBodWdlIGluIG51bWJlciBvZiBvcGVyYXRvcnMuIEkgcmVtZW1iZXIg
Y291bnRpbmcgdGhlbSB0byBiZSBhcm91bmQgMTUwLiBJdCB3YXMgb2Z0ZW4gYSBj
b21wbGFpbnQgc3Vycm91bmRpbmcgdGhlIGRpZmZpY3VsdHkgb2YgYWRvcHRpb24g
b2YgdGhlIGxp7GJyYXJ5LCBiZWNhdXNlIGl0IGxvb2tlZCBsaWtlIHlvdSBoYWQg
dG8gbGVhcm4gbW9zdCBvZiB0aG9zZSBpbiBvcmRlciB0byBiZSBhIHByb2xpZmlj
IFJ4SlMgdXNlci4KCldpdGggUnhKUyB2ZXJzaW9uIDUrLCB3ZSBrbmV3IHdlIHdh
bnRlZCB0byBsaW1pdCB0aGUgc2NvcGUgb2YgdGhlIG9wZXJhdG9yIHBvcnRmb2xp
by4gVGhlIGZpcnN0IGl0ZXJhdGlvbiBvZiB0aGF0IHJld3JpdGUgcHJvYmFibHkg
aGFkIGxlc3MgdGhhbiBhIGh1bmRyZWQgb3BlcmF0b3JzLiBJdCB3YXMgYW4gaW1w
cm92ZW1lbnQsIGJ1dCBvdmVyIHRpbWUgaXQgaXMgdmVyeSBkaWZmaWN1bHQgdG8g
anVzdGlmeSB3aHkgYSBuZXcgb3BlcmF0b3Igc2hvdWxkIG5vdCBiZSBhZGRlZCB0
byB0aGUgbGlicmFyeSwgc3BlY2lhbGx5IHNpbmNlIHRoZSBBUEkgc3VyZmFjZSBm
b3IgY29tcGFyaW5nIHdpdGggZXhpc3Rpbmcgb3BlcmF0b3JzIGlzIGxhcmdlLgoK
T3VyIHBsYW4gd2l0aCB4c3RyZWFtIHdhcyB0byBwaWNrIG9ubHkgb3BlcmF0b3Jz
IHRoYXQgd2VyZSB1c2VmdWwgZm9yIEN5Y2xlLmpzIGFwcGxpY2F0aW9ucy4gV2Ug
c3VydmV5ZWQgdGhlIGNvbW11bml0eSBhbmQgd2VyZSBhYmxlIHRvIHNldHRsZSBv
biBhcHByb3hpbWF0ZWx5IDIwIGZ1bmRhbWVudGFsIG9wZXJhdG9ycy4gVG8gcmVz
dHJpY3QgdGhlIHNpemUgb2YgdGhlIGNvcmUgbGlicmFyeSwgd2UgcHV0IHNvbWUg
aW1wb3J0YW50IChidXQgbm90IGZ1bmRhbWVudGFsKSBvcGVyYXRvcnMgaW4gYSBz
dWJwYWNrYWdlIHdlIGNhbGwgW2V4dHJhXShodHRwczovL2dpdGh1Yi5jb20vc3Rh
bHR6L3hzdHJlYW0vYmxvYi9tYXN0ZXIvRVhUUkFfRE9DUy5tZCkuIFRoaXMgd29y
a2VkIHdlbGwgZm9yIGEgd2hpbGUsIGJ1dCByZXF1ZXN0cyB0byBhZGQgbW9yZSBl
eHRyYSBvcGVyYXRvcnMga2VwdCBjb21pbmcsIGFuZCBpdCB3YXMgaGFyZCB0byBt
YW5hZ2UsIGp1c3QgbGlrZSBpdCBpcyBpbiBSeEpTIDUrLgoKVGhlcmUgaXMgYSBs
b3Qgb2YgbWFpbnRlbmFuY2UgYnVyZGVuIGJlY2F1c2UgcGVvcGxlIGV4cGVjdCBh
bGwgb3BlcmF0b3JzIHRvIGJlIGVxdWFsbHkgd2VsbCBkb2N1bWVudGVkIGFuZCB3
ZWxsIHRlc3RlZC4gSW4gcHJhY3RpY2UsIGEgcmVhY3RpdmUgcHJvZ3JhbW1pbmcg
bGlicmFyeSB3aXRoIG9wZXJhdG9ycyBxdWlja2x5IGJlY29tZXMgYW4gIm5wbSBm
b3Igb3BlcmF0b3JzIiwgYnV0IHdpdGggY2VudHJhbGl6ZWQgbWFpbnRlbmFuY2Ug
YW5kIG1vcmUgb2JzdGFjbGVzIGZvciBwdWJsaXNoaW5nLiBJdCBkb2Vzbid0IG5l
ZWQgdG8gYmUgbGlrZSB0aGlzLiBQZW9wbGUgY2FuIGVhc2lseSBjcmVhdGUgYW5k
IHB1Ymxpc2ggdGhlaXIgb3duIG9wZXJhdG9ycyBhbmQgY29tcG9zZSB0aGVtIHdp
dGggZXhpc3Rpbmcgb25lcy4gSXQncyBhIGN1bHR1cmFsIGlzc3VlIHdoZXJlIHBl
b3BsZSBidWlsZCBleHBlY3RhdGlvbnMgZm9yIG9wZXJhdG9ycyB0byBleGlzdCBp
biB0aGUgY29yZSBsaWJyYXJ5LgoKQ29udHJhc3QgdGhhdCB3aXRoIHRoZSBSZWFj
dCBlY29zeXN0ZW0gd2hlcmUgdGhlcmUgYXJlIHRob3VzYW5kcyBvZiBSZWFjdCBj
b21wb25lbnRzIGF2YWlsYWJsZSBvbiBucG0uIERvZXMgb25lIG5lZWQgdG8gbGVh
cm4gYWxsIG9mIHRoZXNlIGNvbXBvbmVudHMgdG8gYmUgYSBwcm9saWZpYyB1c2Vy
PyBDZXJ0YWlubHkgbm90LiBEb2VzIFJlYWN0IGFzIGEgbGlicmFyeSBjb21lIHdp
dGggaHVuZHJlZHMgb2YgImNvcmUiIGNvbXBvbmVudHM/IE5vLCBidXQgdGhhdCBp
cyByb3VnaGx5IHdoYXQgaGFwcGVucyB3aXRoIHJlYWN0aXZlIHN0cmVhbSBsaWJy
YXJpZXMuIEFyZSBSZWFjdCB1c2VycyBjb21mb3J0YWJsZSB3aXRoIGNyZWF0aW5n
IGFuZCBwdWJsaXNoaW5nIHRoZWlyIG93biBjb21wb25lbnRzIG9uIG5wbT8gWWVz
LCBpdCBzZWVtcyBzby4KClRoZXJlIGlzbid0IGEgdGVjaG5vbG9naWNhbCByZWFz
b24gd2h5IFJlYWN0IGNvbXBvbmVudHMgYXJlIGJ5IGRlZmF1bHQgY29tbXVuaXR5
LWRyaXZlbiwgYW5kIHdoeSByZWFjdGl2ZSBvcGVyYXRvcnMgYXJlIG9mZmljaWFs
bHkgYW5kIGNlbnRyYWxseSBtYWludGFpbmVkLiBJdCdzIGEgbWF0dGVyIG9mIGN1
bHR1cmUgb25seS4gRm9yIGJvdGggVUkgY29tcG9uZW50cyBhbmQgcmVhY3RpdmUg
c3RyZWFtcywgd2UgY2FuIGhhdmUgYW4gKippbnRlcm9wZXJhYmxlIHNwZWNpZmlj
YXRpb24qKiB0aGF0IGFsbG93cyBhbGwgdGhlc2UgcGllY2VzIG9mIGNvZGUgdG8g
YmUgYnVpbHQgYnkgdGhlIGNvbW11bml0eSwgZm9yIHRoZSBjb21tdW5pdHkuIEl0
J3MgdGhlIGNvbW1vbiBjb25zZW5zdXMtYmFzZWQgY29yZSB0aGF0IGFsbG93cyB0
aGUgY29tbXVuaXR5IHRvIGJlIGZyZWUgZnJvbSBjZW50cmFsIG1haW50ZW5hbmNl
LgoKRXZlbiB0aG91Z2ggUnhKUyBhbmQgeHN0cmVhbSBmdWxseSBzdXBwb3J0IGNv
bW11bml0eS1kcml2ZW4gb3BlcmF0b3JzLCBJIGZpcnN0IHNhdyBhIGN1bHR1cmUg
b2YgY29tbXVuaXR5IG9wZXJhdG9ycyBpbiB0aGUgcHVsbC1zdHJlYW0gZWNvc3lz
dGVtIChjaGVjayB0aGVzZSBbYHB1bGwtKmAgcGFja2FnZXMgb24gbnBtXShodHRw
czovL3d3dy5ucG1qcy5jb20vc2VhcmNoP3E9cHVsbC0mcGFnZT0yJnJhbmtpbmc9
b3B0aW1hbCkpLiBJdCB3YXMgZXllLW9wZW5pbmcsIHBhcnRpY3VsYXJseSBiZWNh
dXNlIGBwdWxsLXN0cmVhbWAgZG9lc24ndCBoYXZlIGEgImNvcmUiLiBUbyBiZSBh
Y2N1cmF0ZSwgdGhlIG9ubHkgY29yZSBwYXJ0IG9mIHB1bGwtc3RyZWFtIGlzIHRo
ZSAicGlwZSIgZnVuY3Rpb24gW2BwdWxsYF0oaHR0cHM6Ly9naXRodWIuY29tL3B1
bGwtc3RyZWFtL3B1bGwtc3RyZWFtL2Jsb2IvbWFzdGVyL3B1bGwuanMpLiBUaGUg
bGlicmFyeSBpcyBqdXN0IGEgY29sbGVjdGlvbiBvZiBhIGZldyBmdW5kYW1lbnRh
bCBvcGVyYXRvcnMsIGJ1dCB5b3UgY291bGQgYnVpbGQgYSBwdWxsIHN0cmVhbSBm
cm9tIHNjcmF0Y2ggYW5kIGNvbnRpbnVlIGZyb20gdGhlcmUuIEkgbG92ZWQgdGhh
dCBpZGVhLCBhbmQgd2FudGVkIHRvIHRha2UgaXQgdG8gdGhlIG5leHQgbGV2ZWwu
CgojIyBNaW5pbWFsIG92ZXJoZWFkCgpDYWxsYmFnIGhhcyBubyBjb3JlIGxpYnJh
cnkuIEl0IGlzIGp1c3QgYSBzcGVjIGJhc2VkIG9uIGEgcHJpbWl0aXZlIHRoYXQg
Y29tZXMgYnVpbHQtaW4gd2l0aCBKUzogZnVuY3Rpb25zLgoKKipgKHR5cGU6IDB8
MXwyLCBwYXlsb2FkPzogYW55KSA9PiB2b2lkYCoqCgpUaGVyZSBpcyBubyBvZmZp
Y2lhbCBwYWNrYWdlIHRoYXQgYWx3YXlzIG5lZWRzIHRvIGJlIHByZXNlbnQuIEkg
aGF2ZSBwcm92aWRlZCBbY2FsbGJhZy1iYXNpY3NdKGh0dHBzOi8vZ2l0aHViLmNv
bS9zdGFsdHovY2FsbGJhZy1iYXNpY3MpLCBidXQgaXQncyBsaXRlcmFsbHkganVz
dCBhbiBgaW5kZXguanNgIHRoYXQgcmVxdWlyZXMgb3RoZXIgbGlicmFyaWVzLiBF
dmVyeSBvcGVyYXRvciBhbmQgZXZlcnkgZmFjdG9yeSBpcyBpdHMgb3duIHBhY2th
Z2UuIElmIHlvdSB3YW50IHRvIGhhdmUgYSBkaWZmZXJlbnQgY29sbGVjdGlvbiBv
ZiBvcGVyYXRvcnMsIGp1c3QgcmVxdWlyZSB0aGVtIG9uZSBieSBvbmUgYW5kIGJ1
bmRsZSB0aGVtIHRvZ2V0aGVyIGFzIHlvdXIgb3duIHRvb2xraXQuCgpUaGUgZmly
c3Qgb3BlcmF0b3JzIEkndmUgYnVpbHQgaW4gY2FsbGJhZy1iYXNpY3MgYWxzbyBk
ZW1vbnN0cmF0ZSBob3cgbGlnaHR3ZWlnaHQgeW91IGNhbiBnZXQgd2l0aCB0aGlz
IHBhdHRlcm4uIEZvciBpbnN0YW5jZSwgdGhpcyBpcyBsaXRlcmFsbHkgdGhlIHdo
b2xlIHNvdXJjZSBjb2RlIGZvciB0aGUgYGNhbGxiYWctbWFwYCBvcGVyYXRvcjoK
CmBgYGpzCmNvbnN0IG1hcCA9IGYgPT4gc291cmNlID0+IChzdGFydCwgc2luaykg
PT4gewogIGlmIChzdGFydCAhPT0gMCkgcmV0dXJuOwogIHNvdXJjZSgwLCAodCwg
ZCkgPT4gewogICAgc2luayh0LCB0ID09PSAxID8gZihkKSA6IGQpCiAgfSk7Cn07
Cgptb2R1bGUuZXhwb3J0cyA9IG1hcDsKYGBgCgpUaGF0J3MgMC4xa0IsIGFuZCB0
aGUgcmVzdWx0aW5nIENQVSBwZXJmb3JtYW5jZSAodG9nZXRoZXIgd2l0aCBvdGhl
ciBvcGVyYXRvcnMpIGlzIG9uIHRoZSBzYW3rZSBvcmRlciBvZiBtYWduaXR1ZGUg
KGluIHNvbWUgYmVuY2htYXJrcyBmYXN0ZXIsIGluIHNvbWUsIHNsb3dlcikgYXMg
UnhKUyB2NSBhbmQgeHN0cmVhbS4gV2hlbiBpdCBjb21lcyB0byBtZW1vcnkgdXNh
Z2UsIHRoZSB1c2Ugb2YgYHR5cGU6IDB8MXwyYCBudW1iZXJzIGhlbHAgdXMgdG8g
YXZvaWQgYWxsb2NhdGluZyBvYmplY3RzIGZvciBvYnNlcnZlcnMgb3Igb2JzZXJ2
YWJsZXMsIGxlYXZpbmcgdGhlIGdhcmJhZ2UgY29sbGVjdG9yIGluIHBlYWNlLiBU
aGF0IGBtYXBgIG9wZXJhdG9yIHdvcmtzIHNlYW1sZXNzbHkgd2l0aCBlaXRoZXIg
bGlzdGVuYWJsZSAoIm9ic2VydmFibGUiKSBvciBwdWxsYWJsZSAoIml0ZXJhYmxl
Iikgc291cmNlcy4KCk9uZSBjYW4gY2VydGFpbmx5IG1ha2UgbW9yZSBzb3BoaXN0
aWNhdGVkIG9wZXJhdG9ycywgcGVyaGFwcyBieSBhZGRpbmcgbW9yZSBkZXZlbG9w
ZXItZXhwZXJpZW5jZSB3YXJuaW5ncyBvciBkZWJ1Z2dpbmcgZmVhdHVyZXMuIEJ1
dCBjYWxsYmFnLWJhc2ljcyBwcm92ZXMgdGhhdCB0aGlzIGFwcHJvYWNoIGhhcyBu
byBjb3JlIGxpYnJhcnkgYW5kIHRoZSBvcGVyYXRvcnMgY2FuIGJlIGV4dHJlbWVs
eSBzbWFsbC4KCiMjIEludGVyb3BlcmFiaWxpdHkKCkkgZG9uJ3QgdGhpbmsgQ2Fs
bGJhZ3MgKnJlcGxhY2UqIGV4aXN0aW5nIGxpYnJhcmllcyBsaWtlIHhzdHJlYW0g
b3IgUnhKUy4gSW4gZmFjdCwgdG8gZW1waGFzaXplLCBJIGRvbid0IGV2ZW4gdGhp
bmsgeHN0cmVhbSByZXBsYWNlcyBSeEpTLCBhbmQgSSd2ZSBibG9nZ2VkIGFib3V0
IHRoYXQgW3R3aWNlXShodHRwczovL3N0YWx0ei5jb20vd2h5LXdlLWFjdHVhbGx5
LWJ1aWx0LXhzdHJlYW0uaHRtbCkuIEEgbWluaW1hbCBvdmVyaGVhZCBzdGFuZGFy
ZCBmb3IgcHVzaC1wdWxsIGNhbGxiYWNrcyBjYW4gaW4gZmFjdCBoZWxwIHRob3Nl
IG90aGVyIGxpYnJhcmllcy4gSSBjYW4gZ2l2ZSBhIGZldyBleGFtcGxlcyBob3cu
CgpXaXRoIHhzdHJlYW0sIGl0J3MgZnVuZGFtZW50YWwgdGhhdCBhbGwgc3RyZWFt
cyBhcmUgbXVsdGljYXN0ZWQsIGJlY2F1c2UgaW4gdGhpcyB3YXkgd2UgY2FuIGNy
YXdsIHRoZSBzdHJlYW0gZ3JhcGggaW4gcnVudGltZSBhbmQgYnVpbGQgYSBkYXRh
ZmxvdyBncmFwaCwgd2hpY2ggaXMgdGhlIGxvbmctdGVybSBnb2FsIG9mIEN5Y2xl
LmpzOiB0byBiZSBhIGZyYW1ld29yayBmb3IgdmlzdWFsIHByb2dyYW1taW5nLiBS
eEpTIE9ic2VydmFibGVzIChjb2xkIGJ5IGRlZmF1bHQpIGRvbid0IGdpdmUgdGhp
cyBwcm9wZXJ0eSBiZWNhdXNlIGEgY3Jhd2xlciB3b3VsZCB1bmNvdmVyIGR1cGxp
Y2F0ZSBwYXRocyB3aGVuIE9ic2VydmFibGUgc3Vic2NyaXB0aW9ucyBjcmVhdGUg
aW5kZXBlbmRlbnQgZXhlY3V0aW9ucyBvZiB0aGUgdW5kZXJseWluZyBwcm9kdWNl
ci4gVGhpcyBpcyBib3RoIGEgc3RyZW5ndGggYW5kIGEgd2Vha25lc3Mgb2YgUnhK
Uy4gQW5kIGluIHhzdHJlYW0sIGl0J3MgYm90aCBhIHN0cmVuZ3RoIGFuZCBhIHdl
YWtuZXNzLiBJdCBtZWFucyBSeEpTIGlzbid0IGJlc3Qgc3VpdGVkIGFzIGEgY3Jh
d2xlZC1pbi1ydW50aW1lIHByaW1pdGl2ZSBmb3IgY29uc3RydWN0aW5nIGRhdGFm
bG93IGdyYXBocy4gT24gdGhlIG90aGVyIGhhbmQsIGNvbGQgYnkgZGVmYXVsdCBn
dWFyYW50ZWVzIHJlZmVyZW50aWFsIHRyYW5zcGFyZW5jeSAocHVyaXR5KSwgYW5k
IGlzIG92ZXJhbGwgYm90aCBzYWZlciBhbmQgc2ltcGxlci4geHN0cmVhbSBnaXZl
cyBhIGdvb2QgY3Jhd2xhYmxlIHByaW1pdGl2ZSwgYnV0IGNhbm5vdCBndWFyYW50
ZWUgcmVmZXJlbnRpYWwgdHJhbnNwYXJlbmN5LiBFYWNoIG9uZSBoYXMgaXRzIGJl
c3QgdXNlIGNhc2UuCgpDYWxsYmFncyBhcmUganVzdCBjb25jZXJuZWQgYWJvdXQg
dGhlIGludGVyb3BlcmFibGUgQVBJIGFuZCB0aGUgbWluaW1hbCBjb3JlLiBXZSBt
aWdodCByZXdyaXRlIHhzdHJlYW0gdXNpbmcgY2FsbGJhZ3MgdG8gZ2FpbiB0aGF0
IGludGVyb3BlcmFiaWxpdHkgd2l0aCBjb21tdW5pdHkgb3BlcmF0b3JzLCBhbmQg
dG8gcmVkdWNlIHTqaGUgc2l6ZSBvZiB4c3RyZWFtJ3MgY29yZS4gSG93ZXZlciwg
d2Ugd2FudCB0byBrZWVwIHRoZSBhbHdheXMtbXVsdGljYXN0ZWQgYXNwZWN0IG9m
IHhzdHJlYW0sIGJlY2F1c2Ugb2YgcmVhc29ucyBtZW50aW9uZWQgaW4gdGhlIHBy
ZXZpb3VzIHBhcmFncmFwaC4gQXQgdGhlIHNhbWUgdGltZSwgdXNpbmcgY2FsbGJh
Z3MgZm9yIHRoZSBpbnRlcm5hbCBtZWNoYW5pY3Mgb2YgeHN0cmVhbSBoZWxwcyB1
cyBoYXZlIGFuIGVhc3kgcGF0aCBmb3IgYWRkaW5nIFB1bGwgc3VwcG9ydCBpbiB0
aGUgbGlicmFyeS4KCkNhbGxiYWdzIHN1cHBvcnQgYm90aCBwdXNoIGFuZCBwdWxs
LCB3aGljaCBjYW4gYmUgYm90aCBhbiBhZHZhbnRhZ2UgYW5kIGEgZGlzYWR2YW50
YWdlLiBBcyBhbiBhZHZhbnRhZ2UsIHdlIGdhaW4gZ2VuZXJpYyBvcGVyYXRvcnMg
dGhhdCB3b3JrIGZvciBib3RoIHB1c2ggYW5kIHB1bGwuIEFzIGEgZGlzYWR2YW50
YWdlLCB5b3UgY2FuIG5ldmVyIGtub3cgaWYgYSBjYWxsYmFnIHNvdXJjZSBzaG91
bGQgYmUgKm9ic2VydmVkKiBvciAqaXRlcmF0ZWQqIHVubGVzcyB5b3UgaGF2ZSBr
bm93bGVkZ2UgYWJvdXQgdGhlIHNvdXJjZSBpdHNlbGYuIFRoZSBhZGRlZCBwb3dl
ciBvZiBmbGV4aWJpbGl0eSBhbHNvIHRyYW5zbGF0ZXMgdG8gYWRkZWQgcmVzcG9u
c2liaWxpdHkuIFVuZGVyIHRoaXMgcGVyc3BlY3RpdmUsIHdlIGNhbiB2aWV3IFJ4
SlMgYXMgYSBwdXNoLW9ubHkgc3RyZWFtIGxpYnJhcnkgd2l0aCBjb2xkIGJ5IGRl
ZmF1bHQgKGZvciByZWZlcmVudGlhbCB0cmFuc3BhcmVuY3kpLCBnb29kIGRldmVs
b3BlciBleHBlcmllbmNlLCB3ZWxsIHRlc3RlZCBvcGVyYXRvcnMgYW5kIHNjaGVk
dWxlcnMgKGZvciBkaXNhbWJpZ3VhdGluZyBleGVjdXRpb24gb3JkZXIpLiBTaW1p
bGFybHksIFtJeEpTXShodHRwczovL2dpdGh1Yi5jb20vUmVhY3RpdmVYL0l4SlMv
KSBkb2VzIHRoYXQgYnV0IGZvciBwdWxsLW9ubHkgc3RyZWFtcy4gQ2FsbGJhZ3Mg
Y2FuIGJlIGEgd2F5IG9mIHNlYW1sZXNzbHkgYulyaWRnaW5nIHRoZSB0d28gd29y
bGRzIG9mIFJ4SlMgYW5kIEl4SlMuIEJ1dCBhbHNvIGtlZXBpbmcgdGhlbSBzZXBh
cmF0ZSBpcyBhIHdheSBvZiBhdm9pZGluZyBwcm9ibGVtcyB0aGF0IG1heSBjb21l
IHdpdGggYmxlbmRpbmcgdGhlbS4KCkFzIGEgY29uY2x1c2lvbiwgbXkgcGVyc3Bl
Y3RpdmUgb24gdG9vbHMgaXMgbGlrZSBrZXlzIG9uIGEgcGlhbm8uIEl0IGRvZXNu
J3QgbWFrZSBzZW5zZSB0byBhc2sgd2hpY2ggcGlhbm8ga2V5IGlzIHRoZSBiZXN0
IG9mIGFsbC4gQnV0IGl0IGRvZXMgbWFrZSBzZW5zZSB0byBhc2sgImdpdmVuIHRo
aXMga2V5LCB3aGljaCBvdGhlciBrZXlzIGhhcm1vbml6ZSB3aXRoIGl0IGluIHRo
aXMgcGFydGljdWxhciBjb250ZXh0PyIsIGFuZCBJJ20gaG9waW5nIHRoYXQgQ2Fs
bGJhZ3MgY2FuIGJlIGxpa2UgdGhhdCwgYnkgYnJpbmdpbmcgc29tZXRoaW5nIG5l
dyB0byBjb21wb3NlIHdpdGggZXhpc3Rpbmcgc3R1ZmYuIEluIHRoZSBlbmQgb2Yg
dGhlIGRheSwgdGhpc+YgaXMgbm90IGEgbmV3IGNvbXBldGluZyBsaWJyYXJ5LiBJ
dCdzIG5vdCBldmVuIGNvZGUuIEl0J3MgYSAqcmV143NhYmxlIGlk4mVhKi7gCgDC
wFwEAAEKABAFAlsih5YJEJ7eI+p+ikiQAAD8eAgAgYHdl++01tYDvUKQhCf5254v
Soa1mlhKbrylkCrm2Us0sugCb8Uko3eP18J+/qqdfI/4reSrZqwAe/CrJLAFdV37
LL1BlBTKO8nUz3+vMEUyHuwp7UELKH7L1/a6ENJm/xpb/iu7ctkBeD2z5oQjJBsJ
DfDODMicIWtmclhFEmn6mTtcNlMUwM/PqmldjCXTUivYnEm1iRheind0nDzjxBJn
vZyYULysIS0ssOLnIV52vCLnl/wp53FN4gsiOdde2SEgkylqmyCVprEvOqgbyQEt
xyOOyi7nycbkBmbJmK2nZphUFfWyVlXrkUC2vuhdWjpUoP1wAtjjJoygc/lddw==
=ce5c
-----END PGP MESSAGE-----
