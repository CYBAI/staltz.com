-----BEGIN PGP MESSAGE-----
Comment: https://keybase.io/download
Version: Keybase Go 1.0.40 (darwin)

xA0DAAoBnt4j6n6KSJABy+F0AOIAAAAA7S0tLQpsYXlvdXQ6IHBvc3QKdGl0bGU6
ICJPcGVuIHNvdXJjZSB3aXRob3V0IG1haW50YWluZXJzIgp0YWdzOiBbYmxvZ10K
LS0tCgpXaHkgaXMgbWFpbnRlbmFuY2Ugc3VjaCBhIGJpZyBodXJkbGUgaW4gbWFu
eSBvcGVuIHNvdXJjZSBwcm9qZWN0cz8gSXQgaXMgb2Z0ZW4gdGhlIHByaW1hcnkg
cmVhc29uIGZvciBidXJub3V0cyBhbW9uZyBtYWludGFpbmVycy4KCkkgcmVjZW50
bHkgcmVhbGl6ZWQgdGhhdCBtYW55IG9wZW4gc291cmNlIHByb2plY3RzIGhhdmUg
dGhlIG9wcG9ydHVuaXR5IG9mIHByb2dyZXNzaW5nIGluZGVwZW5kZW50bHkgZnJv
bSB0aGVpciBvcmlnaW5hbCBhdXRob3JzIGlmIHRoZXJlIGlzIHRoZSByaWdodCBj
dWx0dXJlIGluIHRoZSBjb21tdW5pdHkuIE5vdCBhbGwgcHJvamVjdHMgY2FuIGRv
IHRoaXMsIHRob3VnaC4gV2hhdCBJJ2xsIGRlc2NyaWJlIGhlcmUgbW9zdGx5IGFw
cGxpZXMgdG8gc21hbGwgb3BlbiBzb3VyY2UgbGlicmFyaWVzLCBub3QgbGFyZ2Ug
bGlicmFyaWVzIG5laXRoZXIgZW5kLXVzZXIgc29mdHdhcmUuCgojIyBQdWJsaXNo
aW5nIGZvcmtzCgpTby4gQSB5ZWFyIGFnbywgSSBzdHVtYmxlZCB1cG9uIHRoaXMg
dG9vbCBmb3IgSmF2YVNjcmlwdCBwcm9qZWN0cyBjYWxsZWQgW3BhdGNoLXBhY2th
Z2VdKGh0dHBzOi8vZ2l0aHViLmNvbS9kczMwMC9wYXRjaC1wYWNrYWdlLyksIGJ5
IFtEYXZpZCBTaGVsZHJpY2tdKGh0dHBzOi8vdHdpdHRlci5jb20vZGpzaGVsZHJp
Y2spLiBJdCBhbGxvd2VkIG1lIHRvIGNyZWF0ZSBzbWFsbCBwYXRjaGVzIHRvIGFw
cGx5IG9uIGRlcGVuZGVuY2llcywgdGhhdCBwZXJzaXN0IHRocm91Z2hvdXQgW25w
bV0oaHR0cDovL25wbWpzLmNvbS8pIGluc3RhbGxhdGlvbnMgYW5kIGRlbGV0aW9u
cy4gSSB1c2VkIGl0IHRvIGN1c3RvbWl6ZSBzbWFsbCBhc3BlY3RzIG9mIHNvbWUg
b2YgbXkgZGVwZW5kZW5jaWVzIHRvIHdvcmsgcHJvcGVybHkgd2l0aCBteSBzb2Z0
d2FyZSBwcm9qZWN0LiBJdCBhbGxvd2VkICptZSogdG8gIm1haW50YWluIiBhIHRo
aXJkLXBhcnR5IGxpYnJhcnkgd2l0aG91dCBib3RoZXJpbmcgaXRzIG9yaWdpbmFs
IGF1dGhvcnMuCgpUaGUgdG9vbCwgaG93ZXZlciwgaXMgb25seSBjb252ZW5pZW50
IGZvciBzbWFsbCBhbmQgdGVtcG9yYXJ5IHBhdGNoZXMuIFNvbWUgb2YgdGhvc2Ug
cGF0Y2hlcyBpbiBteSBwcm9qZWN0IHdlcmUgZ2V0dGluZyBiaWcsIHNvIEkgbWFk
ZSBhIGZvcmsgb2YgdGhlIHRoaXJkLXBhcnR5IGxpYnJhcnkuIFRoZSBpbnRlcmVz
dGluZyBwYXJ0LCB0aG91Z2gsIGlzIHRoYXQgSSBkaWRuJ3QgYm90aGVyIHRvIG1h
a2UgYSBwdWxsIHJlcXVlc3QuIE15IHJlYXNvbiB3YXMgcHJpbWFyaWx5IGxhemlu
ZXNzLCBidXQgc2Vjb25kYXJpbHksIEkgZGlkbid0IHdhbnQgdG8gZGlzdHVyYiB0
aGUgb3JpZ2luYWwgYXV0aG9yLiBNYXliZSB0aGV5IHdlcmUgb24gdGhlIGJyaW5r
IG9mIGJ1cm5vdXQsIEkgdGhvdWdodC4gQWxzbywgSSBkaWRuJ3QgY29uc2lkZXIg
bXkgcGF0Y2ggdGhhdCBpbXBvcnRhbnQuIEkgd291bGQgaGF2ZSBsaWtlZCB0byBj
cmVhdGUgYSBkaXNtaXNzYWJsZSBhbmQgZnJpZW5kbHkgInB1bGwgc3VnZ2VzdGlv
biIsIG5vdCBhIGRlbWFuZGluZyBhbmQgZW50aXRsZWQgInB1bGwgcmVxdWVzdCIu
CgpOZXh0IHRpbWUgSSBtYWRlIGEgZm9yayBvZiBhbm90aGVyIHBhY2thZ2UsIGBq
c29uZG93bmAsIEkgdG9vayBhIHNsaWdodGx5IGRpZmZlcmVudCBhcHByb2FjaC4g
TGlrZSBiZWZvcmUsIEkgcHVibGlzaGVkIG15IG93biBmb3JrIG9uIG5wbSwgYnV0
IHRoZW4gSSBhbHNvIGNyZWF0ZWQgYSBbcHVsbCByZXF1ZXN0XShodHRwczovL2dp
dGh1Yi5jb20vdG9vbG5lc3MvanNvbmRvd24vcHVsbC81KS4gSSB3YXNuJ3QgZGVt
YW5kaW5nLCBJIGp1c3QgbGVmdCB0aGUgUFIgdGhlcmUgYW5kIGRpZG4ndCBib3Ro
ZXIgdG8gc2VlIHdoZXRoZXIgaXQgd291bGQgYmUgbWVyZ2VkLiBUbyBteSBzdXJw
cmlzZSwgYWZ0ZXIgYSBmZXcgZGF5cywgdGhleSBtZXJnZWQgaXQgYW5kIHB1Ymxp
c2hlZCBhIG5ldyB2ZXJzaW9uIG9uIG5wbS4gSXQgZGlkbid0IGNoYW5nZSBteSBw
cm9qZWN0IGluIGFueSB3YXksIGV4Y2VwdCB0aGF0IEkgd2FzIGFibGUgdG8gcmVu
YW1lIG9uZSBvZiBteSBkZXBlbmRlbmNpZXMsIGZyb20gW2BAc3RhbHR6L2pzb25k
b3duYF0oaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvQHN0YWx0ei9qc29u
ZG93bikgdG8gW2Bqc29uZG93bmBdKGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNr
YWdlL2pzb25kb3duKS4gQW55IHBlcmNlaXZlZCBiZW5lZml0IHdhcyBqdXN0IGFl
c3RoZXRpYy4KClRoYXQgZXhwZXJpZW5jZSBsZWZ0IG1lIGludHJpZ3VlZC4gT24g
b25lIGhhbmQsIGl0IHdhcyBsaWtlIGEgdHlwaWNhbCBwdWxsIHJlcXVlc3QgZXhw
ZXJpZW5jZS4gT24gdGhlIG90aGVyIGhhbmQsIGl0IHdhcyBlbnRpcmVseSBkaWZm
ZXJlbnQgaW4gaW50ZW50IGFuZCBpbnRlcmFjdGlvbi4gSSBub3RpY2VkIHRoYXQg
cHVsbCByZXF1ZXN0cyBjYW4gYmUgbXVjaCBsZXNzIGRlbWFuZGluZywgbWVyZ2lu
ZyBjYW4gYmUgbGVzcyBvZiBhIHJlc3BvbnNpYmlsaXR5LCBhbmQgY2xvc2luZyBw
dWxsIHJlcXVlc3RzIGNhbiBvY2N1ciB3aXRob3V0IGhhcmQgZmVlbGluZ3MgZnJv
bSBlaXRoZXIgc2lkZS4gSSBmZWx0IHRoYXQgbWF5YmUgb3BlbiBzb3VyY2UgcHJv
amVjdHMgY291bGQgcHJvZ3Jlc3Mgd2l0aG91dCB0aGF0ICpyZXNwb25zaWJpbGl0
eSBidXJkZW4qLiBBbmQgc28gSSBhcHBsaWVkIHRoaXMgdHlwZSBvZiBjb250cmli
dXRpb24gdG8gYSBjb3VwbGUgb2Ygb3RoZXIgcGFja2FnZXMsIGxpa2UgW2xldmVs
ZG93bl0oaHR0cHM6Ly9naXRodWIuY29tL3N0YWx0ei9sZXZlbGRvd24tYW5kcm9p
ZC1wcmVidWlsdCksIFttZWRlYWRvd25dKGh0dHBzOi8vZ2l0aHViLmNvbS9tZWRl
YS9tZWRlYWRvd24vcHVsbC84KSwgW3JlYWN0LW5hdGl2ZS1vc10oaHR0cHM6Ly9n
aXRodWIuY29tL3N0YWx0ei9yZWFjdC1uYXRpdmUtb3MpLCBbcmVhY3QtbmF0aXZl
LXdvcmtlcnNdKGh0dHBzOi8vZ2l0aHViLmNvbS9zdGFsdHovcmVhY3QtbmF0aXZl
LXdvcmtlcnMvKSAod2hpY2ggaXMsIGJ5IHRoZSB3YXksIGEgZm9yayBvZiBhIGZv
cmspLgoKIyMgR2l0aHVibmVzcwoKVGhlIHdvcmQgSSB3YW50IHRvIHB1dCBvbiBz
cG90bGlnaHQgaGVyZSBpcyAncmVzcG9uc2liaWxpdHknLiBUaGUgcGVyY2VpdmVk
IGR1dHkgdG8ga2VlcCBvcGVuIHNvdXJjZSBwYWNrYWdlcyB1cC10by1kYXRlIGlz
IG9mdGVuIGR1ZSB0byAiZ2l0aHVibmVzcyIsIG5vdCBkdWUgdG8gb3Blbm5lc3Mu
IE1hbnkgb3BlbiBzb3VyY2UgY29uc3VtZXJzIG9mdGVuIGRvbid0IHRha2UgYWR2
YW50YWdlIG9mIHRoZSBmYWN0IHRoYXQgdGhlIHNvdXJjZSAqaXMgb3BlbiouIFRo
ZXkgc3VibWl0IGlzc3VlcywgZmVhdHVyZSByZXF1ZXN0cywgYW5kIGJ1ZyByZXBv
cnRzLCB0aGVuIHdhaXQgZm9yIGEgbmV3IHZlcnNpb24gdG8gYmUgcmVsZWFzZWQu
IEl0IG1ha2VzIGxpdHRsZSBkaWZmZXJlbmNlLCB0byB0aGVtLCB3aGV0aGVyIHRo
ZSBwcm9qZWN0IGlzIG9wZW4gc291cmNlIG9yIHByb3ByaWV0YXJ5LiBUaGUgc291
cmNlIGNvZGUgaXMgb2Z0ZW4gYSBzY2FyeSBwbGFjZSB0byB2aXNpdCwgc28gaXQg
ZmVlbHMgc2FmZXIgdG8gYXZvaWQgaXQuCgpUaGVyZSBjb3VsZCBiZSBzZXZlcmFs
IHJlYXNvbnMgd2h5IHRoZSBHaXRIdWItZHJpdmVuIGNvbW11bml0eSBoYXMgYmVj
b21lIGRlbWFuZGluZyBhbmQgc2NhcmVkIG9mIHRoZSBzb3VyY2UuIFRoZSByZWFz
b25zIEkgd2FudCB0byBoaWdobGlnaHQgYXJlIGR1ZSB0byBzdWJ0bGV0aWVzIGlu
IHRoZSB1c2VyIGludGVyZmFjZSB3aGljaCBmb2N1cyBvdXIgYXR0ZW50aW9uIG9u
IHRoZSB3cm9uZyB0aGluZ3MuIElzc3VlcyBhbmQgUkVBRE1FIGFyZSB1c3VhbGx5
IHRoZSB0YXJnZXRzIG9mIG91ciBhdHRlbnRpb24uIEl0IGRvZXNuJ3QgbmVlZCB0
byBiZSBsaWtlIHRoYXQsIHRob3VnaC4gSW4gYW5vdGhlciBjb3JuZXIgb2YgdGhl
IHdlYiwgcGVvcGxlIHNoYXJlICJvcGVuIHNvdXJjZSIgcGhvdG9ncmFwaHkgb24g
W3Vuc3BsYXNoXShodHRwczovL3Vuc3BsYXNoLmNvbS8pLCBhbmQgaXQncyBhbiB1
bmRlbWFuZGluZyBwbGFjZSB3aXRoIGEgY3VsdHVyZSBvZiBnaWZ0aW5nLiBJbiBh
IG5vdCB0b28gZGlzdGFudCBuZWlnaGJvcmhvb2Qgb2YgdGhlIHdlYiwgb24gW0dp
dEh1YiBHaXN0XShodHRwOi8vZ2lzdC5naXRodWIuY29tLykgdGhlIHNvdXJjZSBp
cyBhbHNvIG9wZW4sIGJ1dCB0aGVyZSBhcmUgbm8gaXNzdWVzLCBubyBwdWxsIHJl
cXVlc3RzLCBhbmQgdGhlIGNvZGUgaXMgbWFkZSBpbW1lZGlhdGVseSB2aXNpYmxl
LiBBcyBhIHJlc3VsdCwgc2hhcmluZyBjb2RlIHRocm91Z2ggZ2lzdHMgaXMgYXMg
Im9wZW4gc291cmNlIiBhcyBHaXRIdWIgcHVibGljIHJlcG9zaXRvcmllcywgYnV0
IGl0J3MgYSBzcGFjZSBtdWNoIGxlc3MgbGlrZWx5IHRvIGNhdXNlIGJ1cm5vdXQs
IGJlY2F1c2UgaXQgZmF2b3JzIGNvZGUgdGhhdCBpcyAqZ2lmdGVkKiBvdmVyIGNv
ZGUgdGhhdCBpcyAqZGVtYW5kZWQqLgoKQSBnaWZ0IGlzIG5vdCBhIHJlc3BvbnNp
YmlsaXR5LiBPcGVuIHNvdXJjZSBhdXRob3JzIGhhdmUgYWxyZWFkeSAiY29udHJp
YnV0ZWQiIHRvIHRoZSB3b3JsZCBieSBzaW1wbHkgbWFraW5nIHRoZSBzb3VyY2Ug
b3Blbi4gQmVmb3JlIGl0IHNvdW5kcyBsaWtlIEknbSBzdWdnZXN0aW5nIGEgZGl2
aXNpb24gYmV0d2VlbiBhdXRob3JzIGFuZCBjb25zdW1lcnMsIHRoZXNlIGFyZSBz
aXR1YXRpb25hbCByb2xlcywgbm90IHBlcm1hbmVudCB0aXRsZXMuIEEgcHJvZ3Jh
bW1lciBjYW4gY2hhbmdlIGhhdHMgdGhyb3VnaG91dCB0aGUgZGF5LCBidXQgdG8g
a2VlcCBvcGVuIHNvdXJjZSBjb25zdGFudGx5IG1haW50YWluZWQsIGl0IHJlcXVp
cmVzIGEgY3J1Y2lhbCBza2lsbDogd2lsbGluZ25lc3MgdG8gcmVhZCB0aGlyZC1w
YXJ0eSBzb3VyY2UgY29kZS4gSXQgZG9lcyAqbm90KiwgZnVuZGFtZW50YWxseSwg
cmVxdWlyZSB0aGUgYXV0aG9yIG9yIGFuIG9mZmljaWFsIG1haW50YWluZXIuIEl0
IHNpbXBseSByZXF1aXJlcyBzb21lb25lIHdpbGxpbmcgdG8gcmVhZCBhbmQgdW5k
ZXJzdGFuZCB0aGUgY29kZSBpbiBvcmRlciB0byBmaXggaXQuIE9uY2UgdGhlIGZp
eCBpcyByZWFkeSwgYSAqZm9yayogY2FuIGJlIHB1Ymxpc2hlZCwgbm90IHRoZSBv
ZmZpY2lhbC9vcmlnaW5hbCBvbmUuIElkZWFsbHksIGFuIG9wZW4gc291cmNlIHBy
b2plY3QgY2FuIHByb2dyZXNzIGFzIGZvbGxvd3M6CgotIEFsaWNlIHNoYXJlcyB0
aGUgY29kZQotIEFsaWNlIHdpbGxpbmdseSBkb2VzIHNvbWUgdXBkYXRlcyB0byB0
aGUgY29kZQotIEJvYiBpcyBpbnRlcmVzdGVkIGluIGZlYXR1cmUgWCBvciBmaXgg
WAotIEJvYiByZWFkcyB0aGUgc291cmNlLCBkb2VzIGEgcGF0Y2gsIGFuZCByZWxl
YXNlcyBoaXMgb3duIGZvcmsKLSBDaGFybGVzIGlzIGludGVyZXN0ZWQgaW4gZmVh
dHVyZSBZIG9yIGZpeCBZCi0gQ2hhcmxlcyB1c2VzIEJvYidzIGNvZGUgbGlrZSBC
b2IgdXNlZCBBbGljZSdzIGNvZGUKLSBBbGljZSBpcyBoZXJzZWxmICppbnRlcmVz
dGVkKiBpbiBYIGFuZCBZLCBzbyBBbGljZSB0YWtlcyB0aGUgaW5pdGlhdGl2ZSB0
byBtZXJnZSB0aG9zZQoKVGhlcmUgYXJlIHR3byBpbXBvcnRhbnQgY2F2ZWF0cyB3
aXRoIHRoYXQgaWRlYWxpemVkIGFwcHJvYWNoLCB0aG91Z2guIEZpcnN0LCBpdCBh
c3N1bWVzIHRoYXQgcHJvZ3JhbW1lcnMgYXJlIHdpbGxpbmcgdG8gYW5kIGFsbG93
ZWQgdG8gc3BlbmQgdGltZSByZWFkaW5nIGFuZCB1bmRlcnN0YW5kaW5nIHRoaXJk
LXBhcnR5IGNvZGUuIFNlY29uZCwgaXQgd291bGRuJ3Qgd29yayB3ZWxsIGZvciBs
YXJnZSBwcm9qZWN0cy4gSXQgbWFrZXMgbGVzcyBzZW5zZSB0byByZWxlYXNlIG91
ciBvd24gdHdlYWtlZCBmb3JrcyBvZiwgZm9yIGluc3RhbmNlLCBbVHlwZVNjcmlw
dF0oaHR0cDovL3d3dy50eXBlc2NyaXB0bGFuZy5vcmcvKSBvciBbUmVhY3QgTmF0
aXZlXShodHRwOi8vZmFjZWJvb2suZ2l0aHViLmlvL3JlYWN0LW5hdGl2ZS8pLCBi
ZWNhdXNlIGxhcmdlIHByb2plY3RzIGFyZSBoYXJkZXIgdG8gY3VzdG9taXplLCBi
dXQgc3BlY2lhbGx5IGJlY2F1c2UgZm9ya2luZyB0aGVtIHdvdWxkIGRpc3J1cHQg
dGhlIHZlcnkgZm91bmRhdGlvbiBvZiAiY29kZSIgYW5kIG91ciBhYmlsaXR5IHRv
IHNoYXJlIGlkZWFzIHRocm91Z2ggdGhhdCB3ZWxsLWFncmVlZC11cG9uIGZvdW5k
YXRpb24uCgojIyBSZWFkIHNtYWxsIGxpYnJhcmllcywgd3JpdGUgc21hbGwgbGli
cmFyaWVzCgpUaG9zZSB0d28gY2F2ZWF0cywgb24gdGhlIG90aGVyIGhhbmQsIGhp
Z2hsaWdodCB3aGF0IHdlIGNvdWxkIGltcHJvdmUgYXMgYSBjb21tdW5pdHkgb2Yg
cHJvZ3JhbW1lcnM6CgotIFByYWN0aWNlIHJlYWRpbmcgYW5kIHVuZGVyc3RhbmRp
bmcgdGhpcmQtcGFydHkgY29kZQotIEF1dGhvciBzbWFsbGVyIG9wZW4gc291cmNl
IGxpYnJhcmllcwoKUmVhZGluZyB0aGUgc291cmNlIGNvZGUgb2YgbGlicmFyaWVz
IGlzIHNjYXJ5IGluIHRoZSBiZWdpbm5pbmcgYmVjYXVzZSBpdCBsb29rcyBkaWZm
ZXJlbnQgdGhhbiBhcHBsaWNhdGlvbiBjb2RlLiBJZiB5b3UndmUgb25seSB3cml0
dGVuIGNvZGUgdGhhdCBidWlsZHMgZW5kLXVzZXIgc29mdHdhcmUsIHRoZW4geW91
IGhhdmUgYmVlbiBidWlsZGluZyBmaXJzdC1vcmRlciBmZWF0dXJlcy4gTGlicmFy
eSBjb2RlIGlzIGRpZmZlcmVudCBiZWNhdXNlIGl0IGJ1aWxkcyBoaWdoZXItb3Jk
ZXIgZmVhdHVyZXMuIFlvdSBjb3VsZCBzYXksIGxpYnJhcnkgY29kZSBpcyBtb3Jl
IGFic3RyYWN0LiBUbyBtYWtlIGl0IGEgYml0IHNjYXJpZXIsIHRoZSBjb2RlIHN0
eWxlIHVzZWQgaXMgb2Z0ZW4gcXVpdGUgYWxpZW4gdG8gdGhlIGNvZGUgc3R5bGUg
eW91IGFyZSB1c2VkIHRvLiBFdmVyeSBsaWJyYXJ5IGxvb2tzIGRpZmZlcmVudCBi
ZWNhdXNlIGF1dGhvcnMgYXJlIGRpZmZlcmVudC4gSWYgeW91ciBlbXBsb3llciBk
b2Vzbid0IHVuZGVyc3RhbmQgdGhlIGV0aG9zIG9mIG9wZW4gc291cmNlLCB5b3Ug
bWlnaHQgYmUgZXZlbiBkaXJlY3RseSBkaXNjb3VyYWdlZCB0byAid29yayBvbiBv
dGhlciBwZW9wbGUncyBjb2RlIiBkdXJpbmcgd29ya3RpbWUsIGEgY29tbW9uIGJ1
dCBzYWQgcHJhY3RpY2UgaW4gb3VyIGluZHVzdHJ5LgoKVGhhdCBzYWlkLCBJIGNh
bid0IGVtcGhhc2l6ZSBlbm91Z2ggaG93IGhlYWx0aHkgaXQgaXMgYXMgYSBwcm9n
cmFtbWVyIHRvIGJlIGNvbnN0YW50bHkgcmVhZGluZyBkaWZmZXJlbnQgY29kZWJh
c2VzLiBZb3Ugc3RhcnQgbG9va2luZyBhdCBjb2RlIHBhdHRlcm5zIG1vcmUgdGhh
biBjb2RlIHN0eWxlLiBZb3UgbGVhcm4gYSB0cmljayBvciB0d28uIEFuZCB5b3Ug
YWN0dWFsbHkgZW5kIHVwIHVuZGVyc3RhbmRpbmcgdGhlIGxpYnJhcnksIHNvIHRo
ZW4gaXQncyBub3QgaGFyZCB0byBmaXggaXQgb3IgZXZlbiB0YWtlIGluc3BpcmF0
aW9uIHRvIHdyaXRlIHlvdXIgb3duIGxpYnJhcnkgZnJvbSBzY3JhdGNoLiBJZiB5
b3UgaGF2ZW4ndCB5ZXQgd3JpdHRlbiBhIGxpYnJhcnksIEkgcmVjb21tZW5kIHlv
dSB0cnkgaXQgb3V0LCBldmVuIGlmIGl0J3Mgbm90IGdvaW5nIHRvIGJlIHBvcHVs
YXIgYXQgZmlyc3QuCgpTbWFsbCBsaWJyYXJpZXMgYXJlIGVhc2llciB0byByZWFk
IGFuZCB1bmRlcnN0YW5kLiBUaGVyZSBhcmUgcGxlbnR5IG9mIEphdmFTY3JpcHQg
bGlicmFyaWVzIHRoYXQgYWltIHRvIGJlIHRpbnksIHNvIHJlYWRpbmcgdGhlaXIg
c291cmNlIGlzbid0IGdvaW5nIHRvIGNvc3QgeW91IG1vcmUgdGhhbiBhIGZldyBk
b3plbiBtaW51dGVzIG9mIHVuaW50ZXJydXB0ZWQgYXR0ZW50aW9uLiBTbWFsbCBs
aWJyYXJpZXMgYXJlIGVhc3kgdG8gYWJhbmRvbiBhbmQgZWFzeSB0byBmb3JrLiBT
byB0aGVzZSBsaWJyYXJpZXMgc2VlbSB0byBmaXQgd2VsbCBhcyBvcGVuIHNvdXJj
ZSB3aXRob3V0IG1haW50YWluZXJzLgoKVGhlcmUgYXJlIGFjdHVhbGx5IHNldmVy
YWwgbGFyZ2UgcHJvamVjdHMgdGhhdCBjb3VsZCBiZSBzcGxpdCBpbnRvIG11bHRp
cGxlIHNtYWxsIG9uZXMuIEZvciBpbnN0YW5jZSwgUmVhY3QgTmF0aXZlIGNvbWVz
IHdpdGggYSBk7G96ZW4gYnVpbHQtaW4gY29tcG9uZW50cyBhbmQgbmF0aXZlIEFQ
SXMsIGFsbCBpbiBvbmUgbGlicmFyeS4gRWFjaCBvbmUgY291bGQgYmUgbWFkZSBh
cyB0aGVpciBvd24gbGlicmFyeSwgbm90IGluIGEgbW9ub3JlcG8sIGJ1dCBpbiBh
IGRlZGljYXRlZCByZXBvc2l0b3J5LiBUaGlzIGlzIGp1c3QgYSBjb25jcmV0ZSBl
eGFtcGxlLCBub3QgYSBjcml0aWNpc20gdG93YXJkcyBSZWFjdCBOYXRpdmUsIHdo
aWNoIEkgdXNlIGFuZCBhcHByZWNpYXRlLiBUaGVyZSBhcmUgb3RoZXIgcHJvamVj
dHMgdGhhdCBmYWxsIGluIHRoZSBjYXRlZ29yeSBvZiAiYmFnIG9mIHV0aWxpdGll
cyIgd2hlcmUgaXQgd291bGQgYmUgcG9zc2libGUgdG8gc3BsaXQgdGhvc2UgaW50
byBtYW55IHNtYWxsIGxpYnJhcmllcy4KCiMjIFN1cHBvcnRpdmUgZGlzYWdyZWVt
ZW50CgpUaGUgcGFydGl0aW9uIGludG8gc21hbGwgbGlicmFyaWVzIGhhcyB0byBk
byB3aXRoICptaW5pbWl6aW5nIGNvbnNlbnN1cyouIFNlYmFzdGlhbiBNYXJrYmFn
ZSBvbmNlIFtzcG9rZSBhYm91dCBtaW5pbWl6aW5nIEFQSSBzdXJmYWNlXShodHRw
czovLzIwMTQuanNjb25mLmV1L3NwZWFrZXJzL3NlYmFzdGlhbi1tYXJrYmFnZS1t
aW5pbWFsLWFwaS1zdXJmYWNlLWFyZWEtbGVhcm5pbmctcGF0dGVybnMtaW5zdGVh
ZC1vZi1mcmFtZXdvcmtzLmh0bWwpLiBJJ2xsIHJlbWl4IHRoYXQgaWRlYSBhbmQg
cHJvcG9zZTogd2hhdCBpZiB3ZSB3b3VsZCAqKm1pbmltaXplIHRoZSBjb25zZW5z
dXMgc3VyZmFjZSoqIG9mIG9wZW4gc291cmNlIHByb2plY3Q/IElmIHdlIGFncmVl
IHRvIG9ubHkgYSBmZXcgdGhpbmdzLCB0aGVuIHdlIGFyZSBmcmVlIHRvIGRpc2Fn
cmVlIGluIG90aGVyIGFzcGVjdHMuIERpc2FncmVlbWVudHMgYXJlIHBhaW5mdWwg
d2hlbiB3ZSBoYXZlIHRvIGNob29zZSBvbmUgd2lubmVyLCBiZWNhdXNlIHNvbWVv
bmUgd2lsbCBlbmQgdXAgZGlzYXBwb2ludGVkLiBCdXQgZGlzYWdyZWVtZW50IG1l
YW5zIGZyZWVkb20gd2hlbiB3ZSBkb24ndCBoYXZlIHRvIGFncmVlLCBiZWNhdXNl
IGRpdmVyc2l0eSBvZiBvcGluaW9ucyBvbiBob3cgYW5kIHdoYXQgdG8gYnVpbGQg
YXJlIGEgZ3JlYXQgdGhpbmcuIEkgZG9uJ3QgbGlrZSB0aGUgRW5nbGlzaCB3b3Jk
IGZvciBkaXNhZ3JlZW1lbnQsIGl0IGhhcyBuZWdhdGl2ZSBjb25ub3RhdGlvbnMg
KCJBIGZhaWx1cmUgb3IgcmVmdXNhbCB0byBhZ3JlZSIsICJhIGNvbmZsaWN0IG9y
IGRpZmZlcmVuY2Ugb2Ygb3BpbmlvbiIsIFthY2NvcmRpbmcgdG8gdGhlIGRpY3Rp
b25hcnldKGh0dHBzOi8vd3d3LnRoZWZyZWVkaWN0aW9uYXJ5LmNvbS9kaXNhZ3Jl
ZW1lbnQpKS4gSW4gRmlubmlzaCwgd2UganVzdCBzYXkgInRvIGhhdmUgYSBkaWZm
ZXJlbnQgbWluZCIgKCJvbGxhIGVyaSBtaWVsdMOkIikuIExhbmd1YWdlIG1vbGRz
IG91ciBzb2NpYWwgaW50ZXJhY3Rpb25zIHNvIG11Y2ggdGhhdCBpdCBzb21ldGlt
ZXMgZm9yYmlkcyB1cyB0byBzZWUgdGhlIHBvc2l0aXZlIHNpZGUgb2YgdHJhZGl0
aW9uYWxseSBuZWdhdGl2ZSBjb25jZXB0cy4KClRoaXMga2luZCBvZiBmcmVlZG9t
IHRvIGRpc2FncmVlIGdpdmVzIGdyZWVuIGxpZ2h0IHRvIGNyZWF0aXZlIGFuZCB3
aWxkIGlkZWFzLCBhbmQgc29tZXRpbWVzIHRob3NlIHdpbGQgaWRlYXMgbGVhZCB0
byBhbiBhbWF6aW5nIGRpc2NvdmVyeS4gTWF5YmUgdGhhdCBkaXNjb3ZlcnkgZW5k
cyB1cCBiZWNvbWluZyB0aGUgbmV3IGZvdW5kYXRpb24gb24gd2hpY2ggZXZlcnlv
bmUgYWdyZWVzIGJlbG9uZ3MgdG8gdGhlIG1pbmltYWwgc3VyZmFjZSBvZiBjb25z
ZW5zdXMsIGFuZCB0aHVzIHByb21vdGluZyBkaXNhZ3JlZW1lbnQgY2FuIGFjdHVh
bGx5IGFjY2VsZXJhdGUgdXMgdG93YXJkcyBhZ3JlZW1lbnQgYW5kIHByb2dyZXNz
LiBPbiBhIG1vcmUgbWV0YS1sZXZlbCwgSSdtIHRhbGtpbmcgYWJvdXQgY3VsdHVy
ZSwgdGhlIGRlZmluaXRpb24gb2YgY29sbGVjdGl2ZSBpbnRlbGxpZ2VuY2UsIGFu
ZCB0YW5nZW50aWFsbHkgYWxzbyBhYm91dCBpbmRpdmlkdWFsIGludGVsbGlnZW5j
ZS4gQnV0IGJlZm9yZSBJIGRpZ3Jlc3MsIGxldCdzIGdvIGJhY2sgdG8gb3BlbiBz
b3VyY2UgbGlicmFyaWVzLgoKSSd2ZSBzZWVuIGEgY29tbXVuaXR5IG9mIHNtYWxs
IGxpYnJhcmllcyB3aXRoIG1pbmltYWwgY29uc2Vuc3VzIHN1cmZhY2UgYW1vbmcg
dGhlIFtwdWxsLXN0cmVhbV0oaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2Uv
cHVsbC1zdHJlYW0pIGNvbW11bml0eS4gVGhlIGFncmVlZCBBUEkgaXMgc2ltcGxl
IGFuZCBzbWFsbCwgYW5kIHRoZXJlIGFyZSBbaHVuZHJlZHMgb2YgbnBtIHBhY2th
Z2VzXShodHRwczovL3d3dy5ucG1qcy5jb20vc2VhcmNoP3E9cHVsbC1zdHJlYW0p
IGZvciBwdWxsLXN0cmVhbSB0aGF0IHdlcmUgKmdpZnRlZCogYnkgYXV0aG9ycyB3
aG8gc29tZXRpbWVzIGFyZSBhbHNvIGNvbnN1bWVycyBvZiBwdWxsLXN0cmVhbSBs
aWJyYXJpZXMuIEFzIGFuIGV4YW1wbGUsIEknbSBvZnRlbiBqdXN0IGEgY29uc3Vt
ZXIgb2YgcHVsbC1zdHJlYW0gbGlicmFyaWVzLCBidXQgSSB3cm90ZSBhdCBsZWFz
dCBvbmUgc21hbGwgcGFja2FnZSwgW3B1bGwtd29ya2Vyc10oaHR0cHM6Ly9naXRo
dWIuY29tL3N0YWx0ei9wdWxsLXdvcmtlcikuCgpJIGRlY2lkZWQgdG8gdGFrZSB0
aGlzIGFwcHJvYWNoIGV2ZW4gbW9yZSByYWRpY2FsbHkgd2hlbiBJIHB1Ymxpc2hl
ZCBbQ2FsbGJhZ3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9jYWxsYmFnL2NhbGxiYWcp
LiBUaGUgY29uc2Vuc3VzIHN1cmZhY2UgY29udGFpbnMgemVybyBjb2RlLCBhY3R1
YWxseSwgaXQncyBqdXN0IGEgc3BlY2lmaWNhdGlvbi4gVGhpcyBpcyB0aGUgb25s
eSB0aGluZyBJIGV4cGVjdCBwZW9wbGUgdG8gYWdyZWUgdXBvbi4gVGhlIHJlc3Qs
IGl0J3MgYWxsIHVwIHRvIHRoZSBjb21tdW5pdHkuCgpJIG1hZGUgc29tZSBpbml0
aWFsIHBhY2thZ2VzIGp1c3QgdG8gZ2V0IHRoaW5ncyBzdGFydGVkIGFuZCBwcm92
aWRlIGV4YW1wbGVzLCBhcyB3ZWxsIGFzIHByb29mcyB0aGF0IHRoaW5ncyB3b3Jr
OiBbY2FsbGJhZy1iYXNpY3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9zdGFsdHovY2Fs
bGJhZy1iYXNpY3MpLiBCdXQgdGhlc2UgdXRpbGl0aWVzIGFyZSBmYXIgZnJvbSBi
ZWluZyAib2ZmaWNpYWwiIHBhY2thZ2VzLiBUaGV5IGFyZSBhbHNvIHZlcnkgdGlu
eSwgZWFjaCBvbmUgaXMgaW1wbGVtZW50ZWQgaW4gb2Z0ZW4gW2xlc3MgdGhhbiAz
MCBsaW5lcyBvZiBjb2RlXShodHRwczovL2dpdGh1Yi5jb20vc3RhbHR6L2NhbGxi
YWctc2Nhbi9ibG9iLzc2ZTA1MjA2NmQxYjI0MTkxYzI0YjRkMjZlNTVkNDcwZWJl
ODJjZTUvaW5kZXguanMpLCBpbnZpdGluZyBwZW9wbGUgdG8gcmVhZCBpdCB3aXRo
b3V0IGZlYXIuIEkgcGFpZCBjYXJlZnVsIGF0dGVudGlvbiB0byBob3N0IHRoZW0g
dW5kZXIgbXkgb3duIEdpdEh1YiBhY2NvdW50LCBub3QgdW5kZXIgdGhlIG9mZmlj
aWFsIFtjYWxsYmFnIG9yZ10oaHR0cHM6Ly9naXRodWIuY29tL2NhbGxiYWcpLgoK
QXMgYSBnb2FsLCBJIHdhbnQgY2FsbGJhZ3MgdG8gYmUgYW4gb3BlbiBzb3VyY2Ug
cHJvamVjdCB3aXRob3V0IG1haW50YWluZXJzLiBJZiB5b3Ugc2VuZCBtZSBhbiBp
c3N1ZSBvciBhIHB1bGwgcmVxdWVzdCwgSSdsbCB0cnkgdG8gcG9saXRlbHkgaW5m
b3JtIHRoYXQuLi4gSSBkb24ndCByZWFsbHkgY2FyZS4gVGhhdCdzIGJlY2F1c2Us
IGZyb20gZXhwZXJpZW5jZSBidWlsZGluZyBbdHdvIHN0cmVhbSBsaWJyYXJpZXNd
KGh0dHBzOi8vc3RhbHR6LmNvbS93aHktd2UtbmVlZC1jYWxsYmFncy5odG1sKSwg
dGhlcmUgYXJlIG1hbnkgYXNwZWN0cyB0aGF0IHdlIGRvbid0IG5lZWQgdG8gYWdy
ZWUgdXBvbi4gSWYgdGhlIHByb2plY3QgbWFrZXMgaXQgZWFzeSB0byBkaXNhZ3Jl
ZSBhbmQgZm9yaywgdGhlbiB0aGUgY29tbXVuaXR5IGNhbiByZWR1Y2UgdGhlIGVm
ZmVjdHMgb2YgaW5mbGljdGVkIG1haW50ZW5hbmNlIGJ1cmRlbi4gSSBjYWxsIHRo
aXMgInN1cHBvcnRpdmUgZGlzYWdyZWVtZW50Iiwgd2hlcmUgSSBkb24ndCB0cnkg
dG8gdW5kZXJtaW5lIHlvdXIgb3BpbmlvbizqIGJ1dCBpbnN0ZWFkIEkgYWNrbm93
bGVkZ2UgdGhhdCB3ZSBkaXNhZ3JlZSBhbmQgdGhlbiBzdXBwb3J0IGFuZCBlbmNv
dXJhZ2UgeW91IHRvIGV4cHJlc3MgeW91ciBvd24gb3BpbmlvbnMuCgpUbyBteSBz
dXJwcmlzZSwgaW4gdGhlIGZpcnN0IHdlZWsgSSBhbHJlYWR5IHNhdyBbb3RoZXIg
Y2FsbGJhZyBwYWNrYWdlcyBwdWJsaXNoZWQgb24gbnBtXShodHRwczovL3d3dy5u
cG1qcy5jb20vc2VhcmNoP3E9Y2FsbGJhZykuIFRoZSBvbmUgdGhhdCBtYWRlIG1l
IHNtaWxlIHRoZSBtb3N0IHdhcyBbY2FsbGJhZy1zdWJzY3JpYmVdKGh0dHBzOi8v
d3d3Lm5wbWpzLmNvbS9wYWNrYWdlL2NhbGxiYWctc3Vic2NyaWJlKS4gSXQgc3Rh
cnRlZCBhcyBhIFtQUiB0aGF0IGRpc2FncmVlZCB3aXRoIHRoZSBvcmlnaW5hbCBw
YWNrYWdlJ3MgcHVycG9zZV0oaHR0cHM6Ly9naXRodWIuY29tL3N0YWx0ei9jYWxs
YmFnLW9ic2VydmUvcHVsbC8xKSwgdGhlbiBhZnRlciBzdXBwb3J0aW5nIHRoZSBk
aXNhZ3JlZW1lbnQgYXMgYSBmb3JrLCBpdCBiZWNhbWUgaXRzIG93biBwYWNrYWdl
LiBBcyBhIHJlc3VsdCwgYW4gb3BlbiBzb3VyY2UgY29uc3VtZXIgYmVjYW1lLCBp
biBob3VycywgYW4gb3BlbiBzb3VyY2UgYXV0aG9yLgoKT3BlbiBzb3VyY2Ugd2l0
aG91dCBtYWludGFpbmVycyBpcyBwcm9iYWJseSBhbiB1dG9waWFuIGdvYWwgdGhh
dCBmb3Igbm93IGFwcGxpZXMgdG8gb25seSBzb21lIHR5cGVzIG9mIGxpYnJhcmll
cy4gSSBjb3VsZG4ndCBhcHBseSBpdCB0byBbQ3ljbGUuanNdKGh0dHBzOi8vY3lj
bGUuanMub3JnLyksIGZvciBpbnN0YW5jZSwgd2hlcmUgYSBjb3JlIHRlYW0gb2Yg
WzMgbWFpbnRhaW5lcnMgYXJlIHJlc3BvbnNpYmxlXShodHRwczovL29wZW5jb2xs
ZWN0aXZlLmNvbS9jeWNsZWpzKSBmb3Iga2VlcGluZyB0aGUgZnJhbWV3b3JrIHVw
LXRvLWRhdGUuIEJ1dCBJIGhvcGUgSSBoYXZlIHNob3dlZCBob3cgb3BlbiBzb3Vy
Y2Ugd2l0aG91dCBtYWludGFpbmVycyBjYW4gYmUgYSBoZWFsdGh5IHRhcudnZXQg
dG8gYWltIGZvci4gT3ZlcmFsbCwgd2UgbmVlZCB0byBkZWNyZWFzZSBidXJub3V0
cywgd2UgbmVlZCBtb3JlIG9wZW4gc291cmNlIGF1dGhvcnMsIG1vcmUgc3VwcG9y
dCBmb3IgZGl2ZXJzZSBvcGluaW9ucywgbGVzc+UgYWdyZWVtZW50LCBsZXNzIGRl
bWFuZHMsIG1vcmUgZ+RpZnRpbmcsIG1vcmUgZ3Jh43RpdHVkZS4KAMLAXAQAAQoA
EAUCWnxtsAkQnt4j6n6KSJAAAJhSCABDxARD7ZyIwQg+qkO2sjvwXat1Kn0/YukI
AbCzLSZM0/DCM7uKTmHTJMeSoVaZWTYxoj4Moqr9NRnOqp+JgCJcKwjbpumKE1Jn
4Sib3r5JOil/4f3wO00jP0qApPfVCxCQyt2tQvXVIvP5moZhIkYdVpSP+O7B8C5O
FRgNEX0WVPRTWlBBIoSoCeSeXWsoO9GAnwppgkdCwozNMBQ1MkbSaVzajO6evg/w
l3jOoXkjFrdBdYFjwsRXKcLFGqCZsUsNWBlknx+K1O/nj9PUP2kTvu4YPGV/GEAf
HwcwW1k+JQf0vbsfgrE+lP6jYfyyGhJB4VkFvemxopGcmvvkHvWR
=TRjg
-----END PGP MESSAGE-----
