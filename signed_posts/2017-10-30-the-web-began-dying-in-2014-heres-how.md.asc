-----BEGIN PGP MESSAGE-----
Comment: https://keybase.io/download
Version: Keybase Go 1.0.23 (darwin)

xA0DAAoBnt4j6n6KSJABy+F0AOIAAAAA7i0tLQpsYXlvdXQ6IHBvc3QKdGl0bGU6
ICJUaGUgV2ViIGJlZ2FuIGR5aW5nIGluIDIwMTQsIGhlcmUncyBob3ciCnRhZ3M6
IFtibG9nXQotLS0KCkJlZm9yZSB0aGUgeWVhciAyMDE0LCB0aGVyZSB3ZXJlIG1h
bnkgcGVvcGxlIHVzaW5nIEdvb2dsZSwgRmFjZWJvb2ssIGFuZCBBbWF6b24uIFRv
ZGF5LCB0aGVyZSBhcmUgc3RpbGwgbWFueSBwZW9wbGUgdXNpbmcgc2VydmljZXMg
ZnJvbSB0aG9zZSB0aHJlZSB0ZWNoIGdpYW50cyAocmVzcGVjdGl2ZWx5LCBHT09H
LCBGQiwgQU1aTikuIE5vdCBtdWNoIGhhcyBjaGFuZ2VkLCBhbmQgcXVpdGUgbGl0
ZXJhbGx5IHRoZSB1c2VyIGludGVyZmFjZSBhbmQgZmVhdHVyZXMgb24gdGhvc2Ug
c2l0ZXMgaGFzIHJlbWFpbmVkIG1vc3RseSB1bnRvdWNoZWQuIEhvd2V2ZXIsIHRo
ZSB1bmRlcmx5aW5nIGR5bmFtaWNzIG9mIHBvd2VyIG9uIHRoZSBXZWIgaGF2ZSBk
cmFzdGljYWxseSBjaGFuZ2VkLCBhbmQgdGhvc2UgdGhyZWUgY29tcGFuaWVzIGFy
ZSBhdCB0aGUgY2VudGVyIG9mIGEgZnVuZGFtZW50YWwgdHJhbnNmb3JtYXRpb24g
b2YgdGhlIFdlYi4KCj4gKkl0IGxvb2tzIGxpa2Ugbm90aGluZyBjaGFuZ2VkIHNp
bmNlIDIwMTQsIGJ1dCBHT09HIGFuZCBGQiBub3cgaGF2ZSBkaXJlY3QgaW5mbHVl
bmNlIG92ZXIgNzAlKyBvZiBpbnRlcm5ldCB0cmFmZmljLioKCkludGVybmV0IGFj
dGl2aXR5IGl0c2VsZiBoYXNuJ3Qgc2xvd2VkIGRvd24uIEl0IG1haW50YWlucyBh
IHN0ZWFkeSBncm93dGgsIGJvdGggaW4gYW1vdW50IG9mIHVzZXJzIGFuZCBhbW91
bnQgb2Ygd2Vic2l0ZXM6CgpbIVtBbW91bnQgb2YgaW50ZXJuZXQgdXNlcnMgYW5k
IHdlYnNpdGVzIGZyb20gMjAxMSB0byAyMDE3XSgvaW1nL2NoYXJ0LXNpdGVzLWFu
ZC11c2Vycy5wbmcpXSgvaW1nL2NoYXJ0LXNpdGVzLWFuZC11c2Vycy5wbmcpCgoo
U291cmNlczogW2h0dHBzOi8vbmV3cy5uZXRjcmFmdC5jb20vYXJjaGl2ZXMvY2F0
ZWdvcnkvd2ViLXNlcnZlci1zdXJ2ZXldKGh0dHBzOi8vbmV3cy5uZXRjcmFmdC5j
b20vYXJjaGl2ZXMvY2F0ZWdvcnkvd2ViLXNlcnZlci1zdXJ2ZXkpIGFuZCBbaHR0
cDovL3d3dy5pbnRlcm5ldGxpdmVzdGF0cy5jb20vaW50ZXJuZXQtdXNlcnMvXSho
dHRwOi8vd3d3LmludGVybmV0bGl2ZXN0YXRzLmNvbS9pbnRlcm5ldC11c2Vycy8p
KQoKV2hhdCBoYXMgY2hhbmdlZCBvdmVyIHRoZSBsYXN0IDQgeWVhcnMgaXMgbWFy
a2V0IHNoYXJlIG9mIHRyYWZmaWMgb24gdGhlIFdlYi4gSXQgbG9va3MgbGlrZSBu
b3RoaW5nIGhhcyBjaGFuZ2VkLCBidXQgR09PRyBhbmQgRkIgbm93IGhhdmUgZGly
ZWN0IGluZmx1ZW5jZSBvdmVyIDcwJSsgb2YgaW50ZXJuZXQgdHJhZmZpYy4gTW9i
aWxlIGludGVybmV0IHRyYWZmaWMgaXMgbm93IHRoZSBbbWFqb3JpdHkgb2YgdHJh
ZmZpYyB3b3JsZHdpZGVdKGh0dHBzOi8vd3d3LnN0YXRpc3RhLmNvbS9zdGF0aXN0
aWNzLzMwNjUyOC9zaGFyZS1vZi1tb2JpbGUtaW50ZXJuZXQtdHJhZmZpYy1pbi1n
bG9iYWwtcmVnaW9ucy8pIGFuZCBpbiBMYXRpbiBBbWVyaWNhIGFsb25lLCBHT09H
IGFuZCBGQiBzZXJ2aWNlcyBoYXZlIGhhZCA2MCUgb2YgbW9iaWxlIHRyYWZmaWMg
aW4gMjAxNSwgZ3Jvd2luZyB0byA3MCUgYnkgdGhlIGVuZCBvZiAyMDE2LiBUaGUg
cmVtYWluaW5nIDMwJSBvZiB0cmFmZmljIGlzIHNoYXJlZCBhbW9uZyBhbGwgb3Ro
ZXIgbW9iaWxlIGFwcHMgYW5kIHdlYnNpdGVzLiBNb2JpbGUgZGV2aWNlcyBhcmUg
cHJpbWFyaWx5IHVzZWQgZm9yIGFjY2Vzc2luZyBHT09HIGFuZCBGQiBuZXR3b3Jr
cy4KClshW1NoYXJlIG9mIGludGVybmV0IHRyYWZmaWMgaW4gTGF0aW4gQW1lcmlj
YSBmcm9tIDIwMTUgdG8gMjAxNl0oL2ltZy9pbnRlcm5ldC1sYXRpbi1hbWVyaWNh
LTIwMTYucG5nKV0oL2ltZy9pbnRlcm5ldC1sYXRpbi1hbWVyaWNhLTIwMTYucG5n
KQoKKFNvdXJjZTogW2h0dHBzOi8vd3d3LnNhbmR2aW5lLmNvbS9yZXNvdXJjZXMv
Z2xvYmFsLWludGVybmV0LXBoZW5vbWVuYS8yMDE2L25vcnRoLWFtZXJpY2EtYW5k
LWxhdGluLWFtZXJpY2EuaHRtbF0oaHR0cHM6Ly93d3cuc2FuZHZpbmUuY29tL3Jl
c291cmNlcy9nbG9iYWwtaW50ZXJuZXQtcGhlbm9tZW5hLzIwMTYvbm9ydGgtYW1l
cmljYS1hbmQtbGF0aW4tYW1lcmljYS5odG1sKSkKCj4gKlRoZSBwcmVzcywgdW5s
aWtlIGJlZm9yZSwgZGVwZW5kcyBvbiBHT09HLUZCIHRvIHN0YXkgaW4gYnVzaW5l
c3MuKgoKQW5vdGhlciBkZW1vbnN0cmF0aW9uIG9mIEdPT0cgYW5kIEZCIGRvbWlu
YW5jZSBjYW4gYmUgc2VlbiBhbW9uZyBtZWRpYSB3ZWJzaXRlcy4gVGhlIG1vc3Qg
cG9wdWxhciB3ZWIgcHJvcGVydGllcyB0aGF0IGRvbid0IGJlbG9uZyB0byBHT09H
IG5vciBGQiBhcmUgdXN1YWxseSBmcm9tIHRoZSBwcmVzcy4gRm9yIGluc3RhbmNl
LCBpbiB0aGUgVVNBIHRoZXJlIGFyZSBbNiBtZWRpYSBzaXRlcyBpbiB0aGUgdG9w
IDEwIHdlYnNpdGVzXShodHRwczovL3d3dy5zdGF0aXN0YS5jb20vc3RhdGlzdGlj
cy8yNzE0MTIvbW9zdC12aXNpdGVkLXVzLXdlYi1wcm9wZXJ0aWVzLWJhc2VkLW9u
LW51bWJlci1vZi12aXNpdG9ycy8pOyBpbiBCcmF6aWwgdGhlcmUgYXJlIFs2IG1l
ZGlhIHNpdGVzIGluIHRoZSB0b3AgMTBdKGh0dHBzOi8vd3d3LnN0YXRpc3RhLmNv
bS9zdGF0aXN0aWNzLzI1NDcyNy9tb3N0LXZpc2l0ZWQtd2ViLXByb3BlcnRpZXMt
aW4tYnJhemlsLyk7IGluIFVLIGl0IGlzIFs1IG91dCAxMF0oaHR0cHM6Ly93d3cu
c3RhdGlzdGEuY29tL3N0YXRpc3RpY3MvMjcyODcxL2xlYWRpbmctaW50ZXJuZXQt
cHJvcGVydGllcy1pbi10aGUtdWstYnktdW5pcXVlLXZpc2l0b3JzLykuCgpGcm9t
IHdoZXJlIGRvIG1lZGlhIHNpdGVzIGdldCB0aGVpciB0cmFmZmljPyBQcmlvciB0
byAyMDE0LCBTZWFyY2ggRW5naW5lIE9wdGltaXphdGlvbiAoU0VPKSB3YXMgYSBj
b21tb24gcHJhY3RpY2UgYW1vbmcgV2ViIERldmVsb3BlcnMgdG8gaW1wcm92ZSB0
aGVpciBzaXRlIGZvciBHb29nbGUgc2VhcmNoZXMsIHNpbmNlIGl0IGFjY291bnRl
ZCBmb3IgYXBwcm94aW1hdGVseSAzNSUgb2YgdHJhZmZpYywgd2hpbGUgbW9yZSB0
aGFuIDUwJSBvZiB0cmFmZmljIGNhbWUgZnJvbSB2YXJpb3VzIG90aGVyIHBsYWNl
cyBvbiB0aGUgV2ViLiBTRU8gd2FzIGltcG9ydGFudCwgd2hpbGUgRmFjZWJvb2sg
cHJlc2VuY2Ugd2FzIG5pY2UtdG8taGF2ZS4gT3ZlciB0aGUgbmV4dCAzIHllYXJz
LCB0cmFmZmljIGZyb20gRmFjZWJvb2sgZ3JldyB0byBiZSBhcHByb3hpbWF0ZWx5
IFs0NSVdKGh0dHA6Ly93d3cucmV1dGVycy5jb20vYXJ0aWNsZS91cy11c2EtaW50
ZXJuZXQtc29jaWFsbWVkaWEvdHdvLXRoaXJkcy1vZi1hbWVyaWNhbi1hZHVsdHMt
Z2V0LW5ld3MtZnJvbS1zb2NpYWwtbWVkaWEtc3VydmV5LWlkVVNLQ04xQkoyQTgp
LCBzdXJwYXNzaW5nIHRoZSBzdGF0dXMgdGhhdCBTZWFyY2ggdHJhZmZpYyBoYWQu
IEluIDIwMTcsIHRoZSBNZWRpYSBkZXBlbmRzIG9uIGJvdGggR29vZ2xlIGFuZCBG
YWNlYm9vayBmb3IgcGFnZSB2aWV3cywgc2luY2UgaXQncyB0aGUgbWFqb3JpdHkg
b2YgdGhlaXIgdHJhZmZpYy4KClshW1JlZmVycmFsIHNvdXJjZSBvZiB0cmFmZmlj
IHRvIHRvcCB3ZWIgcHVibGlzaGVyc10oL2ltZy9yZWZlcnJhbC10by10b3AtcHVi
bGlzaGVycy5wbmcpXSgvaW1nL3JlZmVycmFsLXRvLXRvcC1wdWJsaXNoZXJzLnBu
ZykKCihTb3VyY2U6IFtodHRwczovL2Jsb2cucGFyc2UubHkvcG9zdC8yODU1L2Zh
Y2Vib29rLWNvbnRpbnVlcy10by1iZWF0LWdvb2dsZS1pbi1zZW5kaW5nLXRyYWZm
aWMtdG8tdG9wLXB1Ymxpc2hlcnMvXShodHRwczovL2Jsb2cucGFyc2UubHkvcG9z
dC8yODU1L2ZhY2Vib29rLWNvbnRpbnVlcy10by1iZWF0LWdvb2dsZS1pbi1zZW5k
aW5nLXRyYWZmaWMtdG8tdG9wLXB1Ymxpc2hlcnMvKSkKClRoZSByZWxhdGlvbnNo
aXAgYmV0d2VlbiBtZWRpYSBzaXRlcyBhbmQgdGhlIHR3byB0ZWNoIGdpYW50cyBp
cyBbZGlmZmljdWx0XShodHRwczovL3d3dy50aGV2ZXJnZS5jb20vMjAxNy83LzEw
LzE1OTQ4MTk2KS4gSW4gMjAxNCwgRkIgYnVpbHQgRmFjZWJvb2sgUGFwZXIgYXMg
YW4gYXR0ZW1wdCB0byBoYXZlIGEgbGFyZ2VyIGNvbnRyb2wgb3ZlciBuZXdzIGNv
bnN1bXB0aW9uLiBUaGVpciB0YWN0aWMgZmFpbGVkLCBidXQgdGhlaXIgc3RyYXRl
Z3kgcGVyc2lzdGVkIHRocm91Z2ggZGlmZmVyZW50IG1lYW5zIHN1Y2ggYXMgRmFj
ZWJvb2sgSW5zdGFudCBBcnRpY2xlcy4gVGhlIG1lZGlhLCBiZWluZyBkZXBlbmRl
bnQgb24gc29jaWFsIHRyYWZmaWMgYW5kIHRocmVhdGVuZWQgYnkgdGhlIHNvY2lh
bCBiZWhlbW90aCwgcmVhY3RlZC4gVGhleSBbcHVsbGVkIG91dCBzdXBwb3J0IGZv
ciBJbnN0YW50IEFydGljbGVzXShodHRwczovL3d3dy50aGV2ZXJnZS5jb20vMjAx
Ny80LzE2LzE1MzE0MjEwKS4KCk1lYW53aGlsZSwgR09PRyBub3RpY2VzIGhvdyBp
dHMgU2VhcmNoIHRyYWZmaWMgaGFkbid0IGltcHJvdmVkLCB3aGlsZSBGYWNlYm9v
ayBoYWQgcGlja2VkIHVwIHN0ZWFtLCBzbyBHT09HIGxhdW5jaGVzIHRoZWlyIElu
c3RhbnQgQXJ0aWNsZXMgYWx0ZXJuYXRpdmUgY2FsbGVkIEFtcGxpZmllZCBNb2Jp
bGUgUGFnZXMgKEFNUCkgYW5kIHByb2FjdGl2ZWx5IHN0YXJ0cyBzZXJ2aW5nIGFy
dGljbGVzIGZyb20gR09PRyBzZXJ2ZXJzIGluc3RlYWQgb2YgZGlyZWN0aW5nIHRy
YWZmaWMgdG8gbWVkaWEgc2l0ZXMuIFRoZSBwcmVzcyByZWFjdHMgc2ltaWxhcmx5
IHRvIGhvdyB0aGV5IGRpZCBmb3IgRkI6IHJlcG9ydGVkIGJvbGQgc3RvcmllcyBh
Ym91dCB0aGUgU2VhcmNoIGJlaGVtb3RoJ3MgdGhpcnN0IGZvciBjb250cm9sIG92
ZXIgbmV3cyBjb25zdW1wdGlvbi4KCj4gKkdPT0cgYW5kIEZCIGNlYXNlZCBjb21w
ZXRpbmcgZGlyZWN0bHksIGZvY3VzaW5nIG9uIHdoYXQgdGhleSBkbyBiZXN0IGlu
c3RlYWQuKgoKRGF0YSBzaG93cyBGQiBoYXMgZHJhbWF0aWNhbGx5IGltcHJvdmVk
IGl0cyBkb21pbmFuY2Ugb24gdGhlIFdlYiwgd2hpbGUgR29vZ2xlIFNlYXJjaCBo
YXNuJ3Qgc2lnbmlmaWNhbnRseSBjaGFuZ2VkLiBIb3cgZXhhY3RseSBkaWQgRkIg
YWNoaWV2ZSB0aGF0LCBhbmQgd2hhdCBldmVudHMgd2VyZSBrZXkgdG8gdGhhdCBk
ZXZlbG9wbWVudD8gUHJpb3IgdG8gMjAxNCwgYm90aCBjb21wYW5pZXMgaGFkIGEg
cG9ydGZvbGlvIG9mIG11bHRpcGxlIHdlYiBzZXJ2aWNlcy4gR09PRyBoYWRuJ3Qg
eWV0IGJlY29tZSBBbHBoYWJldCwgc28gaXQncyBmb2N1cyB3YXMgZGlmdXNlZC4g
R09PRyB3YXMgdHJ5aW5nIHRvIGVudGVyIHRoZSBzb2NpYWwgbWFya2V0LCBmaXJz
dCB3aXRoIEdvb2dsZSBXYXZlLCB0aGVuIEdvb2dsZSBCdXp6LCBPcmt1dCwgYW5k
IEdvb2dsZSsuIEluIHRvdGFsLCBbR09PRyBoYXMgYWNxdWlyZWQgMTggY29tcGFu
aWVzIGZyb20gdGhlIHNvY2lhbCBtZWRpYSBjYXRlZ29yeV0oaHR0cHM6Ly93d3cu
Z2Vja29ib2FyZC5jb20vdGVjaC1hY3F1aXNpdGlvbnMvKSwgb2Ygd2hpY2ggb25s
eSAxIGFjcXVpc2l0aW9uIGhhcHBlbmVkIHBvc3QtMjAxNCwgd2hpbGUgNSBvZiB0
aG9zZSBoYXBwZW5lZCBpbiAyMDEwIGFsb25lLiBGQiB3YXMgY29tcGV0aW5nIGlu
IHRoZSBzZWFyY2ggbWFya2V0LCB0aHJvdWdoIEJpbmcsIGluIHBhcnRuZXJzaGlw
IHdpdGggTVNGVC4KCkR1cmluZyAyMDE0LCBGQiBhcHBhcmVudGx5IHJlb3JnYW5p
emVkIGl0c2VsZiB0byBmb2N1cyBvbiBzb2NpYWwgb25seS4gSW4gRmVicnVhcnks
IGl0IGJvdWdodCBXaGF0c0FwcCwgZm9yIDExIHRpbWVzIHRoZSBwcmljZSBHT09H
IGJvdWdodCBZb3VUdWJlLiBJbiBEZWNlbWJlciwgaXQgY2FuY2VsZWQgaXRzIEJp
bmcgcGFydG5lcnNoaXAgd2l0aCBNU0ZULiBVc2VyIHJldGVudGlvbiBvbiBGYWNl
Ym9vay5jb20gZ3JldyBzdGVhZGlseSAoc2VlIGNoYXJ0IGJlbG93KS4gVGhyb3Vn
aCBpdHMgZm91ciBzaW1wbGUgcHJvZHVjdHMsIEZhY2Vib29rLCBXaGF0c0FwcCwg
TWVzc2VuZ2VyLCBhbmQgSW5zdGFncmFtLCBGQiBoYWQgYmVjb21lIHRoZSBzb2Np
YWwgc3VwZXJwb3dlci4KClshW0ZhY2Vib29rIGRhaWx5IGFjdGl2ZSB1c2VycyAo
REFVKSBkaXZpZGVkIGJ5IEZhY2Vib29rIG1vbnRobHkgYWN0aXZlIHVzZXJzIChN
QVUpXSgvaW1nL2ZhY2Vib29rLXJldGVudGlvbi5wbmcpXSgvaW1nL2ZhY2Vib29r
LXJldGVudGlvbi5wbmcpCgooU291cmNlczogW2h0dHBzOi8vd3d3LnN0YXRpc3Rh
LmNvbS9zdGF0aXN0aWNzLzM0NjE2Ny9mYWNlYm9vay1nbG9iYWwtZGF1L10oaHR0
cHM6Ly93d3cuc3RhdGlzdGEuY29tL3N0YXRpc3RpY3MvMzQ2MTY3L2ZhY2Vib29r
LWdsb2JhbC1kYXUvKSBhbmQgW2h0dHBzOi8vd3d3LnN0YXRpc3RhLmNvbS9zdGF0
aXN0aWNzLzI2NDgxMC9udW1iZXItb2YtbW9udGhseS1hY3RpdmUtZmFjZWJvb2st
dXNlcnMtd29ybGR3aWRlL10oaHR0cHM6Ly93d3cuc3RhdGlzdGEuY29tL3N0YXRp
c3RpY3MvMjY0ODEwL251bWJlci1vZi1tb250aGx5LWFjdGl2ZS1mYWNlYm9vay11
c2Vycy13b3JsZHdpZGUvKSkKClNpbWlsYXJseSwgR09PRyBpbiAyMDE0IHN0YXJ0
ZWQgcmVvcmdhbml6aW5nIGl0c2VsZiB0byBmb2N1cyBvbiBhcnRpZmljaWFsIGlu
dGVsbGlnZW5jZSBvbmx5LiBJbiBKYW51YXJ5IDIwMTQsIEdPT0cgYm91Z2h0IERl
ZXBNaW5kLCBhbmQgaW4gU2VwdGVtYmVyIHRoZXkgc2h1dGRvd24gT3JrdXQgKG9u
ZSBvZiB0aGVpciBmZXcgc29jaWFsIHByb2R1Y3RzIHdoaWNoIGhhZCBtb21lbnRh
cnkgc3VjY2VzcyBpbiBzb21lIGNvdW50cmllcykgZm9yZXZlci4gVGhlIEFscGhh
YmV0IEluYyByZXN0cnVjdHVyaW5nIHdhcyBhbm5vdW5jZWQgaW4gQXVndXN0IDIw
MTUgYnV0IGl0IGxpa2VseSB0b29rIG1hbnkgbW9udGhzIG9mIG1lZXRpbmdzIGFu
ZCBidXJlb3VjcmFjeS4gVGhlIHJlc3RydWN0dXJpbmcgd2FzIGltcG9ydGFudCB0
byBmb2N1cyB0aGUgd2ViLW9yaWVudGVkIGRlcGFydG1lbnRzIGF0IEdPT0cgdG93
YXJkcyBhIHNpbXBsZSBtaXNzaW9uLiBHT09HIHNlZXMgbm8gZnV0dXJlIGluIHRo
ZSBzaW1wbGUgU2VhcmNoIG1hcmtldCwgYW5kIGFubm91bmNlcyB0byBiZSBtaWdy
YXRpbmcgIkZyb20gU2VhcmNoIHRvIFN1Z2dlc3QiIChpbiBFcmljIFNjaG1pZHQn
cyBbb3duIHdvcmRzXShodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PUhn
X0t4WGhoc0dnKSkgYW5kIGJlaW5nIGFuICJBSSBmaXJzdCBjb21wYW55IiAoaW4g
U3VuZGFyIFBpY2hhaSdzIFtvd24gd29yZHNdKGh0dHBzOi8vd3d3LnlvdXR1YmUu
Y29tL3dhdGNoP3Y9OE9nMkJucEJoa00pKS4gR09PRyBpcyBjdXJyZW50bHkgc2xp
Z2h0bHkgYmVoaW5kIEZCIGluIHRlcm1zIG9mIGhvdyBmYXN0IGl0IGlzIGdyb3dp
bmcgaXRzIGRvbWluYW5jZSBvZiB0aGUgd2ViLCBidXQgZHVlIHRvIHRoZWlyIHRl
Y2huaWNhbCBleHBlcnRpc2UsIHZhc3QgYnVkZ2V0LCBpbmZsdWVuY2UgYW5kIHZp
c2lvbiwgaW4gdGhlIGxvbmcgcnVuIGl0cyBBSSBhc3NldHMgd2lsbCBwbGF5IGEg
bWFzc2l2ZSByb2xlIG9uIHRoZSBpbnRlcm5ldC4gVGhleSBrbm93IHdoYXQgdGhl
eSBhcmUgZG9pbmcuCgpUaGVzZSBhcmUgbm8gbG9uZ2VyIHRoZSBzYW1lIGNvbXBh
bmllcyBhcyA0IHllYXJzIGFnby4gR09PRyBpcyBub3QgYW55bW9yZSBhbiBpbnRl
cm5ldCBjb21wYW55LCBpdCdzICp0aGUga25vd2xlZGdlIGludGVybmV0IGNvbXBh
bnkqLiBGQiBpcyBub3QgYW4gaW50ZXJuZXQgY29tcGFueSwgaXQncyAqdGhlIHNv
Y2lhbCBpbnRlcm5ldCBjb21wYW55Ki4gVGhleSB1c2VkIHRvIGF0dGVtcHQgdG8g
Y29tcGV0ZSwgYW5kIHRoaXMgY29tcGV0aXRpb24ga2VwdCB0aGUgaW50ZXJuZXQg
bWFya2V0IGRpdmVyc2UuIFRvZGF5LCBob3dldmVyLCB0aGV5IHNlZW0gbW9zdGx5
IHNhdGlzZmllZCB3aXRoIHRoZWlyIG9ydGhvZ29uYWwgZG9taW5hbmNlIG9mIHBh
cnRzIG9mIHRoZSBXZWIsIGFuZCB3ZSBhcmUgbG9zaW5nIGRpdmVyc2l0eSBvZiBj
aG9pY2VzLiBXaGljaCBsZWFkcyB1cyB0byBhbm90aGVyIHBhcnQgb2YgdGhlIGlu
dGVybmV0OiBlLWNvbW1lcmNlIGFuZCBBTVpOLgoKQU1aTiBkb2VzIG5vdCBmb2N1
cyBvbiBtYWtpbmcgcHJvZml0LgoKWyFbQW1hem9uJ3MgTG9uZy1UZXJtIEdyb3d0
aF0oL2ltZy9hbWF6b24tcHJvZml0cy5wbmcpXSgvaW1nL2FtYXpvbi1wcm9maXRz
LnBuZykKCihTb3VyY2VzOiBbaHR0cHM6Ly93d3cuc3RhdGlzdGEuY29tL3N0YXRp
c3RpY3MvMzQ2MTY3L2ZhY2Vib29rLWdsb2JhbC1kYXUvXShodHRwczovL3d3dy5z
dGF0aXN0YS5jb20vc3RhdGlzdGljcy8zNDYxNjcvZmFjZWJvb2stZ2xvYmFsLWRh
dS8pIGFuZCBbaHR0cHM6Ly93d3cuc3RhdGlzdGEuY29tL3N0YXRpc3RpY3MvMjY0
ODEwL251bWJlci1vZi1tb250aGx5LWFjdGl2ZS1mYWNlYm9vay11c2Vycy13b3Js
ZHdpZGUvXShodHRwczovL3d3dy5zdGF0aXN0YS5jb20vc3RhdGlzdGljcy8yNjQ4
MTAvbnVtYmVyLW9mLW1vbnRobHktYWN0aXZlLWZhY2Vib29rLXVzZXJzLXdvcmxk
d2lkZS8pKQoKSW5zdGVhZCwgaXRzIG1pc3Npb24gaXMgdG8gc2VlayBtYXJrZXQg
bGVhZGVyc2hpcCwgY3J1c2hpbmcgY29tcGV0aXRvcnMgaW4gdGhlIFVTQS4KClsh
W0FtYXpvbiBoYXMgb3V0Z3Jvd24gY29tcGV0aXRvcnNdKC9pbWcvYW1hem9uLW91
dGdyb3duLWNvbXBldGl0b3JzLmpwZyldKC9pbWcvYW1hem9uLW91dGdyb3duLWNv
bXBldGl0b3JzLmpwZykKCkkgY291bGQgZWxhYm9yYXRlIG9uIGhvdyBBTVpOIGlz
ICp0aGUgZS1jb21tZXJjZSBjb21wYW55KiwgYnV0IEkgd291bGQgYmUganVzdCBy
ZXBlYXRpbmcgW1Njb3R0IEdhbGxvd2F5J3MgZXhwb3N1cmUgb2YgdGhpcyB0b3Bp
Y10oaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1HV0JqVXNtTy1Mdyku
IEl0J3Mgd29ydGggd2F0Y2hpbmcgaGlzIHRhbGtzLgoKIyMgV2hhdCB0aGUgV2Vi
IHdhcyBhbmQgd2hhdCBpdCBiZWNhbWUKClRoZSBldmVudHMgYW5kIGRhdGEgYWJv
dmUgZGVzY3JpYmUgaG93IHRocmVlIGludGVybmV0IGNvbXBhbmllcyBoYXZlIGFj
cXVpcmVkIG1hc3NpdmUgaW5mbHVlbmNlIG9uIHRoZSBXZWIsIGJ1dCB3aHkgZG9l
cyB0aGF0IGltcGx5IHRoZSBiZWdpbm5pbmcgb2YgdGhlIFdlYidzIGRlYXRoPyBU
byBhbnN3ZXIgdGhhdCwgd2UgbmVlZCB0byByZWZsZWN0IG9uIHdoYXQgdGhlIFdl
YiBpcy4KClRoZSBvcmlnaW5hbCB2aXNpb24gZm9yIHRoZSBXZWIgYWNjb3JkaW5n
IHRvIGl0cyBjcmVhdG9yLCBUaW0gQmVybmVycy1MZWUsIHdhcyBhIHNwYWNlIHdp
dGggbXVsdGlsYXRlcmFsIHB1Ymxpc2hpbmcgYW5kIGNvbnN1bXB0aW9uIG9mIGlu
Zm9ybWF0aW9uLiBJdCB3YXMgYSBwZWVyLXRvLXBlZXIgdmlzaW9uIHdpdGggbm8g
ZGVwZW5kZW5jeSBvbiBhIHNpbmdsZSBwYXJ0eS4gVGltIGhpbXNlbGYgY2xhaW1z
IFt0aGUgV2ViIGlzIGR5aW5nXShodHRwczovL3d3dy50aGVndWFyZGlhbi5jb20v
dGVjaG5vbG9neS8yMDE3L21hci8xMS90aW0tYmVybmVycy1sZWUtd2ViLWludmVu
dG9yLXNhdmUtaW50ZXJuZXQpOiB0aGUgV2ViIGhlIHdhbnRlZCBhbmQgdGhlIFdl
YiBoZSBnb3QgYXJlIG5vIGxvbmdlciB0aGUgc2FtZS4KCj4gKipEb2Vzbid0IEdP
T0cgZGVmZW5kIGluIHRoZSBvcGVuIFdlYj8qKgo+Cj4gR09PRywgYXMgYSBjb21w
YW55IGJvcm4gZnJvbSB0aGUgV2ViLCBoYXMgaGVscGVkIHRha2UgaXQgZm9yd2Fy
ZCBib3RoIHRlY2hub2xvZ2ljYWxseSBhbmQgaW4gYWRvcHRpb24uIFRoYXQgaXMg
dW5kZW5pYWJsZS4gVGhleSBzdGlsbCBsZWFkIGVmZm9ydHMgdG8gaW1wcm92ZSB0
aGUgb3BlbiBXZWIsIHN1Y2ggYXMgW2Fkdm9jYWN5IG9mIFByb2dyZXNzaXZlIFdl
YiBBcHBzIChQV0FzKV0oaHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20vd2Vi
L3Byb2dyZXNzaXZlLXdlYi1hcHBzLykgb3ZlciBuYXRpdmUgbW9iaWxlIGFwcHMu
Cj4KPiBJc24ndCBHT09HIHRyeWluZyB0byBndWFyYW50ZWUgdGhlIG9wZW4gV2Vi
IHN0YXlzIGFsaXZlPyBOb3QgbmVjZXNzYXJpbHkuIEdPT0cncyBtaXNzaW9uIGlz
IHRvIGdhdGhlciBhcyBtdWNoIHJpY2ggZGF0YSBhcyBwb3NzaWJsZSwgYW5kIGJ1
aWxkIEFJLiBHT09HJ3MgZ29hbCBpcyB0byBoYXZlIGFuIEFJIHByb3ZpZGUgdGlt
ZWx5IGFuZCBwZXJzb25hbGl6ZWQgaW5mb3JtYXRpb24gdG8gdXMsIG5vdCBzcGVj
aWZpY2FsbHkgdG8gaGF2ZSB3ZWJzaXRlcyBwcm92aWRlIGluZm9ybWF0aW9uLiBB
bnkgR09PRyBjb25jZXJ0ZWQgZWZmb3J0cyBhcmUgYWxpZ25lZCB0byB0aGUgQUkg
bWlzc2lvbi4KPgo+IE1vYmlsZSB1c2FnZSBpcyBvbiB0aGUgcmlzZSDigJMgaGF2
aW5nIGFscmVhZHkgY3Jvc3NlZCBkZXNrdG9wIGFzIHRoZSBwcmltYXJ5IGNoYW5u
ZWwgZm9yIGludGVybmV0IHVzYWdlIOKAkyBhbmQgbmF0aXZlIG1vYmlsZSBhcHBz
IGFyZSBzbyBmYXIgdGhlIGJlc3Qgd2F5IG9mIHByb3ZpZGluZyBnb29kIHVzZXIg
ZXhwZXJpZW5jZSBvbiBtb2JpbGUuIEdPT0cgY29sbGVjdHMgbGl0dGxlIG9yIG5v
IGRhdGEgZnJvbSBuYXRpdmUgbW9iaWxlIGFwcHMsIHNwZWNpYWxseSBvbiBpT1Mu
IFBXQXMgaGFwcGVuIHRvIGxpdmUgaW4gdGhlIG5ldXRyYWwgYW5kIG9wZW4gV2Vi
LCBhbmQgYXJlIGJldHRlciBzdWl0ZWQgZm9yIGRhdGEgY29sbGVjdGlvbiB3aGls
ZSBwcm92aWRpbmcgZ3JlYXQgdXNlciBleHBlcmllbmNlIG9uIG1vYmlsZS4KPgo+
IFshW0Rlc2t0b3AgdmVyc3VzIE1vYmlsZSBpbnRlcm5ldCB1c2FnZV0oL2ltZy9k
ZXNrdG9wLXZzLW1vYmlsZS0yLmpwZyldKC9pbWcvZGVza3RvcC12cy1tb2JpbGUt
Mi5qcGcpCj4KPiBHT09HIHByb21vdGVzIGxvY2staW4gYW5kIHByb3ByaWV0YXJ5
IHRlY2hub2xvZ2llcyBzdWNoIGFzIEZpcmViYXNlIGFuZCBHb29nbGUtZGVwZW5k
ZW50IEFNUCBpbnN0YWxsYXRpb25zIGFzIG11Y2ggYXMgaXQgYWR2b2NhdGVzIG9w
ZW4gUFdBcy4gR09PRyBkb2VzIG5vdCBjb25zaXN0ZW50bHkgZGVmZW5kIHRoZSBv
cGVuIFdlYi4gVGhleSBbZHJvcHBlZCBYTVBQIGluIEd0YWxrXShodHRwczovL3d3
dy5lZmYub3JnL2RlZXBsaW5rcy8yMDEzLzA1L2dvb2dsZS1hYmFuZG9ucy1vcGVu
LXN0YW5kYXJkcy1pbnN0YW50LW1lc3NhZ2luZyksIGFuZCBHdGFsayBpdHNlbGYg
d2FzIGRlcHJlY2F0ZWQsIGZhdm9yaW5nIEdvb2dsZSBIYW5nb3V0cyB3aXRoIGEg
cHJvcHJpZXRhcnkgcHJvdG9jb2wuIENocm9tZSBXZWIgU3RvcmUgaXMgYSB3YWxs
ZWQgZ2FyZGVuIGxpa2UgQXBwIFN0b3JlLiBUaGV5IFtzaHV0ZG93biBHb29nbGUg
UmVhZGVyXShodHRwOi8vZWRpdGlvbi5jbm4uY29tLzIwMTMvMDMvMTQvdGVjaC93
ZWIvZ29vZ2xlLXJlYWRlci1kaXNjb250aW51ZWQvaW5kZXguaHRtbCkgYmFzZWQg
b24gUlNTLCBhbiBvcGVuIHN0YW5kYXJkLiBbR29vZ2xlIENsb3VkIFRQVV0oaHR0
cHM6Ly93d3cuZm9yYmVzLmNvbS9zaXRlcy9tb29yaW5zaWdodHMvMjAxNy8wNS8y
Mi9nb29nbGUtY2xvdWQtdHB1LXN0cmF0ZWdpYy1pbXBsaWNhdGlvbnMtZm9yLWdv
b2dsZS1udmlkaWEtYW5kLXRoZS1tYWNoaW5lLWxlYXJuaW5nLWluZHVzdHJ5LzMv
IzYwMDUzY2Y3NTEzZCkgaXMgcHJvcHJpZXRhcnkgaGFyZHdhcmUgdGhhdCBvbmx5
IGV4aXN0cyBpbiB0aGVpciBkYXRhY2VudGVycywgc3VwcG9ydGluZyB0aGVpciBv
cGVuIHNvdXJjZSBmcmFtZXdvcmsgVGVuc29yRmxvdy4gR29vZ2xlIEluYm94IHN1
ZmZlcnMgInByb3ByaWV0YXJ5IGNyZWVwIjogbm9uLXN0YW5kYXJkLCBjbG9zZWQg
YWxnb3JpdGhtcyB0aGF0IHByb21pc2UgdG8gb3JnYW5pemUgeW91ciBsaWZlLCBh
biBlc3NlbnRpYWwgY29tcG9uZW50IG9mIGEgbG9jay1pbiBiYXNlZCBidXNpbmVz
cyBtb2RlbC4KPgo+IEdPT0cgaXMgYSBodWdlIGNvbXBhbnkgd2hlcmUgZW1wbG95
ZWVzIGhhdmUgYXV0b25vbXkgYW5kIG11bHRpcGxlIHByb2plY3RzIGFuZCBlZmZv
cnRzIGFyZSBvY2N1cnJpbmcuIEJpZyBlZmZvcnRzLCB0aG91Z2gsIGFyZSBjb2hl
cmVudCwgY29uY2VydGVkLCBhbmQgd2VsbCBhbGlnbmVkIHdpdGggaXRzIG1pc3Np
b246IHRvIGJlIGFuIEFJLWZpcnN0IGNvbXBhbnksIGFuIEFJIHRoYXQgaXMgY2xv
c2VkIGFuZCBsaXZlcyBpbiB0aGVpciBjbG91ZC4KCkZyb20gdGhlIDkwcyB1bnRp
bCB0aGUgMjAxMHMsIHRoZSBXZWIgd2UgaGF2ZSBleHBlcmllbmNlZCBoYXMgYmVl
biwgYWxiZWl0IHNvbWV3aGF0IGltcGVyZmVjdGx5LCBmYWl0aGZ1bCB0byBpdHMg
b3JpZ2luYWwgcHVycG9zZS4gVGhlIFdlYidzIGRpdmVyc2l0eSBoYXMgZ3JhbnRl
ZCBzcGFjZSBmb3IgbXVsdGlwbGUgYnVzaW5lc3NlcyB0byBpbm5vdmF0ZSBhbmQg
dGhyaXZlLCBpbmRlcGVuZGVudCBob2JieWlzdCBjb21tdW5pdGllcyB0byBncm93
LCBhbmQgcGVyc29uYWwgc2l0ZXMgdG8gYmUgaG9zdGVkIG9uIHdoYXRldmVyIHBo
eXNpY2FsIHNlcnZlcnMgY2FuIGhvc3QgdGhlbS4gVGhlIGludGVybmV0J3MgaW5m
cmFzdHJ1Y3R1cmFsIGRpdmVyc2l0eSBpcyBkaXJlY3RseSB0aWVkIHRvIHRoZSBz
dWNjZXNzIG9mIGRpdmVyc2UgV2ViIGJ1c2luZXNzZXMgYW5kIGNvbW11bml0aWVz
LiBUaGUgV2ViJ3Mgb3Blbm5lc3MgaXMgdml0YWwgZm9yIGl0cyBzZWN1cml0eSwg
YWNjZXNzaWJpbGl0eSwgaW5ub3ZhdGlvbiBhbmQgY29tcGV0aXRpdmVuZXNzLgoK
QWZ0ZXIgMjAxNCwgd2Ugc3RhcnRlZCBsb3NpbmcgdGhlIGJlbmVmaXRzIG9mIHRo
ZSBpbnRlcm5ldCdzIGluZnJhc3RydWN0dXJhbCBhbmQgZWNvbm9taWNhbCBkaXZl
cnNpdHkuIEl0IGlzIGRpZmZpY3VsdCB0byBjb21wZXRlIHdpdGggQU1aTidzIGFu
ZCBHT09HJ3MgQ2xvdWQgU2VydmljZXMsIHdoaWNoIGhvc3QgYSBtYXNzaXZlIGFt
b3VudCBvZiBzaXRlcyBmb3Igb3RoZXIgYnVzaW5lc3Nlcy4gQW55IHdlYnNpdGUg
YXNwaXJpbmcgZm9yIHNpZ25pZmljYW50IHRyYWZmaWMgZGVwZW5kcyBvbiBTZWFy
Y2ggYW5kIFNvY2lhbCB0cmFmZmljLgoKIyMgV2hhdCB0aGUgV2ViIHdpbGwgYmVj
b21lIHVuZGVyIEdPT0ctRkItQU1aTgoKVGhlIGZvbGxvd2luZyBhbmFseXNpcyBp
cyBhbiBleHRyYXBvbGF0aW9uIGZvciB0aGUgZnV0dXJlLCBiYXNlZCBvbiB0aGUg
Y3VycmVudCBzdGF0ZSBvZiB0aGUgV2ViIGFuZCBzdHJhdGVnaWVzIG1hZGUgcHVi
bGljIGJ5IGV4ZWN1dGl2ZXMgYXQgR09PRy1GQi1BTVpOLgoKVGhlIFdhciBmb3Ig
TmV0IE5ldXRyYWxpdHkgaW4gdGhlIFVTQSB3b24gYSBbYmF0dGxlIGluIDIwMTRd
KGh0dHBzOi8vd3d3LnRoZXZlcmdlLmNvbS8yMDE0LzIvMjUvNTQzMTM4MiksIGJ1
dCBpbiAyMDE3IHdlIGFyZSBzZWVpbmcgYSBbc2Vjb25kIGJhdHRsZV0oaHR0cHM6
Ly93d3cudGhldmVyZ2UuY29tLzIwMTcvNy8xMi8xNTcxNTAzMCkgd2hpY2ggaXMg
bW9yZSBsaWtlbHkgdG8gYmUgbG9zdC4gSW50ZXJuZXQgU2VydmljZSBQcm92aWRl
cnMgKElTUHMpIGFyZSBwcm9iYWJseSBzb29uIGdvaW5nIHRvIGRpY3RhdGUgd2hh
dCB0cmFmZmljIGNhbiBvciBjYW5ub3QgYXJyaXZlIGF0IHBlb3BsZSdzIGVuZCBk
ZXZpY2VzLiBHT09HLUZCLUFNWk4gdHJhZmZpYyB3b3VsZCBiZSB0aGUgbW9zdCBj
b21tb24sIGR1ZSB0byB0aGVpciBwb3B1bGFyaXR5IGFtb25nIGludGVybmV0IHVz
ZXJzLiBCZWNhdXNlIG9mIHRoaXMgbWFya2V0IGRlbWFuZCwgSVNQcyB3aWxsIGxp
a2VseSBwcm92aWRlIGNoZWFwIHBsYW5zIHdpdGggYWNjZXNzIHRvIEdPT0ctRkIt
QU1aTiwgd2hpbGUgb2ZmZXJpbmcgbW9yZSBleHBlbnNpdmUgcGxhbnMgd2l0aCBm
dWxsIGludGVybmV0IGFjY2Vzcy4gW0l0IGlzIGFscmVhZHkgYSByZWFsaXR5IGlu
IFBvcnR1Z2FsXShodHRwczovL3d3dy5yZWRkaXQuY29tL3IvdGVjaG5vbG9neS9j
b21tZW50cy83OTc3MGkvaW5fcG9ydHVnYWxfd2l0aF9ub19uZXRfbmV1dHJhbGl0
eV9pbnRlcm5ldC8pLiBUaGlzIHdvdWxkIGdyb3cgZXZlbiBtb3JlIHRoZSBkb21p
bmFuY2UgdGhlIHRocmVlIHRlY2ggZ2lhbnRzIGFscmVhZHkgZW5qb3kuIFRoZXJl
IHdvdWxkIGJlIG5vIG1vcmUgZWNvbm9taWNhbCBpbmNlbnRpdmUgZm9yIHNtYWxs
ZXIgYnVzaW5lc3NlcyB0byBoYXZlIGluZGVwZW5kZW50IHdlYnNpdGVzLCBhbmQg
YSBncmFkdWFsIG1pZ3JhdGlvbiB0b3dhcmRzIEZhY2Vib29rIFBhZ2VzIHdvdWxk
IG1ha2UgbW9yZSBzZW5zZS4gU21hbGxlciBlLWNvbW1lcmNlIHNpdGVzIHdvdWxk
IGJlIGJvdWdodCBieSBBTVpOIG9yIGdvIGJhbmtydXB0LiBCZWNhdXNlIG1vc3Qg
aW50ZXJuZXQgdXNlcnMgY291bGRuJ3Qgb3BlbiBhbGwgdGhlIHNpdGVzLCBHT09H
IHdvdWxkIGhhdmUgbGl0dGxlIGluY2VudGl2ZSB0byBiZSBhIG1lcmUgYnJpZGdl
IGJldHdlZW4gcGVvcGxlIGFuZCBzaXRlcy4KCkdPT0cncyBzaGlmdCBhd2F5IGZy
b20gU2VhcmNoIGlzIGEgc2lnbiBob3cgdGhleSBhcmUgZ3Jvd2luZyB0aGVpciBz
dHJhdGVneSBiZXlvbmQgdGhlIFdlYi4gRm9yIG1hbnkgeWVhcnMsIEdvb2dsZSB1
c2VkIHRvIGJlIGp1c3QgYSB0b29sIHRoYXQgcGxheWVkIHRoZSBpbXBvcnRhbnQg
cm9sZSBvZiBhc3Npc3RpbmcgdGhlIFdlYiwgYnkgaW5kZXhpbmcgaXQuIExhdGVs
eSwgaG93ZXZlciwgaXQgaXMgbm90IGF0dHJhY3RpdmUgZm9yIEdvb2dsZSB0byBi
ZSBhIG1lcmUgc2VhcmNoIGVuZ2luZSBvZiB0aGUgV2ViLiBGb3IgdGhlIHB1cnBv
c2VzIGV4cHJlc3NlZCBpbiB0aGVpciBbbWlzc2lvbiBzdGF0ZW1lbnRdKGh0dHBz
Oi8vd3d3LnRoZWd1YXJkaWFuLmNvbS90ZWNobm9sb2d5LzIwMTQvbm92LzAzL2xh
cnJ5LXBhZ2UtZ29vZ2xlLWRvbnQtYmUtZXZpbC1zZXJnZXktYnJpbiksICJ0byBv
cmdhbml6ZSB0aGUgd29ybGQncyBpbmZvcm1hdGlvbiBhbmQgbWFrZSBpdCB1bml2
ZXJzYWxseSBhY2Nlc3NpYmxlIGFuZCB1c2VmdWwiLCB0aGUgc2VhcmNoIGVuZ2lu
ZSBhcHByb2FjaCBoYXMgYmVlbiBleGhhdXN0ZWQuIFRoZSBtdWx0aS1zZWNvbmQg
cGF0aCBmcm9tIHNlYXJjaCBxdWVyeSwgdG8gc2VhcmNoIHJlc3VsdHMsIHRvIHdl
YnBhZ2UsIHRvIGluZm9ybWF0aW9uLCBpcyB0b28gbG9uZyB0byBwcm92aWRlIGFu
IGlkZWFsIHVzZXIgZXhwZXJpZW5jZS4gVGhlaXIgZ29hbCBpcyB0byBjdXQgdGhl
IG1pZGRsZW1lbiBpbiB0aGF0IHBhdGguIFRoZXkgaGF2ZSB0cmllZCB0byBjdXQg
b3V0IHRoZSByZXN1bHRzIHBhZ2Ugd2l0aCB0aGVpciAiSSdtIGZlZWxpbmcgbHVj
a3kiIGJ1dHRvbiwgYnV0IHdpdGhvdXQgaW50ZWxsaWdlbnQgYW5hbHlzaXMgdGhl
eSBjYW5ub3QgcmVsaWFibHkgdGFrZSBzaG9ydGN1dHMgaW4gdGhhdCBwYXRoLiBX
aXRoIEFJLCB0aGV5IGJlbGlldmUgdGhleSBjYW4gc2hvcnRlbiB0aGUgcGF0aCB0
byBqdXN0IG9uZSBzdGVwLCAiZ2V0IGluZm9ybWF0aW9uIiwgZXZlbiB3aXRob3V0
IHNlYXJjaGluZyBmb3IgaXQgaW4gdGhlIGZpcnN0IHBsYWNlLiBUaGF0J3MgdGhl
IHB1cnBvc2Ugb2YgU3VnZ2VzdC4KCkFzIGFuIGluZGV4LCBwZW9wbGUgaGF2ZSBk
aWZmZXJlbnQgZXhwZWN0YXRpb25zIG9uIHNlYXJjaCByZXN1bHQgbmV1dHJhbGl0
eS4gU29tZSB3YW50IEdvb2dsZSBTZWFyY2ggdG8gYmUgZW50aXJlbHkgbmV1dHJh
bCwgc29tZSBkZW1hbmQgaW1tZWRpYXRlIGFjdGlvbiB0byByZW1vdmUgc29tZSBy
ZXN1bHRzLiBUaGUgRXVyb3BlYW4gVW5pb24gaGFzIGJvdGggW2RlbWFuZGVkIEdP
T0cgdG8gY29tcGx5IHdpdGggcmVtb3ZhbCByZXF1ZXN0c10oaHR0cHM6Ly93d3cu
Y25ldC5jb20vbmV3cy9nb29nbGUtbXVzdC1kZWxldGUtc2VhcmNoLXJlc3VsdHMt
cnVsZXMtZXVyb3BlYW4tY291cnQvKSwgYW5kIFtmaW5lZCBHT09HIGZvciBub3Qg
YmVpbmcgbmV1dHJhbCBpbiBzaG9wcGluZyBxdWVyaWVzXShodHRwczovL3d3dy5i
bG9vbWJlcmcuY29tL25ld3MvYXJ0aWNsZXMvMjAxNy0wNi0yNy9nb29nbGUtZ2V0
cy1yZWNvcmQtMi03LWJpbGxpb24tZXUtZmluZS1mb3Itc2tld2luZy1zZWFyY2hl
cykuIEl0IGlzIG5vdCBiZW5lZmljaWFsIGZvciBHT09HIHRvIGFzc3VtZSB0aGUg
cm9sZSBvZiBhbiBpbXBhcnRpYWwgYXJiaXRyZXIgb2YgY29udGVudCwgc2luY2Ug
aXQncyBub3Qgc3VwcG9ydGluZyB0aGVpciBidXNpbmVzcyBtb2RlbC4gUXVpdGUg
dGhlIGNvbnRyYXJ5LCB0aGV5IGFyZSB1bmRlciBwdWJsaWMgc2NydXRpbnkgZnJv
bSBtdWx0aXBsZSBnb3Zlcm5tZW50cywgcG90ZW50aWFsbHkgcmlza2luZyB0aGVp
ciByZXB1dGF0aW9uLgoKVGhlIFN1Z2dlc3Qgc3RyYXRlZ3kgaXMgYmVpbmcgY3Vy
cmVudGx5IGRlcGxveWVkIHRocm91Z2ggR29vZ2xlIE5vdywgR29vZ2zsZSBBc3Np
c3RhbnQsIEFuZHJvaWQgbm90aWZpY2F0aW9ucywgYW5kIEdvb2dsZSBIb21lLiBO
b25lIG9mIHRoZXNlIG1lbnRpb25lZCB0ZWNobm9sb2dpZXMgYXJlIHBhcnQgb2Yg
V2ViLCBpbiBvdGhlciB3b3Jkcywgbm90IHBhcnQgb2YgImJyb3dzZXItbGFuZCIg
bWFkZSBvZiB3ZWJzaXRlcy4gVGhlIGludGVybmV0IGlzIGp1c3QgdGhlIHVuZGVy
bHlpbmcgdHJhbnNwb3J0IGxheWVyIGZvciBkYXRhIGZyb20gdGhlaXIgY2xvdWQg
dG8gZW5kLXVzZXIgZGV2aWNlcywgYnV0IHRoZSBXZWIgaXRzZWxmIGlzIGJlaW5n
IGJ5cGFzc2VkLiBbU2NobWlkdCdzIHZpc2lvbiBmb3IgdGhlIGZ1dHVyZV0oaHR0
cDovL3d3dy5ob2xseXdvb2RyZXBvcnRlci5jb20vbmV3cy9nb29nbGUtY2hhaXJt
YW4tZXJpYy1zY2htaWR0LWludGVybmV0LTc2NTk4OSkgaXMgb25lIHdoZXJlIGlu
dGVybmV0IHNlcnZpY2VzIGFyZSB1YmlxdWl0b3VzIGFuZCBwZXJzb25hbGl6ZWQs
IGFzIG9wcG9zZWQgdG8gYW4gZXhwZXJpZW5jZSBjb250YWluZWQgaW4gd2ViIGJy
b3dzZXJzIGluIGRlc2t0b3AgbWFjaGluZXMuCgpTaW1pbGFybHksIHdoaWxlIEFN
Wk4ncyBidXNpbmVzcyBzdGlsbCByZWxpZXMgb24gdHJhZmZpYyB0byB0aGVpciBk
ZXNrdG9wIHdlYiBwb3J0YWwgKGFjY291bnRpbmcgZm9yIDMzJSBvZiBzYWxlcyks
IGEgW2xhcmdlIHBvcnRpb25dKGh0dHBzOi8vd3d3LnN0YXRpc3RhLmNvbS9zdGF0
aXN0aWNzLzY5MDM2Ni9hbWF6b24tcHVyY2hhc2UtY2hhbm5lbHMtdXNhLykgKDI1
JSkgb2YgdGhlaXIgc2FsZXMgaGFwcGVuIHRocm91Z2ggbW9iaWxlIGFwcHMsIG5v
dCB0byBtZW50aW9uIEFtYXpvbiBFY2hvLiBMaWtlIEdvb2dsZSBIb21lLCBBbWF6
b24gRWNobyBieXBhc3NlcyB0aGUgV2ViIGFuZCB1c2VzIHRoZSBpbnRlcm5ldCBq
dXN0IGZvciBjb21tdW5pY2F0aW9uIGJldHdlZW4gY2xvdWQgYW5kIGVuZCB1c2Vy
LiBJbiB0aGVzZSBuZXcgbm9uLXdlYiBjb250ZXh0cywgdGVjaCBnaWFudHMgaGF2
ZSBtb3JlIGF1dGhvcml0eSBvdmVyIGRhdGEgdHJhZmZpYy4gVGhleSBjYW4gZXZl
biBkaXJlY3RseSBibG9jayBlYWNoIG90aGVyLCBsaWtlIFtHT09HIHJlY2VudGx5
IGN1dCBzdXBwb3J0IGZvciBZb3VUdWJlIHRyYWZmaWMgaW4gQW1hem9uIEVjaG8g
ZGV2aWNlc10oaHR0cDovL3d3dy5yZXV0ZXJzLmNvbS9hcnRpY2xlL3VzLWFtYXpv
bi1jb20tZ29vZ2xlL2FtYXpvbi1zYXlzLWdvb2dsZS1oYXMtcHVsbGVkLXlvdXR1
YmUtZnJvbS1lY2hvLXNob3ctZGV2aWNlLWluLXRlY2gtZmFjZS1vZmYtaWRVU0tD
TjFDMjBBOCkuCgojIyBUaGUgQXBwbGVpZmljYXRpb24gb2YgdGVjaCBnaWFudHMK
CkdPT0csIE1TRlQsIEZCLCBhbmQgQU1aTiBhcmUgbWltaWNraW5nIEFBUEwncyBz
dHJhdGVneSBvZiBidWlsZGluZyBicmFuZCBsb3lhbHR5IGFyb3VuZCBoaWdoLWVu
ZCBkZXZpY2VzLiBUaHJvdWdoIGEgcHJvY2VzcyBJIGNhbGwgIkFwcGxlaWZpY2F0
aW9uIiwgdGhleSBhcmUgKDEpIHNldHRpbmcgdXAgd2FsbGVkIGdhcmRlbnMsICgy
KSBiZWNvbWluZyBoYXJkd2FyZSBjb21wYW5pZXMsIGFuZCAoMykgbWFya2V0aW5n
IHRoZSBkZXNpZ24gd2hpbGUgZGVzaWduaW5nIGZvciB0aGUgbWFya2V0LiBJdCBp
cyBhIHRocmVhdCB0byBBQVBMIGl0c2VsZiwgYmVjYXVzZSB0aGV5IGFyZSBiZWhp
bmQgdGhlIG90aGVyIGdpYW50cyB3aGVuIGl0IGNvbWVzIHRvIGJpZyBkYXRhIGNv
bGxlY3Rpb24gYW5kIGl0cyB1c2VzLiBXaGlsZSBBQVBMJ3MgZWFybHkgYW5kIGJv
bGQgaW50cm9kdWN0aW9uIG9mIGFuIEFwcCBTdG9yZSBzaG9vayB0aGUgV2ViIGFz
IHRoZSBkb21pbmFudCBzb2Z0d2FyZSBkaXN0cmlidXRpb24gcGxhdGZvcm0sIGl0
IHdhc24ndCBlbm91Z2ggdG8gcmVwbGFjZSBpdC4gVGhlIG5leHQgd2F2ZSBvZiB3
YWxsZWQgZ2FyZGVucyBtaWdodCBsb29rIGRpZmZlcmVudDogbGVzcyBub3RpY2Vh
YmxlLCBidXQgbm9uZXRoZWxlc3MgZGlzcnVwdGl2ZSB0byB0aGUgV2ViLgoKWyFb
R09PRyBkZXZpY2VzXSgvaW1nL2dvb2ctZGV2aWNlcy5qcGcpXSgvaW1nL2dvb2ct
ZGV2aWNlcy5qcGcpCgpUaGVyZSBpcyBhIHRlbmRlbmN5IEdPT0ctRkItQU1aTiB0
byBieXBhc3MgdGhlIFdlYiB3aGljaCBpcyBtb3RpdmF0ZWQgYnkgdXNlciBleHBl
cmllbmNlIGFuZCBlZmZpY2llbnQgY29tbXVuaWNhdGlvbiwgbm90IGJ5IGFuIGFn
ZW5kYSB0byBhdm9pZCBicm93c2Vycy4gSW4gdGhlIGtub3dsZWRnZSBpbnRlcm5l
dCBhbmQgdGhlIGNvbW1lcmNlIGludGVybmV0LCBiZWluZyBlZmZpY2llbnQgdG8g
cHJvdmlkZSB3aGF0IHVzZXJzIHdhbnQgaXMgdGhlIGdvYWwuIEluIHRoZSBzb2Np
YWwgaW50ZXJuZXQsIHRoZSBnb2FsIGlzIHRvIHByb3ZpZGUgYW4gZWZmaWNpZW50
IGNoYW5uZWwgZm9yIGNvbW11bmljYXRpb24gYmV0d2VlbiBwZW9wbGUuIFRoaXMg
ZXhwbGFpbnMgRkIncyAxMC15ZWFyIHN0cmF0ZWd5IHdpdGggQXVnbWVudGVkIFJl
YWxpdHkgKEFSKSBhbmQgVmlydHVhbCBSZWFsaXR5IChWUikgYXMgdGhlIG5leHQg
bWVkaXVtIGZvciBzb2NpYWwgaW50ZXJhY3Rpb25zIHRocm91Z2ggdGhlIGludGVy
bmV0LiBUaGlzIHN0cmF0ZWd5IHdvdWxkIGFsc28gYnlwYXNzIHRoZSBXZWIsIHBy
b3ZpbmcgaG93IG1vcmUgbmF0dXJhbCBzb2NpYWwgQVIgd291bGQgYmUgdGhhbiBz
b2NpYWwgcmVhbC10aW1lIHRleHRpbmcgaW4gYnJvd3NlcnMuIEFscmVhZHkgdG9k
YXksIG1vc3QgcGVvcGxlIG9uIHRoZSBpbnRlcm5ldCBjb21tdW5pY2F0ZSB3aXRo
IG90aGVyIHBlb3BsZSB2aWEgYSBtb2JpbGUgYXBwLCBub3QgdmlhIGEgYnJvd3Nl
ci4KClRoZSBjb21tb24gcGF0dGVybiBhbW9uZyB0aGVzZSB0aHJlZSBpbnRlcm5l
dCBnaWFudHMgaXMgdG8gZ3JvdyBiZXlvbmQgYnJvd3NlcnMsIGNyZWF0aW5nIG5l
dyB2aXJ0dWFsIGNvbnRleHRzIHdoZXJlIGRhdGEgaXMgY3JlYXRlZCBhbmQgc2hh
cmVkLiBUaGUgV2ViIG1heSBkaWUgbGlrZSBtb3N0IG90aGVyIHRlY2hub2xvZ2ll
cyBkbzogc2ltcGx5IGJ5IGJlY29taW5nIGxlc3MgYXR0cmFjdGl2ZSB0aGFuIG5l
d2VyIHRlY2hub2xvZ2llcy4gQW5kIGxpa2UgbW9zdCBvYnNvbGV0ZSB0ZWNobm9s
b2dpZXMsIHRoZXkgZG9uJ3Qgc3VkZGVubHkgZGlzYXBwZWFyLCBuZWl0aGVyIGRv
IHRoZXkgZGlzYXBwZWFyIGNvbXBsZXRlbHkuIFlvdSBjYW4gc3RpbGwgYnV5IGEg
V2Fsa21hbiBhbmQgbGlzdGVuIHRvIGEgdGFwZSB3aXRoIGl0LCBidXQgdGhlIHRl
Y2hub2xvZ3kgaGFzIG5ldmVydGhlbGVzcyBsb3N0IGl0cyBjb2xsZWN0aXZlIHJl
bGV2YW5jZS4gVGhlIFdlYidzIGRlYXRoIHdpbGwgY29tZSBhcyBhIGdyYWR1YWwg
ZGVjYXkgb2YgaXRzIG5lY2Vzc2l0eSwgbm90IGFzIGEgZHJhbWF0aWMgbG9zcy4K
CiMjIFRoZSBUcmluZXQKClRoZSBpbnRlcm5ldCB3aWxsIHN1cnZpdmUgbG9uZ2Vy
IHRoYW4gdGhlIFdlYiB3aWxsLiBHT09HLUZCLUFNWk4gd2lsbCBzdGlsbCBkZXBl
bmQgb24gc3VibWFyaW5lIGludGVybmV0IGNhYmxlcyAodGhlICJbQmFja2JvbmVd
KGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0ludGVybmV0X2JhY2tib25l
KSIpLCBiZWNhdXNlIGl0IGlzIGEgdGVjaG5pY2FsIHN1Y2Nlc3MuIFRoYXQgc2Fp
ZCwgbWFueSBhc3BlY3RzIG9mIHRoZSBpbnRlcm5ldCB3aWxsIGxvc2UgdGhlaXIg
cmVsZXZhbmNlLCBhbmQgdGhlIHVuZGVybHlpbmcgaW5mcmFzdHJ1Y3R1cmUgY291
bGQgYmUgb3B0aW1pemVkIG9ubHkgZm9yIEdPT0cgdHJhZmZpYywgRkIgdHJhZmZp
YywgYW5kIEFNWk4gdHJhZmZpYy4gSXQgd291bGRuJ3QgY29uY2VwdHVhbGx5IGJl
IGFueW1vcmUgYSAibmV0d29yayBvZiBuZXR3b3JrcyIsIGJ1dCBqdXN0IGEgIm5l
dHdvcmsgb2YgdGhyZWUgbmV0d29ya3MiLCB0aGUgKlRyaW5ldCosIGlmIHlvdSB3
aWxsLiBUaGUgY29uY2VwdCBvZiB3b3JrcGxhY2UgbmV0d29yayB3aGljaCBnYXZl
IGJpcnRoIHRvIHRoZSBpbnRlcm5ldCBpbmZyYXN0cnVjdHVyZSB3b3VsZCBtaWdy
YXRlIHRvIGEgbW9yZSBhYnN0cmFjdCBsZXZlbDogRmFjZWJvb2sgR3JvdXBzLCBH
b29nbGUgSGFuZ+tvdXRzLCBHIFN1aXRlLCBhbmQgb3RoZXIgY29tcGV0aW5nIHNl
cnZpY2VzIHdoaWNoIGNhbiBiZSBhY3F1aXJlZCBieSBhIHRlY2ggZ2lhbnQuIFdv
cmtwbGFjZSBuZXR3b3JrcyBhcmUgYWxyZWFkeSB0b2RheSBlbXVsYXRlZCBpbiBz
b2Z0d2FyZSBhcyBhIHNlcnZpY2UsIG5vdCBhcyB0cmFkaXRpb25hbCBMb2NhbCBB
cmVhIE5ldHdvcmtzLiBUbyBpbXByb3ZlIHVzZXIgZXhwZXJpZW5jZSwgdGhlIFRy
aW5ldCB3b3VsZCBiZSBhIHRlY2huaWNhbCBldm9sdXRpb24gb2YgdGhlIGludGVy
bmV0LiBUaGVzZSBlZmZvcnRzIGFyZSBhbHJlYWR5IGhhcHBlbmluZyB0b2RheSwg
W2F0IEdPT0ddKGh0dHBzOi8vd3d3Lm5leHRwbGF0Zm9ybS5jb20vMjAxNy8wNy8x
Ny9nb29nbGUtd2FudHMtcmV3aXJlLWludGVybmV0LykuIEluIHRoZSBsb25nLXRl
cm0sIHN1cHBvcnRpbmcgcm91dGluZyBmb3IgdGhlIG9sZCBpbnRlcm5ldCBhbmQg
dGhlIG9sZCBXZWIgd291bGQgYmUgYW4gb3ZlcmhlYWQsIHNvIGl0IGNvdWxkIGJl
IGJlbmVmaWNpYWwgdG8gY3V0IHN1cHBvcnQgZm9yIHRoZSBkaXZlcnNlIGludGVy
bmV0IG9uIHRoZSBwcm90b2NvbCBhbmQgaGFyZHdhcmUgbGV2ZWwuIEFjY2VzcyB0
byB0aGUgb2xkIGludGVybmV0IGNvdWxkIGJlIGVtdWxhdGVkIG9uIEdPT0cncyBj
bG91ZCBhY2Nlc3NlZCB0aHJvdWdoIHRoZSBUcmluZXQsIG11Y2ggbGlrZSBob3cg
W1dpbmRvd3MgOTUgY2FuIGJlIHRvZGF5IGVtdWxhdGVkIGluIHlvdXIgYnJvd3Nl
cl0oaHR0cHM6Ly93aW45NS5hamYubWUvKS4gSVNQcyB3b3VsZCByZWNvZ25pemUg
dGhlIG9ic29sZW5jZSBvZiB0aGUgaW50ZXJuZXQgYW5kIHN1cHBvcnQgdGhlIFRy
aW5ldCBvbmx5LCBkcml2ZW4gYnkgbWFya2V0IGRlbWFuZCBmb3Igb3B0aW1hbCB1
c2VyIGV4cGVyaWVuY2UgZnJvbSBHT09HLUZCLUFNWk4uCgpQZXJoYXBzIGEgZnV0
dXJlIHdpdGggZ3JlYXQgdXNlciBleHBlcmllbmNlIGluIEFSLCBWUiwgaGFuZHMt
ZnJlZSBjb21tZXJjZSBhbmQga25vd2xlZGdlIHNoYXJpbmcgY291bGQgZXZva2Ug
YW4gb3B0aW1pc3RpYyBwZXJzcGVjdGl2ZSBmb3Igd2hhdCB0aGVzZSB0ZWNoIGdp
YW50cyBhcmUgYnVpbGRpbmcuIEJ1dCAyNSB5ZWFycyBvZiB0aGUgV2ViIGhhcyBn
b3R0ZW4gdXMgdXNlZCB0byBmb3VuZGF0aW9uYWwgZnJlZWRvbXMgdGhhdCB3ZSB0
YWtlIGZvciBncmFudGVkLiBXZSBmb3JnZXQgaG93IHVzZWZ1bCBpdCBoYXMgYmVl
biB0byByZW1haW4gYW5vbnltb3VzIGFuZCBjb250cm9sIHdoYXQgd2Ugc2hhcmUs
IG9yIGhvdyBlYXN5IGl0IHdhcyB0byBzdGFydCBhbiBpbnRlcm5ldCBzdGFydHVw
IHdpdGggaXRzIG93biBpbmRlcGVuZGVudCBzZXJ2ZXJzIG9wZXJhdGluZyB3aXRo
IHRoZSBzYW1lIHJpZ2h0cyBHT09HIHNlcnZlcnMgaGF2ZS4gT24gdGhlIFRyaW5l
dCwgaWYgeW91IGFyZSBwZXJtYW5lbnRseSBiYW5uZWQgZnJvbSBHT09HIG9yIEZC
LCB5b3Ugd291bGQgaGF2ZSBubyBhbHRlcm5hdGl2ZS4gWW91IGNvdWxkIGV2ZW4g
YmUgcmVzdHJpY3RlZCBmcm9tIGNyZWF0aW5nIGEgbmV3IGFjY291bnQuIEFzIHBy
aXZhdGUgYnVzaW5lc3NlcywgR09PRywgRkIsIGFuZCBBTVpOIGRvbid0IG5lZWQg
dG8gZ3VhcmFudGVlIHlvdSBhY2Nlc3MgdG8gdGhlaXIgbmV0d29ya3MuIFlvdSBk
byBub3QgaGF2ZSBhIGxlZ2FsIHJpZ2h0IHRvIGFuIGFjY291bnQgaW4gdGhlaXIg
c2VydmVycywgYW5kIGFzIHNvY2lldGllcyB3ZSBhcmVuJ3QgZGVtYW5kaW5nIGZv
ciB0aGVzZSByaWdodHMgYXMgdmVoZW1lbnRseSBhcyB3ZSBjb3VsZCwgdG8gY291
bnRlciB0aGUgc3RyYXRlZ2llcyB0aGF0IHRlY2ggZ2lhbnRzIGFyZSBwdXR0aW5n
IGZvcndhcmQuCgpUaGUgV2ViIGFuZCB0aGUgaW50ZXJuZXQgaGF2ZSByZXByZXNl
bnRlZCBmcmVlZG9tOiBlZmZpY2llbnQgYW5kIHVuc3VwZXJ2aXNlZCBleGNoYW5n
ZSBvZiBpbmZvcm1hdGlvbiBiZXR3ZWVuIHBlb3BsZSBvZiBhbGwgbmF0aW9ucy4g
SW4gdGhlIFRyaW5ldCwgd2Ugd2lsbCBoYXZlIGV2ZW4gbW9yZSB2aXZpZOcgZXhj
aGFuZ2Ugb2YgaW5mb3JtYXRpb24gYmV0d2VlbiBwZW9wbGUsIGJ1dCB3ZSB3aWxs
IHNhY3JpZmljZSBmcmVlZG9tLiBNYW55IG9mIHVzIHdpbGwgd2FrZSB1cCB0byB0
aGUgdHJhZ2VkeSBvZiB0aGlzIHRyYWRlb2ZmIORvbmx5IG9uY2UgaXQgaXMg43Jl
YWxpdHku4AoAwsBcBAABCgAQBQJZ9xDUCRCe3iPqfopIkAAAIkEIAGGiKi+TOsJu
8Vlel/o78dp7pynF5GJNuoszZd73Hw4aOv6nJ1++jERJ6pxJQFjI7K/cUqpP5iaa
VJf70HTzJ1bf/UewL+kx96vPbB1NF/xSJp4PeCMt7qLN5fNOc6I3RYthvZ4k6DFq
EhN7FCx8wmfnwIFiJzUzA5rfxBL3eAxpogS1KBriP2aqjI/3WpRWniXNl433y+O8
Kq9yaXFzKeJ7qRUF3rF/kjbdiBvxnQCm6xVME1ReolqRv8XtUPWCaqzrCFd3G2cn
GQofypTuDwC7YCz3aa79posiY1/ieh5PRE1AxTP3krY6YwCIe1LhtnnbOO6iQwnt
eEpu4V6+MvY=
=eKh/
-----END PGP MESSAGE-----
