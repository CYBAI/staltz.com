-----BEGIN PGP MESSAGE-----
Comment: https://keybase.io/download
Version: Keybase Go 1.0.34 (darwin)

xA0DAAoBnt4j6n6KSJABy+F0AOIAAAAA7i0tLQpsYXlvdXQ6IHBvc3QKdGl0bGU6
ICJUaGUgV2ViIGJlZ2FuIGR5aW5nIGluIDIwMTQsIGhlcmUncyBob3ciCnRhZ3M6
IFtibG9nXQotLS0KCkJlZm9yZSB0aGUgeWVhciAyMDE0LCB0aGVyZSB3ZXJlIG1h
bnkgcGVvcGxlIHVzaW5nIEdvb2dsZSwgRmFjZWJvb2ssIGFuZCBBbWF6b24uIFRv
ZGF5LCB0aGVyZSBhcmUgc3RpbGwgbWFueSBwZW9wbGUgdXNpbmcgc2VydmljZXMg
ZnJvbSB0aG9zZSB0aHJlZSB0ZWNoIGdpYW50cyAocmVzcGVjdGl2ZWx5LCBHT09H
LCBGQiwgQU1aTikuIE5vdCBtdWNoIGhhcyBjaGFuZ2VkLCBhbmQgcXVpdGUgbGl0
ZXJhbGx5IHRoZSB1c2VyIGludGVyZmFjZSBhbmQgZmVhdHVyZXMgb24gdGhvc2Ug
c2l0ZXMgaGFzIHJlbWFpbmVkIG1vc3RseSB1bnRvdWNoZWQuIEhvd2V2ZXIsIHRo
ZSB1bmRlcmx5aW5nIGR5bmFtaWNzIG9mIHBvd2VyIG9uIHRoZSBXZWIgaGF2ZSBk
cmFzdGljYWxseSBjaGFuZ2VkLCBhbmQgdGhvc2UgdGhyZWUgY29tcGFuaWVzIGFy
ZSBhdCB0aGUgY2VudGVyIG9mIGEgZnVuZGFtZW50YWwgdHJhbnNmb3JtYXRpb24g
b2YgdGhlIFdlYi4KCj4gKkl0IGxvb2tzIGxpa2Ugbm90aGluZyBjaGFuZ2VkIHNp
bmNlIDIwMTQsIGJ1dCBHT09HIGFuZCBGQiBub3cgaGF2ZSBkaXJlY3QgaW5mbHVl
bmNlIG92ZXIgNzAlKyBvZiBpbnRlcm5ldCB0cmFmZmljLioKCkludGVybmV0IGFj
dGl2aXR5IGl0c2VsZiBoYXNuJ3Qgc2xvd2VkIGRvd24uIEl0IG1haW50YWlucyBh
IHN0ZWFkeSBncm93dGgsIGJvdGggaW4gYW1vdW50IG9mIHVzZXJzIGFuZCBhbW91
bnQgb2Ygd2Vic2l0ZXM6CgpbIVtBbW91bnQgb2YgaW50ZXJuZXQgdXNlcnMgYW5k
IHdlYnNpdGVzIGZyb20gMjAxMSB0byAyMDE3XSgvaW1nL2NoYXJ0LXNpdGVzLWFu
ZC11c2Vycy5wbmcpXSgvaW1nL2NoYXJ0LXNpdGVzLWFuZC11c2Vycy5wbmcpCgoo
U291cmNlczogW2h0dHBzOi8vbmV3cy5uZXRjcmFmdC5jb20vYXJjaGl2ZXMvY2F0
ZWdvcnkvd2ViLXNlcnZlci1zdXJ2ZXldKGh0dHBzOi8vbmV3cy5uZXRjcmFmdC5j
b20vYXJjaGl2ZXMvY2F0ZWdvcnkvd2ViLXNlcnZlci1zdXJ2ZXkpIGFuZCBbaHR0
cDovL3d3dy5pbnRlcm5ldGxpdmVzdGF0cy5jb20vaW50ZXJuZXQtdXNlcnMvXSho
dHRwOi8vd3d3LmludGVybmV0bGl2ZXN0YXRzLmNvbS9pbnRlcm5ldC11c2Vycy8p
KQoKV2hhdCBoYXMgY2hhbmdlZCBvdmVyIHRoZSBsYXN0IDQgeWVhcnMgaXMgbWFy
a2V0IHNoYXJlIG9mIHRyYWZmaWMgb24gdGhlIFdlYi4gSXQgbG9va3MgbGlrZSBu
b3RoaW5nIGhhcyBjaGFuZ2VkLCBidXQgR09PRyBhbmQgRkIgbm93IGhhdmUgZGly
ZWN0IGluZmx1ZW5jZSBvdmVyIDcwJSsgb2YgaW50ZXJuZXQgdHJhZmZpYy4gTW9i
aWxlIGludGVybmV0IHRyYWZmaWMgaXMgbm93IHRoZSBbbWFqb3JpdHkgb2YgdHJh
ZmZpYyB3b3JsZHdpZGVdKGh0dHBzOi8vd3d3LnN0YXRpc3RhLmNvbS9zdGF0aXN0
aWNzLzMwNjUyOC9zaGFyZS1vZi1tb2JpbGUtaW50ZXJuZXQtdHJhZmZpYy1pbi1n
bG9iYWwtcmVnaW9ucy8pIGFuZCBpbiBMYXRpbiBBbWVyaWNhIGFsb25lLCBHT09H
IGFuZCBGQiBzZXJ2aWNlcyBoYXZlIGhhZCA2MCUgb2YgbW9iaWxlIHRyYWZmaWMg
aW4gMjAxNSwgZ3Jvd2luZyB0byA3MCUgYnkgdGhlIGVuZCBvZiAyMDE2LiBUaGUg
cmVtYWluaW5nIDMwJSBvZiB0cmFmZmljIGlzIHNoYXJlZCBhbW9uZyBhbGwgb3Ro
ZXIgbW9iaWxlIGFwcHMgYW5kIHdlYnNpdGVzLiBNb2JpbGUgZGV2aWNlcyBhcmUg
cHJpbWFyaWx5IHVzZWQgZm9yIGFjY2Vzc2luZyBHT09HIGFuZCBGQiBuZXR3b3Jr
cy4KClshW1NoYXJlIG9mIGludGVybmV0IHRyYWZmaWMgaW4gTGF0aW4gQW1lcmlj
YSBmcm9tIDIwMTUgdG8gMjAxNl0oL2ltZy9pbnRlcm5ldC1sYXRpbi1hbWVyaWNh
LTIwMTYucG5nKV0oL2ltZy9pbnRlcm5ldC1sYXRpbi1hbWVyaWNhLTIwMTYucG5n
KQoKKFNvdXJjZTogW2h0dHBzOi8vd3d3LnNhbmR2aW5lLmNvbS9yZXNvdXJjZXMv
Z2xvYmFsLWludGVybmV0LXBoZW5vbWVuYS8yMDE2L25vcnRoLWFtZXJpY2EtYW5k
LWxhdGluLWFtZXJpY2EuaHRtbF0oaHR0cHM6Ly93d3cuc2FuZHZpbmUuY29tL3Jl
c291cmNlcy9nbG9iYWwtaW50ZXJuZXQtcGhlbm9tZW5hLzIwMTYvbm9ydGgtYW1l
cmljYS1hbmQtbGF0aW4tYW1lcmljYS5odG1sKSkKCj4gKlRoZSBwcmVzcywgdW5s
aWtlIGJlZm9yZSwgZGVwZW5kcyBvbiBHT09HLUZCIHRvIHN0YXkgaW4gYnVzaW5l
c3MuKgoKQW5vdGhlciBkZW1vbnN0cmF0aW9uIG9mIEdPT0cgYW5kIEZCIGRvbWlu
YW5jZSBjYW4gYmUgc2VlbiBhbW9uZyBtZWRpYSB3ZWJzaXRlcy4gVGhlIG1vc3Qg
cG9wdWxhciB3ZWIgcHJvcGVydGllcyB0aGF0IGRvbid0IGJlbG9uZyB0byBHT09H
IG5vciBGQiBhcmUgdXN1YWxseSBmcm9tIHRoZSBwcmVzcy4gRm9yIGluc3RhbmNl
LCBpbiB0aGUgVVNBIHRoZXJlIGFyZSBbNiBtZWRpYSBzaXRlcyBpbiB0aGUgdG9w
IDEwIHdlYnNpdGVzXShodHRwczovL3d3dy5zdGF0aXN0YS5jb20vc3RhdGlzdGlj
cy8yNzE0MTIvbW9zdC12aXNpdGVkLXVzLXdlYi1wcm9wZXJ0aWVzLWJhc2VkLW9u
LW51bWJlci1vZi12aXNpdG9ycy8pOyBpbiBCcmF6aWwgdGhlcmUgYXJlIFs2IG1l
ZGlhIHNpdGVzIGluIHRoZSB0b3AgMTBdKGh0dHBzOi8vd3d3LnN0YXRpc3RhLmNv
bS9zdGF0aXN0aWNzLzI1NDcyNy9tb3N0LXZpc2l0ZWQtd2ViLXByb3BlcnRpZXMt
aW4tYnJhemlsLyk7IGluIFVLIGl0IGlzIFs1IG91dCAxMF0oaHR0cHM6Ly93d3cu
c3RhdGlzdGEuY29tL3N0YXRpc3RpY3MvMjcyODcxL2xlYWRpbmctaW50ZXJuZXQt
cHJvcGVydGllcy1pbi10aGUtdWstYnktdW5pcXVlLXZpc2l0b3JzLykuCgpGcm9t
IHdoZXJlIGRvIG1lZGlhIHNpdGVzIGdldCB0aGVpciB0cmFmZmljPyBQcmlvciB0
byAyMDE0LCBTZWFyY2ggRW5naW5lIE9wdGltaXphdGlvbiAoU0VPKSB3YXMgYSBj
b21tb24gcHJhY3RpY2UgYW1vbmcgV2ViIERldmVsb3BlcnMgdG8gaW1wcm92ZSB0
aGVpciBzaXRlIGZvciBHb29nbGUgc2VhcmNoZXMsIHNpbmNlIGl0IGFjY291bnRl
ZCBmb3IgYXBwcm94aW1hdGVseSAzNSUgb2YgdHJhZmZpYywgd2hpbGUgbW9yZSB0
aGFuIDUwJSBvZiB0cmFmZmljIGNhbWUgZnJvbSB2YXJpb3VzIG90aGVyIHBsYWNl
cyBvbiB0aGUgV2ViLiBTRU8gd2FzIGltcG9ydGFudCwgd2hpbGUgRmFjZWJvb2sg
cHJlc2VuY2Ugd2FzIG5pY2UtdG8taGF2ZS4gT3ZlciB0aGUgbmV4dCAzIHllYXJz
LCB0cmFmZmljIGZyb20gRmFjZWJvb2sgZ3JldyB0byBiZSBhcHByb3hpbWF0ZWx5
IFs0NSVdKGh0dHA6Ly93d3cucmV1dGVycy5jb20vYXJ0aWNsZS91cy11c2EtaW50
ZXJuZXQtc29jaWFsbWVkaWEvdHdvLXRoaXJkcy1vZi1hbWVyaWNhbi1hZHVsdHMt
Z2V0LW5ld3MtZnJvbS1zb2NpYWwtbWVkaWEtc3VydmV5LWlkVVNLQ04xQkoyQTgp
LCBzdXJwYXNzaW5nIHRoZSBzdGF0dXMgdGhhdCBTZWFyY2ggdHJhZmZpYyBoYWQu
IEluIDIwMTcsIHRoZSBNZWRpYSBkZXBlbmRzIG9uIGJvdGggR29vZ2xlIGFuZCBG
YWNlYm9vayBmb3IgcGFnZSB2aWV3cywgc2luY2UgaXQncyB0aGUgbWFqb3JpdHkg
b2YgdGhlaXIgdHJhZmZpYy4KClshW1JlZmVycmFsIHNvdXJjZSBvZiB0cmFmZmlj
IHRvIHRvcCB3ZWIgcHVibGlzaGVyc10oL2ltZy9yZWZlcnJhbC10by10b3AtcHVi
bGlzaGVycy5wbmcpXSgvaW1nL3JlZmVycmFsLXRvLXRvcC1wdWJsaXNoZXJzLnBu
ZykKCihTb3VyY2U6IFtodHRwczovL2Jsb2cucGFyc2UubHkvcG9zdC8yODU1L2Zh
Y2Vib29rLWNvbnRpbnVlcy10by1iZWF0LWdvb2dsZS1pbi1zZW5kaW5nLXRyYWZm
aWMtdG8tdG9wLXB1Ymxpc2hlcnMvXShodHRwczovL2Jsb2cucGFyc2UubHkvcG9z
dC8yODU1L2ZhY2Vib29rLWNvbnRpbnVlcy10by1iZWF0LWdvb2dsZS1pbi1zZW5k
aW5nLXRyYWZmaWMtdG8tdG9wLXB1Ymxpc2hlcnMvKSkKClRoZSByZWxhdGlvbnNo
aXAgYmV0d2VlbiBtZWRpYSBzaXRlcyBhbmQgdGhlIHR3byB0ZWNoIGdpYW50cyBp
cyBbZGlmZmljdWx0XShodHRwczovL3d3dy50aGV2ZXJnZS5jb20vMjAxNy83LzEw
LzE1OTQ4MTk2KS4gSW4gMjAxNCwgRkIgYnVpbHQgRmFjZWJvb2sgUGFwZXIgYXMg
YW4gYXR0ZW1wdCB0byBoYXZlIGEgbGFyZ2VyIGNvbnRyb2wgb3ZlciBuZXdzIGNv
bnN1bXB0aW9uLiBUaGVpciB0YWN0aWMgZmFpbGVkLCBidXQgdGhlaXIgc3RyYXRl
Z3kgcGVyc2lzdGVkIHRocm91Z2ggZGlmZmVyZW50IG1lYW5zIHN1Y2ggYXMgRmFj
ZWJvb2sgSW5zdGFudCBBcnRpY2xlcy4gVGhlIG1lZGlhLCBiZWluZyBkZXBlbmRl
bnQgb24gc29jaWFsIHRyYWZmaWMgYW5kIHRocmVhdGVuZWQgYnkgdGhlIHNvY2lh
bCBiZWhlbW90aCwgcmVhY3RlZC4gVGhleSBbcHVsbGVkIG91dCBzdXBwb3J0IGZv
ciBJbnN0YW50IEFydGljbGVzXShodHRwczovL3d3dy50aGV2ZXJnZS5jb20vMjAx
Ny80LzE2LzE1MzE0MjEwKS4KCk1lYW53aGlsZSwgR09PRyBub3RpY2VzIGhvdyBp
dHMgU2VhcmNoIHRyYWZmaWMgaGFkbid0IGltcHJvdmVkLCB3aGlsZSBGYWNlYm9v
ayBoYWQgcGlja2VkIHVwIHN0ZWFtLCBzbyBHT09HIGxhdW5jaGVzIHRoZWlyIElu
c3RhbnQgQXJ0aWNsZXMgYWx0ZXJuYXRpdmUgY2FsbGVkIEFjY2VsZXJhdGVkIE1v
YmlsZSBQYWdlcyAoQU1QKSBhbmQgcHJvYWN0aXZlbHkgc3RhcnRzIHNlcnZpbmcg
YXJ0aWNsZXMgZnJvbSBHT09HIHNlcnZlcnMgaW5zdGVhZCBvZiBkaXJlY3Rpbmcg
dHJhZmZpYyB0byBtZWRpYSBzaXRlcy4gVGhlIHByZXNzIHJlYWN0cyBzaW1pbGFy
bHkgdG8gaG93IHRoZXkgZGlkIGZvciBGQjogcmVwb3J0ZWQgYm9sZCBzdG9yaWVz
IGFib3V0IHRoZSBTZWFyY2ggYmVoZW1vdGgncyB0aGlyc3QgZm9yIGNvbnRyb2wg
b3ZlciBuZXdzIGNvbnN1bXB0aW9uLgoKPiAqR09PRyBhbmQgRkIgY2Vhc2VkIGNv
bXBldGluZyBkaXJlY3RseSwgZm9jdXNpbmcgb24gd2hhdCB0aGV5IGRvIGJlc3Qg
aW5zdGVhZC4qCgpEYXRhIHNob3dzIEZCIGhhcyBkcmFtYXRpY2FsbHkgaW1wcm92
ZWQgaXRzIGRvbWluYW5jZSBvbiB0aGUgV2ViLCB3aGlsZSBHb29nbGUgU2VhcmNo
IGhhc24ndCBzaWduaWZpY2FudGx5IGNoYW5nZWQuIEhvdyBleGFjdGx5IGRpZCBG
QiBhY2hpZXZlIHRoYXQsIGFuZCB3aGF0IGV2ZW50cyB3ZXJlIGtleSB0byB0aGF0
IGRldmVsb3BtZW50PyBQcmlvciB0byAyMDE0LCBib3RoIGNvbXBhbmllcyBoYWQg
YSBwb3J0Zm9saW8gb2YgbXVsdGlwbGUgd2ViIHNlcnZpY2VzLiBHT09HIGhhZG4n
dCB5ZXQgYmVjb21lIEFscGhhYmV0LCBzbyBpdCdzIGZvY3VzIHdhcyBkaWZmdXNl
ZC4gR09PRyB3YXMgdHJ5aW5nIHRvIGVudGVyIHRoZSBzb2NpYWwgbWFya2V0LCBm
aXJzdCB3aXRoIEdvb2dsZSBXYXZlLCB0aGVuIEdvb2dsZSBCdXp6LCBPcmt1dCwg
YW5kIEdvb2dsZSsuIEluIHRvdGFsLCBbR09PRyBoYXMgYWNxdWlyZWQgMTggY29t
cGFuaWVzIGZyb20gdGhlIHNvY2lhbCBtZWRpYSBjYXRlZ29yeV0oaHR0cHM6Ly93
d3cuZ2Vja29ib2FyZC5jb20vdGVjaC1hY3F1aXNpdGlvbnMvKSwgb2Ygd2hpY2gg
b25seSAxIGFjcXVpc2l0aW9uIGhhcHBlbmVkIHBvc3QtMjAxNCwgd2hpbGUgNSBv
ZiB0aG9zZSBoYXBwZW5lZCBpbiAyMDEwIGFsb25lLiBGQiB3YXMgY29tcGV0aW5n
IGluIHRoZSBzZWFyY2ggbWFya2V0LCB0aHJvdWdoIEJpbmcsIGluIHBhcnRuZXJz
aGlwIHdpdGggTVNGVC4KCkR1cmluZyAyMDE0LCBGQiBhcHBhcmVudGx5IHJlb3Jn
YW5pemVkIGl0c2VsZiB0byBmb2N1cyBvbiBzb2NpYWwgb25seS4gSW4gRmVicnVh
cnksIGl0IGJvdWdodCBXaGF0c0FwcCwgZm9yIDExIHRpbWVzIHRoZSBwcmljZSBH
T09HIGJvdWdodCBZb3VUdWJlLiBJbiBEZWNlbWJlciwgaXQgY2FuY2VsZWQgaXRz
IEJpbmcgcGFydG5lcnNoaXAgd2l0aCBNU0ZULiBVc2VyIHJldGVudGlvbiBvbiBG
YWNlYm9vay5jb20gZ3JldyBzdGVhZGlseSAoc2VlIGNoYXJ0IGJlbG93KS4gVGhy
b3VnaCBpdHMgZm91ciBzaW1wbGUgcHJvZHVjdHMsIEZhY2Vib29rLCBXaGF0c0Fw
cCwgTWVzc2VuZ2VyLCBhbmQgSW5zdGFncmFtLCBGQiBoYWQgYmVjb21lIHRoZSBz
b2NpYWwgc3VwZXJwb3dlci4KClshW0ZhY2Vib29rIGRhaWx5IGFjdGl2ZSB1c2Vy
cyAoREFVKSBkaXZpZGVkIGJ5IEZhY2Vib29rIG1vbnRobHkgYWN0aXZlIHVzZXJz
IChNQVUpXSgvaW1nL2ZhY2Vib29rLXJldGVudGlvbi5wbmcpXSgvaW1nL2ZhY2Vi
b29rLXJldGVudGlvbi5wbmcpCgooU291cmNlczogW2h0dHBzOi8vd3d3LnN0YXRp
c3RhLmNvbS9zdGF0aXN0aWNzLzM0NjE2Ny9mYWNlYm9vay1nbG9iYWwtZGF1L10o
aHR0cHM6Ly93d3cuc3RhdGlzdGEuY29tL3N0YXRpc3RpY3MvMzQ2MTY3L2ZhY2Vi
b29rLWdsb2JhbC1kYXUvKSBhbmQgW2h0dHBzOi8vd3d3LnN0YXRpc3RhLmNvbS9z
dGF0aXN0aWNzLzI2NDgxMC9udW1iZXItb2YtbW9udGhseS1hY3RpdmUtZmFjZWJv
b2stdXNlcnMtd29ybGR3aWRlL10oaHR0cHM6Ly93d3cuc3RhdGlzdGEuY29tL3N0
YXRpc3RpY3MvMjY0ODEwL251bWJlci1vZi1tb250aGx5LWFjdGl2ZS1mYWNlYm9v
ay11c2Vycy13b3JsZHdpZGUvKSkKClNpbWlsYXJseSwgR09PRyBpbiAyMDE0IHN0
YXJ0ZWQgcmVvcmdhbml6aW5nIGl0c2VsZiB0byBmb2N1cyBvbiBhcnRpZmljaWFs
IGludGVsbGlnZW5jZSBvbmx5LiBJbiBKYW51YXJ5IDIwMTQsIEdPT0cgYm91Z2h0
IERlZXBNaW5kLCBhbmQgaW4gU2VwdGVtYmVyIHRoZXkgc2h1dGRvd24gT3JrdXQg
KG9uZSBvZiB0aGVpciBmZXcgc29jaWFsIHByb2R1Y3RzIHdoaWNoIGhhZCBtb21l
bnRhcnkgc3VjY2VzcyBpbiBzb21lIGNvdW50cmllcykgZm9yZXZlci4gVGhlIEFs
cGhhYmV0IEluYyByZXN0cnVjdHVyaW5nIHdhcyBhbm5vdW5jZWQgaW4gQXVndXN0
IDIwMTUgYnV0IGl0IGxpa2VseSB0b29rIG1hbnkgbW9udGhzIG9mIG1lZXRpbmdz
IGFuZCBidXJlYXVjcmFjeS4gVGhlIHJlc3RydWN0dXJpbmcgd2FzIGltcG9ydGFu
dCB0byBmb2N1cyB0aGUgd2ViLW9yaWVudGVkIGRlcGFydG1lbnRzIGF0IEdPT0cg
dG93YXJkcyBhIHNpbXBsZSBtaXNzaW9uLiBHT09HIHNlZXMgbm8gZnV0dXJlIGlu
IHRoZSBzaW1wbGUgU2VhcmNoIG1hcmtldCwgYW5kIGFubm91bmNlcyB0byBiZSBt
aWdyYXRpbmcgIkZyb20gU2VhcmNoIHRvIFN1Z2dlc3QiIChpbiBFcmljIFNjaG1p
ZHQncyBbb3duIHdvcmRzXShodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92
PUhnX0t4WGhoc0dnKSkgYW5kIGJlaW5nIGFuICJBSSBmaXJzdCBjb21wYW55IiAo
aW4gU3VuZGFyIFBpY2hhaSdzIFtvd24gd29yZHNdKGh0dHBzOi8vd3d3LnlvdXR1
YmUuY29tL3dhdGNoP3Y9OE9nMkJucEJoa00pKS4gR09PRyBpcyBjdXJyZW50bHkg
c2xpZ2h0bHkgYmVoaW5kIEZCIGluIHRlcm1zIG9mIGhvdyBmYXN0IGl0IGlzIGdy
b3dpbmcgaXRzIGRvbWluYW5jZSBvZiB0aGUgd2ViLCBidXQgZHVlIHRvIHRoZWly
IHRlY2huaWNhbCBleHBlcnRpc2UsIHZhc3QgYnVkZ2V0LCBpbmZsdWVuY2UgYW5k
IHZpc2lvbiwgaW4gdGhlIGxvbmcgcnVuIGl0cyBBSSBhc3NldHMgd2lsbCBwbGF5
IGEgbWFzc2l2ZSByb2xlIG9uIHRoZSBpbnRlcm5ldC4gVGhleSBrbm93IHdoYXQg
dGhleSBhcmUgZG9pbmcuCgpUaGVzZSBhcmUgbm8gbG9uZ2VyIHRoZSBzYW1lIGNv
bXBhbmllcyBhcyA0IHllYXJzIGFnby4gR09PRyBpcyBub3QgYW55bW9yZSBhbiBp
bnRlcm5ldCBjb21wYW55LCBpdCdzICp0aGUga25vd2xlZGdlIGludGVybmV0IGNv
bXBhbnkqLiBGQiBpcyBub3QgYW4gaW50ZXJuZXQgY29tcGFueSwgaXQncyAqdGhl
IHNvY2lhbCBpbnRlcm5ldCBjb21wYW55Ki4gVGhleSB1c2VkIHRvIGF0dGVtcHQg
dG8gY29tcGV0ZSwgYW5kIHRoaXMgY29tcGV0aXRpb24ga2VwdCB0aGUgaW50ZXJu
ZXQgbWFya2V0IGRpdmVyc2UuIFRvZGF5LCBob3dldmVyLCB0aGV5IHNlZW0gbW9z
dGx5IHNhdGlzZmllZCB3aXRoIHRoZWlyIG9ydGhvZ29uYWwgZG9taW5hbmNlIG9m
IHBhcnRzIG9mIHRoZSBXZWIsIGFuZCB3ZSBhcmUgbG9zaW5nIGRpdmVyc2l0eSBv
ZiBjaG9pY2VzLiBXaGljaCBsZWFkcyB1cyB0byBhbm90aGVyIHBhcnQgb2YgdGhl
IGludGVybmV0OiBlLWNvbW1lcmNlIGFuZCBBTVpOLgoKQU1aTiBkb2VzIG5vdCBm
b2N1cyBvbiBtYWtpbmcgcHJvZml0LgoKWyFbQW1hem9uJ3MgTG9uZy1UZXJtIEdy
b3d0aF0oL2ltZy9hbWF6b24tcHJvZml0cy5wbmcpXSgvaW1nL2FtYXpvbi1wcm9m
aXRzLnBuZykKCihTb3VyY2U6IFtodHRwczovL3d3dy5zdGF0aXN0YS5jb20vY2hh
cnQvNDI5OC9hbWF6b25zLWxvbmctdGVybS1ncm93dGgvXShodHRwczovL3d3dy5z
dGF0aXN0YS5jb20vY2hhcnQvNDI5OC9hbWF6b25zLWxvbmctdGVybS1ncm93dGgv
KSkKCkluc3RlYWQsIGl0cyBtaXNzaW9uIGlzIHRvIHNlZWsgbWFya2V0IGxlYWRl
cnNoaXAsIGNydXNoaW5nIGNvbXBldGl0b3JzIGluIHRoZSBVU0EuCgpbIVtBbWF6
b24gaGFzIG91dGdyb3duIGNvbXBldGl0b3JzXSgvaW1nL2FtYXpvbi1vdXRncm93
bi1jb21wZXRpdG9ycy5qcGcpXSgvaW1nL2FtYXpvbi1vdXRncm93bi1jb21wZXRp
dG9ycy5qcGcpCgpJIGNvdWxkIGVsYWJvcmF0ZSBvbiBob3cgQU1aTiBpcyAqdGhl
IGUtY29tbWVyY2UgY29tcGFueSosIGJ1dCBJIHdvdWxkIGJlIGp1c3QgcmVwZWF0
aW5nIFtTY290dCBHYWxsb3dheSdzIGV4cG9zdXJlIG9mIHRoaXMgdG9waWNdKGh0
dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9R1dCalVzbU8tTHcpLiBJdCdz
IHdvcnRoIHdhdGNoaW5nIGhpcyB0YWxrcy4KCiMjIFdoYXQgdGhlIFdlYiB3YXMg
YW5kIHdoYXQgaXQgYmVjYW1lCgpUaGUgZXZlbnRzIGFuZCBkYXRhIGFib3ZlIGRl
c2NyaWJlIGhvdyB0aHJlZSBpbnRlcm5ldCBjb21wYW5pZXMgaGF2ZSBhY3F1aXJl
ZCBtYXNzaXZlIGluZmx1ZW5jZSBvbiB0aGUgV2ViLCBidXQgd2h5IGRvZXMgdGhh
dCBpbXBseSB0aGUgYmVnaW5uaW5nIG9mIHRoZSBXZWIncyBkZWF0aD8gVG8gYW5z
d2VyIHRoYXQsIHdlIG5lZWQgdG8gcmVmbGVjdCBvbiB3aGF0IHRoZSBXZWIgaXMu
CgpUaGUgb3JpZ2luYWwgdmlzaW9uIGZvciB0aGUgV2ViIGFjY29yZGluZyB0byBp
dHMgY3JlYXRvciwgVGltIEJlcm5lcnMtTGVlLCB3YXMgYSBzcGFjZSB3aXRoIG11
bHRpbGF0ZXJhbCBwdWJsaXNoaW5nIGFuZCBjb25zdW1wdGlvbiBvZiBpbmZvcm1h
dGlvbi4gSXQgd2FzIGEgcGVlci10by1wZWVyIHZpc2lvbiB3aXRoIG5vIGRlcGVu
ZGVuY3kgb24gYSBzaW5nbGUgcGFydHkuIFRpbSBoaW1zZWxmIGNsYWltcyBbdGhl
IFdlYiBpcyBkeWluZ10oaHR0cHM6Ly93d3cudGhlZ3VhcmRpYW4uY29tL3RlY2hu
b2xvZ3kvMjAxNy9tYXIvMTEvdGltLWJlcm5lcnMtbGVlLXdlYi1pbnZlbnRvci1z
YXZlLWludGVybmV0KTogdGhlIFdlYiBoZSB3YW50ZWQgYW5kIHRoZSBXZWIgaGUg
Z290IGFyZSBubyBsb25nZXIgdGhlIHNhbWUuCgo+ICoqRG9lc24ndCBHT09HIGRl
ZmVuZCBpbiB0aGUgb3BlbiBXZWI/KioKPgo+IEdPT0csIGFzIGEgY29tcGFueSBi
b3JuIGZyb20gdGhlIFdlYiwgaGFzIGhlbHBlZCB0YWtlIGl0IGZvcndhcmQgYm90
aCB0ZWNobm9sb2dpY2FsbHkgYW5kIGluIGFkb3B0aW9uLiBUaGF0IGlzIHVuZGVu
aWFibGUuIFRoZXkgc3RpbGwgbGVhZCBlZmZvcnRzIHRvIGltcHJvdmUgdGhlIG9w
ZW4gV2ViLCBzdWNoIGFzIFthZHZvY2FjeSBvZiBQcm9ncmVzc2l2ZSBXZWIgQXBw
cyAoUFdBcyldKGh0dHBzOi8vZGV2ZWxvcGVycy5nb29nbGUuY29tL3dlYi9wcm9n
cmVzc2l2ZS13ZWItYXBwcy8pIG92ZXIgbmF0aXZlIG1vYmlsZSBhcHBzLgo+Cj4g
SXNuJ3QgR09PRyB0cnlpbmcgdG8gZ3VhcmFudGVlIHRoZSBvcGVuIFdlYiBzdGF5
cyBhbGl2ZT8gTm90IG5lY2Vzc2FyaWx5LiBHT09HJ3MgZ29hbCBpcyB0byBnYXRo
ZXIgYXMgbXVjaCByaWNoIGRhdGEgYXMgcG9zc2libGUsIGFuZCBidWlsZCBBSS4g
VGhlaXIgbWlzc2lvbiBpcyB0byBoYXZlIGFuIEFJIHByb3ZpZGUgdGltZWx5IGFu
ZCBwZXJzb25hbGl6ZWQgaW5mb3JtYXRpb24gdG8gdXMsIG5vdCBzcGVjaWZpY2Fs
bHkgdG8gaGF2ZSB3ZWJzaXRlcyBwcm92aWRlIGluZm9ybWF0aW9uLiBBbnkgR09P
RyBjb25jZXJ0ZWQgZWZmb3J0cyBhcmUgYWxpZ25lZCB0byB0aGUgQUkgbWlzc2lv
bi4KPgo+IE1vYmlsZSB1c2FnZSBpcyBvbiB0aGUgcmlzZSDigJMgaGF2aW5nIGFs
cmVhZHkgY3Jvc3NlZCBkZXNrdG9wIGFzIHRoZSBwcmltYXJ5IGNoYW5uZWwgZm9y
IGludGVybmV0IHVzYWdlIOKAkyBhbmQgbmF0aXZlIG1vYmlsZSBhcHBzIGFyZSBz
byBmYXIgdGhlIGJlc3Qgd2F5IG9mIHByb3ZpZGluZyBnb29kIHVzZXIgZXhwZXJp
ZW5jZSBvbiBtb2JpbGUuIEdPT0cgY29sbGVjdHMgbGl0dGxlIG9yIG5vIGRhdGEg
ZnJvbSBuYXRpdmUgbW9iaWxlIGFwcHMsIHRvIHNvbWUgZXh0ZW50IG9uIEFuZHJv
aWQsIGJ1dCBzcGVjaWFsbHkgb24gaU9TLiBQV0FzIGhhcHBlbiB0byBsaXZlIGlu
IHRoZSBuZXV0cmFsIGFuZCBvcGVuIFdlYiwgYW5kIGFyZSBiZXR0ZXIgc3VpdGVk
IGZvciBkYXRhIGNvbGxlY3Rpb24gd2hpbGUgcHJvdmlkaW5nIGdyZWF0IHVzZXIg
ZXhwZXJpZW5jZSBvbiBtb2JpbGUuCj4KPiBbIVtEZXNrdG9wIHZlcnN1cyBNb2Jp
bGUgaW50ZXJuZXQgdXNhZ2VdKC9pbWcvZGVza3RvcC12cy1tb2JpbGUtMi5qcGcp
XSgvaW1nL2Rlc2t0b3AtdnMtbW9iaWxlLTIuanBnKQo+Cj4gR09PRyBwcm9tb3Rl
cyBsb2NrLWluIGFuZCBwcm9wcmlldGFyeSB0ZWNobm9sb2dpZXMgc3VjaCBhcyBG
aXJlYmFzZSBhbmQgR29vZ2xlLWRlcGVuZGVudCBBTVAgaW5zdGFsbGF0aW9ucyBh
cyBtdWNoIGFzIGl0IGFkdm9jYXRlcyBvcGVuIFBXQXMuIEdPT0cgZG9lcyBub3Qg
Y29uc2lzdGVudGx5IGRlZmVuZCB0aGUgb3BlbiBXZWIuIFRoZXkgW2Ryb3BwZWQg
WE1QUCBpbiBHdGFsa10oaHR0cHM6Ly93d3cuZWZmLm9yZy9kZWVwbGlua3MvMjAx
My8wNS9nb29nbGUtYWJhbmRvbnMtb3Blbi1zdGFuZGFyZHMtaW5zdGFudC1tZXNz
YWdpbmcpLCBhbmQgR3RhbGsgaXRzZWxmIHdhcyBkZXByZWNhdGVkLCBmYXZvcmlu
ZyBHb29nbGUgSGFuZ291dHMgd2l0aCBhIHByb3ByaWV0YXJ5IHByb3RvY29sLiBD
aHJvbWUgV2ViIFN0b3JlIGlzIGEgd2FsbGVkIGdhcmRlbiBsaWtlIEFwcCBTdG9y
ZS4gVGhleSBbc2h1dGRvd24gR29vZ2xlIFJlYWRlcl0oaHR0cDovL2VkaXRpb24u
Y25uLmNvbS8yMDEzLzAzLzE0L3RlY2gvd2ViL2dvb2dsZS1yZWFkZXItZGlzY29u
dGludWVkL2luZGV4Lmh0bWwpIGJhc2VkIG9uIFJTUywgYW4gb3BlbiBzdGFuZGFy
ZC4gW0dvb2dsZSBDbG91ZCBUUFVdKGh0dHBzOi8vd3d3LmZvcmJlcy5jb20vc2l0
ZXMvbW9vcmluc2lnaHRzLzIwMTcvMDUvMjIvZ29vZ2xlLWNsb3VkLXRwdS1zdHJh
dGVnaWMtaW1wbGljYXRpb25zLWZvci1nb29nbGUtbnZpZGlhLWFuZC10aGUtbWFj
aGluZS1sZWFybmluZy1pbmR1c3RyeS8zLyM2MDA1M2NmNzUxM2QpIGlzIHByb3By
aWV0YXJ5IGhhcmR3YXJlIHRoYXQgb25seSBleGlzdHMgaW4gdGhlaXIgZGF0YWNl
bnRlcnMsIHN1cHBvcnRpbmcgdGhlaXIgb3BlbiBzb3VyY2UgZnJhbWV3b3JrIFRl
bnNvckZsb3cuIEdvb2dsZSBJbmJveCBzdWZmZXJzICJwcm9wcmlldGFyeSBjcmVl
cCI6IG5vbi1zdGFuZGFyZCwgY2xvc2VkIGFsZ29yaXRobXMgdGhhdCBwcm9taXNl
IHRvIG9yZ2FuaXplIHlvdXIgbGlmZSwgYW4gZXNzZW50aWFsIGNvbXBvbmVudCBv
ZiBhIGxvY2staW4gYmFzZWQgYnVzaW5lc3MgbW9kZWwuCj4KPiBHT09HIGlzIGEg
aHVnZSBjb21wYW55IHdoZXJlIGVtcGxveWVlcyBoYXZlIGF1dG9ub215IGFuZCBt
dWx0aXBsZSBwcm9qZWN0cyBhbmQgZWZmb3J0cyBhcmUgb2NjdXJyaW5nLiBCaWcg
ZWZmb3J0cywgdGhvdWdoLCBhcmUgY29oZXJlbnQsIGNvbmNlcnRlZCwgYW5kIHdl
bGwgYWxpZ25lZCB3aXRoIGl0cyBtaXNzaW9uOiB0byBiZSBhbiBBSS1maXJzdCBj
b21wYW55LCBhbiBBSSB0aGF0IGlzIGNsb3NlZCBhbmQgbGl2ZXMgaW4gdGhlaXIg
Y2xvdWQuCgpGcm9tIHRoZSA5MHMgdW50aWwgdGhlIDIwMTBzLCB0aGUgV2ViIHdl
IGhhdmUgZXhwZXJpZW5jZWQgaGFzIGJlZW4sIGFsYmVpdCBzb21ld2hhdCBpbXBl
cmZlY3RseSwgZmFpdGhmdWwgdG8gaXRzIG9yaWdpbmFsIHB1cnBvc2UuIFRoZSBX
ZWIncyBkaXZlcnNpdHkgaGFzIGdyYW50ZWQgc3BhY2UgZm9yIG11bHRpcGxlIGJ1
c2luZXNzZXMgdG8gaW5ub3ZhdGUgYW5kIHRocml2ZSwgaW5kZXBlbmRlbnQgaG9i
Ynlpc3QgY29tbXVuaXRpZXMgdG8gZ3JvdywgYW5kIHBlcnNvbmFsIHNpdGVzIHRv
IGJlIGhvc3RlZCBvbiB3aGF0ZXZlciBwaHlzaWNhbCBzZXJ2ZXJzIGNhbiBob3N0
IHRoZW0uIFRoZSBpbnRlcm5ldCdzIGluZnJhc3RydWN0dXJhbCBkaXZlcnNpdHkg
aXMgZGlyZWN0bHkgdGllZCB0byB0aGUgc3VjY2VzcyBvZiBkaXZlcnNlIFdlYiBi
dXNpbmVzc2VzIGFuZCBjb21tdW5pdGllcy4gVGhlIFdlYidzIG9wZW5uZXNzIGlz
IHZpdGFsIGZvciBpdHMgc2VjdXJpdHksIGFjY2Vzc2liaWxpdHksIGlubm92YXRp
b24gYW5kIGNvbXBldGl0aXZlbmVzcy4KCkFmdGVyIDIwMTQsIHdlIHN0YXJ0ZWQg
bG9zaW5nIHRoZSBiZW5lZml0cyBvZiB0aGUgaW50ZXJuZXQncyBpbmZyYXN0cnVj
dHVyYWwgYW5kIGVjb25vbWljYWwgZGl2ZXJzaXR5LiBJdCBpcyBkaWZmaWN1bHQg
dG8gY29tcGV0ZSB3aXRoIEFNWk4ncyBhbmQgR09PRydzIENsb3VkIFNlcnZpY2Vz
LCB3aGljaCBob3N0IGEgbWFzc2l2ZSBhbW91bnQgb2Ygc2l0ZXMgZm9yIG90aGVy
IGJ1c2luZXNzZXMuIEFueSB3ZWJzaXRlIGFzcGlyaW5nIGZvciBzaWduaWZpY2Fu
dCB0cmFmZmljIGRlcGVuZHMgb24gU2VhcmNoIGFuZCBTb2NpYWwgdHJhZmZpYy4K
CiMjIFdoYXQgdGhlIFdlYiB3aWxsIGJlY29tZSB1bmRlciBHT09HLUZCLUFNWk4K
ClRoZSBmb2xsb3dpbmcgYW5hbHlzaXMgaXMgYW4gZXh0cmFwb2xhdGlvbiBmb3Ig
dGhlIGZ1dHVyZSwgYmFzZWQgb24gdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhlIFdl
YiBhbmQgc3RyYXRlZ2llcyBtYWRlIHB1YmxpYyBieSBleGVjdXRpdmVzIGF0IEdP
T0ctRkItQU1aTi4KClRoZSBXYXIgZm9yIE5ldCBOZXV0cmFsaXR5IGluIHRoZSBV
U0Egd29uIGEgW2JhdHRsZSBpbiAyMDE0XShodHRwczovL3d3dy50aGV2ZXJnZS5j
b20vMjAxNC8yLzI1LzU0MzEzODIpLCBidXQgaW4gMjAxNyB3ZSBhcmUgc2VlaW5n
IGEgW3NlY29uZCBiYXR0bGVdKGh0dHBzOi8vd3d3LnRoZXZlcmdlLmNvbS8yMDE3
LzcvMTIvMTU3MTUwMzApIHdoaWNoIGlzIG1vcmUgbGlrZWx5IHRvIGJlIGxvc3Qu
IEludGVybmV0IFNlcnZpY2UgUHJvdmlkZXJzIChJU1BzKSBhcmUgcHJvYmFibHkg
c29vbiBnb2luZyB0byBkaWN0YXRlIHdoYXQgdHJhZmZpYyBjYW4gb3IgY2Fubm90
IGFycml2ZSBhdCBwZW9wbGUncyBlbmQgZGV2aWNlcy4gR09PRy1GQi1BTVpOIHRy
YWZmaWMgd291bGQgYmUgdGhlIG1vc3QgY29tbW9uLCBkdWUgdG8gdGhlaXIgcG9w
dWxhcml0eSBhbW9uZyBpbnRlcm5ldCB1c2Vycy4gQmVjYXVzZSBvZiB0aGlzIG1h
cmtldCBkZW1hbmQsIElTUHMgd2lsbCBsaWtlbHkgcHJvdmlkZSBjaGVhcCBwbGFu
cyB3aXRoIGFjY2VzcyB0byBHT09HLUZCLUFNWk4sIHdoaWxlIG9mZmVyaW5nIG1v
cmUgZXhwZW5zaXZlIHBsYW5zIHdpdGggZnVsbCBpbnRlcm5ldCBhY2Nlc3MuIFtJ
dCBpcyBhbHJlYWR5IGEgcmVhbGl0eSBpbiBQb3J0dWdhbF0oaHR0cHM6Ly93d3cu
cmVkZGl0LmNvbS9yL3RlY2hub2xvZ3kvY29tbWVudHMvNzk3NzBpL2luX3BvcnR1
Z2FsX3dpdGhfbm9fbmV0X25ldXRyYWxpdHlfaW50ZXJuZXQvKS4gVGhpcyB3b3Vs
ZCBncm93IGV2ZW4gbW9yZSB0aGUgZG9taW5hbmNlIHRoZSB0aHJlZSB0ZWNoIGdp
YW50cyBhbHJlYWR5IGVuam95LiBUaGVyZSB3b3VsZCBiZSBubyBtb3JlIGVjb25v
bWljYWwgaW5jZW50aXZlIGZvciBzbWFsbGVyIGJ1c2luZXNzZXMgdG8gaGF2ZSBp
bmRlcGVuZGVudCB3ZWJzaXRlcywgYW5kIGEgZ3JhZHVhbCBtaWdyYXRpb24gdG93
YXJkcyBGYWNlYm9vayBQYWdlcyB3b3VsZCBtYWtlIG1vcmUgc2Vuc2UuIFNtYWxs
ZXIgZS1jb21tZXJjZSBzaXRlcyB3b3VsZCBiZSBib3VnaHQgYnkgQU1aTiBvciBn
byBiYW5rcnVwdC4gQmVjYXVzZSBtb3N0IGludGVybmV0IHVzZXJzIGNvdWxkbid0
IG9wZW4gYWxsIHRoZSBzaXRlcywgR09PRyB3b3VsZCBoYXZlIGxpdHRsZSBpbmNl
bnRpdmUgdG8gYmUgYSBtZXJlIGJyaWRnZSBiZXR3ZWVuIHBlb3BsZSBhbmQgc2l0
ZXMuCgpHT09HJ3Mgc2hpZnQgYXdheSBmcm9tIFNlYXJjaCBpcyBhIHNpZ24gaG93
IHRoZXkgYXJlIGdyb3dpbmcgdGhlaXIgc3RyYXRlZ3kgYmV5b25kIHRoZSBXZWIu
IEZvciBtYW55IHllYXJzLCBHb29nbGUgdXNlZCB0byBiZSBqdXN0IGEgdG9vbCB0
aGF0IHBsYXllZCB0aGUgaW1wb3J0YW50IHJvbGUgb2YgYXNzaXN0aW5nIHRoZSBX
ZWIsIGJ5IGluZGV4aW5nIGl0LiBMYXRlbHksIGhvd2V2ZXIsIGl0IGlzIG5vdCBh
dHRyYWN0aXZlIGZvciBHb29nbGUgdG8gYmUgYSBtZXJlIHNlYXJjaCBlbmdpbmUg
b2YgdGhlIFdlYi4gRm9yIHRoZSBwdXJwb3NlcyBleHByZXNzZWQgaW4gdGhlaXIg
W21pc3Npb24gc3RhdGVtZW50XShodHRwczovL3d3dy50aGVndWFyZGlhbi5jb20v
dGVjaG5vbG9neS8yMDE0L25vdi8wMy9sYXJyeS1wYWdlLWdvb2dsZS1kb250LWJl
LWV2aWwtc2VyZ2V5LWJyaW4pLCAidG8gb3JnYW5pemUgdGhlIHdvcmxkJ3MgaW5m
b3JtYXRpb24gYW5kIG1ha2UgaXQgdW5pdmVyc2FsbHkgYWNjZXNzaWJsZSBhbmQg
dXNlZnVsIiwgdGhlIHNlYXJjaCBlbmdpbmUgYXBwcm9hY2ggaGFzIGJlZW4gZXho
YXVzdGVkLiBUaGUgbXVsdGktc2Vjb25kIHBhdGggZnJvbSBzZWFyY2ggcXVlcnks
IHRvIHNlYXJjaCByZXN1bHRzLCB0byB3ZWJwYWdlLCB0byBpbmZvcm1hdGlvbiwg
aXMgdG9vIGxvbmcgdG8gcHJvdmlkZSBhbiBpZGVhbCB1c2VyIGV4cGVyaWVuY2Uu
IFRoZWlyIGdvYWwgaXMgdG8gY3V0IHRoZSBtaWRkbGVtZW4gaW4gdGhhdCBwYXRo
LiBUaGV5IGhhdmUgdHJpZWQgdG8gY3V0IG91dCB0aGUgcmVzdWx0cyBwYWdlIHdp
dGggdGhlaXIgIkknbSBmZWVsaW5nIGx1Y2t5IiBidXR0b24sIGJ1dCB3aXRob3V0
IGludGVsbGlnZW50IGFuYWx5c2lzIHRoZXkgY2Fubm90IHJlbGlhYmx5IHRha2Ug
c2hvcnRjdXRzIGluIHRoYXQgcGF0aC4gV2l0aCBBSSwgdGhleSBiZWxpZXZlIHRo
ZXkgY2FuIHNob3J0ZW4gdGhlIHBhdGggdG8ganVzdCBvbmUgc3RlcCwgImdldCBp
bmZvcm1hdGlvbiIsIGV2ZW4gd2l0aG91dCBzZWFyY2hpbmcgZm9yIGl0IGluIHRo
ZSBmaXJzdCBwbGFjZS4gVGhhdCdzIHRoZSBwdXJwb3NlIG9mIFN1Z2dlc3QuCgpB
cyBhbiBpbmRleCwgcGVvcGxlIGhhdmUgZGlmZmVyZW50IGV4cGVjdGF0aW9ucyBv
biBzZWFyY2ggcmVzdWx0IG5ldXRyYWxpdHkuIFNvbWUgd2FudCBHb29nbGUgU2Vh
cmNoIHRvIGJlIGVudGlyZWx5IG5ldXRyYWwsIHNvbWUgZGVtYW5kIGltbWVkaWF0
ZSBhY3Rpb24gdG8gcmVtb3ZlIHNvbWUgcmVzdWx0cy4gVGhlIEV1cm9wZWFuIFVu
aW9uIGhhcyBib3RoIFtkZW1hbmRlZCBHT09HIHRvIGNvbXBseSB3aXRoIHJlbW92
YWwgcmVxdWVzdHNdKGh0dHBzOi8vd3d3LmNuZXQuY29tL25ld3MvZ29vZ2xlLW11
c3QtZGVsZXRlLXNlYXJjaC1yZXN1bHRzLXJ1bGVzLWV1cm9wZWFuLWNvdXJ0Lyks
IGFuZCBbZmluZWQgR09PRyBmb3Igbm90IGJlaW5nIG5ldXRyYWwgaW4gc2hvcHBp
bmcgcXVlcmllc10oaHR0cHM6Ly93d3cuYmxvb21iZXJnLmNvbS9uZXdzL2FydGlj
bGVzLzIwMTctMDYtMjcvZ29vZ2xlLWdldHMtcmVjb3JkLTItNy1iaWxsaW9uLWV1
LWZpbmUtZm9yLXNrZXdpbmctc2VhcmNoZXMpLiBJdCBpcyBub3QgYmVuZWZpY2lh
bCBmb3IgR09PRyB0byBhc3N1bWUgdGhlIHJvbGUgb2YgYW4gaW1wYXJ0aWFsIGFy
Yml0ZXIgb2YgY29udGVudCwgc2luY2UgaXQncyBub3Qgc3VwcG9ydGluZyB0aGVp
ciBidXNpbmVzcyBtb2RlbC4gUXVpdGUgdGhlIGNvbnRyYXJ5LCB0aGV5IGFyZSB1
bmRlciBwdWJsaWMgc2NydXRpbnkgZnJvbSBtdWx0aXBsZSBnb3Zlcm5tZW50cywg
cG90ZW50aWFsbHkgcmlza2luZyB0aGVpciByZXB1dGF0aW9uLgoKVGhlIFN1Z2dl
c3Qgc3RyYXRlZ3kgaXMgYmVpbmcgY3VycmVudGx5IGRlcGxveWVkIHRocm91Z2gg
R29vZ2xlIE5vdywgR29vZ2xlIEFzc2lzdGFudCwgQW5kcm9pZCBub3RpZmljYXRp
b25zLCBhbmQgR29vZ2xlIEhvbWUuIE5vbmUgb2YgdGhlc2UgbWVudGlvbmVkIHRl
Y2hub2xvZ2llcyBhcmUgcGFydCBvZiBXZWIsIGluIG90aGVyIHdvcmRzLCBub3Qg
cGFydCBvZiAiYnJvd3Nlci1sYW5kIiBtYWRlIG9mIHdlYnNpdGVzLiDsVGhlIGlu
dGVybmV0IGlzIGp1c3QgdGhlIHVuZGVybHlpbmcgdHJhbnNwb3J0IGxheWVyIGZv
ciBkYXRhIGZyb20gdGhlaXIgY2xvdWQgdG8gZW5kLXVzZXIgZGV2aWNlcywgYnV0
IHRoZSBXZWIgaXRzZWxmIGlzIGJlaW5nIGJ5cGFzc2VkLiBbU2NobWlkdCdzIHZp
c2lvbiBmb3IgdGhlIGZ1dHVyZV0oaHR0cDovL3d3dy5ob2xseXdvb2RyZXBvcnRl
ci5jb20vbmV3cy9nb29nbGUtY2hhaXJtYW4tZXJpYy1zY2htaWR0LWludGVybmV0
LTc2NTk4OSkgaXMgb25lIHdoZXJlIGludGVybmV0IHNlcnZpY2VzIGFyZSB1Ymlx
dWl0b3VzIGFuZCBwZXJzb25hbGl6ZWQsIGFzIG9wcG9zZWQgdG8gYW4gZXhwZXJp
ZW5jZSBjb250YWluZWQgaW4gd2ViIGJyb3dzZXJzIGluIGRlc2t0b3AgbWFjaGlu
ZXMuCgpTaW1pbGFybHksIHdoaWxlIEFNWk4ncyBidXNpbmVzcyBzdGlsbCByZWxp
ZXMgb24gdHJhZmZpYyB0byB0aGVpciBkZXNrdG9wIHdlYiBwb3J0YWwgKGFjY291
bnRpbmcgZm9yIDMzJSBvZiBzYWxlcyksIGEgW2xhcmdlIHBvcnRpb25dKGh0dHBz
Oi8vd3d3LnN0YXRpc3RhLmNvbS9zdGF0aXN0aWNzLzY5MDM2Ni9hbWF6b24tcHVy
Y2hhc2UtY2hhbm5lbHMtdXNhLykgKDI1JSkgb2YgdGhlaXIgc2FsZXMgaGFwcGVu
IHRocm91Z2ggbW9iaWxlIGFwcHMsIG5vdCB0byBtZW50aW9uIEFtYXpvbiBFY2hv
LiBMaWtlIEdvb2dsZSBIb21lLCBBbWF6b24gRWNobyBieXBhc3NlcyB0aGUgV2Vi
IGFuZCB1c2VzIHRoZSBpbnRlcm5ldCBqdXN0IGZvciBjb21tdW5pY2F0aW9uIGJl
dHdlZW4gY2xvdWQgYW5kIGVuZCB1c2VyLiBJbiB0aGVzZSBuZXcgbm9uLXdlYiBj
b250ZXh0cywgdGVjaCBnaWFudHMgaGF2ZSBtb3JlIGF1dGhvcml0eSBvdmVyIGRh
dGEgdHJhZmZpYy4gVGhleSBjYW4gZXZlbiBkaXJlY3RseSBibG9jayBlYWNoIG90
aGVyLCBsaWtlIFtHT09HIHJlY2VudGx5IGN1dCBzdXBwb3J0IGZvciBZb3VUdWJl
IHRyYWZmaWMgaW4gQW1hem9uIEVjaG8gZGV2aWNlc10oaHR0cDovL3d3dy5yZXV0
ZXJzLmNvbS9hcnRpY2xlL3VzLWFtYXpvbi1jb20tZ29vZ2xlL2FtYXpvbi1zYXlz
LWdvb2dsZS1oYXMtcHVsbGVkLXlvdXR1YmUtZnJvbS1lY2hvLXNob3ctZGV2aWNl
LWluLXRlY2gtZmFjZS1vZmYtaWRVU0tDTjFDMjBBOCkuCgojIyBUaGUgQXBwbGVp
ZmljYXRpb24gb2YgdGVjaCBnaWFudHMKCkdPT0csIE1TRlQsIEZCLCBhbmQgQU1a
TiBhcmUgbWltaWNraW5nIEFBUEwncyBzdHJhdGVneSBvZiBidWlsZGluZyBicmFu
ZCBsb3lhbHR5IGFyb3VuZCBoaWdoLWVuZCBkZXZpY2VzLiBUaHJvdWdoIGEgcHJv
Y2VzcyBJIGNhbGwgIkFwcGxlaWZpY2F0aW9uIiwgdGhleSBhcmUgKDEpIHNldHRp
bmcgdXAgd2FsbGVkIGdhcmRlbnMsICgyKSBiZWNvbWluZyBoYXJkd2FyZSBjb21w
YW5pZXMsIGFuZCAoMykgbWFya2V0aW5nIHRoZSBkZXNpZ24gd2hpbGUgZGVzaWdu
aW5nIGZvciB0aGUgbWFya2V0LiBJdCBpcyBhIHRocmVhdCB0byBBQVBMIGl0c2Vs
ZiwgYmVjYXVzZSB0aGV5IGFyZSBiZWhpbmQgdGhlIG90aGVyIGdpYW50cyB3aGVu
IGl0IGNvbWVzIHRvIGJpZyBkYXRhIGNvbGxlY3Rpb24gYW5kIGl0cyB1c2VzLiBX
aGlsZSBBQVBMJ3MgZWFybHkgYW5kIGJvbGQgaW50cm9kdWN0aW9uIG9mIGFuIEFw
cCBTdG9yZSBzaG9vayB0aGUgV2ViIGFzIHRoZSBkb21pbmFudCBzb2Z0d2FyZSBk
aXN0cmlidXRpb24gcGxhdGZvcm0sIGl0IHdhc24ndCBlbm91Z2ggdG8gcmVwbGFj
ZSBpdC4gVGhlIG5leHQgd2F2ZSBvZiB3YWxsZWQgZ2FyZGVucyBtaWdodCBsb29r
IGRpZmZlcmVudDogbGVzcyBub3RpY2VhYmxlLCBidXQgbm9uZXRoZWxlc3MgZGlz
cnVwdGl2ZSB0byB0aGUgV2ViLgoKWyFbR09PRyBkZXZpY2VzXSgvaW1nL2dvb2ct
ZGV2aWNlcy5qcGcpXSgvaW1nL2dvb2ctZGV2aWNlcy5qcGcpCgpUaGVyZSBpcyBh
IHRlbmRlbmN5IGF0IEdPT0ctRkItQU1aTiB0byBieXBhc3MgdGhlIFdlYiB3aGlj
aCBpcyBtb3RpdmF0ZWQgYnkgdXNlciBleHBlcmllbmNlIGFuZCBlZmZpY2llbnQg
Y29tbXVuaWNhdGlvbiwgbm90IGJ5IGFuIGFnZW5kYSB0byBhdm9pZCBicm93c2Vy
cy4gSW4gdGhlIGtub3dsZWRnZSBpbnRlcm5ldCBhbmQgdGhlIGNvbW1lcmNlIGlu
dGVybmV0LCBiZWluZyBlZmZpY2llbnQgdG8gcHJvdmlkZSB3aGF0IHVzZXJzIHdh
bnQgaXMgdGhlIGdvYWwuIEluIHRoZSBzb2NpYWwgaW50ZXJuZXQsIHRoZSBnb2Fs
IGlzIHRvIHByb3ZpZGUgYW4gZWZmaWNpZW50IGNoYW5uZWwgZm9yIGNvbW11bmlj
YXRpb24gYmV0d2VlbiBwZW9wbGUuIFRoaXMgZXhwbGFpbnMgRkIncyAxMC15ZWFy
IHN0cmF0ZWd5IHdpdGggQXVnbWVudGVkIFJlYWxpdHkgKEFSKSBhbmQgVmlydHVh
bCBSZWFsaXR5IChWUikgYXMgdGhlIG5leHQgbWVkaXVtIGZvciBzb2NpYWwgaW50
ZXJhY3Rpb25zIHRocm91Z2ggdGhlIGludGVybmV0LiBUaGlzIHN0cmF0ZWd5IHdv
dWxkIGFsc28gYnlwYXNzIHRoZSBXZWIsIHByb3ZpbmcgaG93IG1vcmUgbmF0dXJh
bCBzb2NpYWwgQVIgd291bGQgYmUgdGhhbiBzb2NpYWwgcmVhbC10aW1lIHRleHRp
bmcgaW4gYnJvd3NlcnMuIEFscmVhZHkgdG9kYXksIG1vc3QgcGVvcGxlIG9uIHRo
ZSBpbnRlcm5ldCBjb21tdW5pY2F0ZSB3aXRoIG90aGVyIHBlb3BsZSB2aWEgYSBt
b2JpbGUgYXBwLCBub3QgdmlhIGEgYnJvd3Nlci4KClRoZSBjb21tb24gcGF0dGVy
biBhbW9uZyB0aGVzZSB0aHJlZSBpbnRlcm5ldCBnaWFudHMgaXMgdG8gZ3JvdyBi
ZXlvbmQgYnJvd3NlcnMsIGNyZWF0aW5nIG5ldyB2aXJ0dWFsIGNvbnRleHRzIHdo
ZXJlIGRhdGEgaXMgY3JlYXRlZCBhbmQgc2hhcmVkLiBUaGUgV2ViIG1heSBkaWUg
bGlrZSBtb3N0IG90aGVyIHRlY2hub2xvZ2llcyBkbzogc2ltcGx5IGJ5IGJlY29t
aW5nIGxlc3MgYXR0cmFjdGl2ZSB0aGFuIG5ld2VyIHRlY2hub2xvZ2llcy4gQW5k
IGxpa2UgbW9zdCBvYnNvbGV0ZSB0ZWNobm9sb2dpZXMsIHRoZXkgZG9uJ3Qgc3Vk
ZGVubHkgZGlzYXBwZWFyLCBuZWl0aGVyIGRvIHRoZXkgZGlzYXBwZWFyIGNvbXBs
ZXRlbHkuIFlvdSBjYW4gc3RpbGwgYnV5IGEgV2Fsa21hbiBhbmQgbGlzdGVuIHRv
IGEgdGFwZSB3aXRoIGl0LCBidXQgdGhlIHRlY2hub2xvZ3kgaGFzIG5ldmVydGhl
bGVzcyBsb3N0IGl0cyBjb2xsZWN0aXZlIHJlbGV2YW5jZS4gVGhlIFdlYidzIGRl
YXRoIHdpbGwgY29tZSBhcyBhIGdyYWR1YWwgZGVjYXkgb2YgaXRzIG5lY2Vzc2l0
eSwgbm90IGFzIGEgZHJhbWF0aWMgbG9zcy4KCiMjIFRoZSBUcmluZXQKClRoZSBp
bnRlcm5ldCB3aWxsIHN1cnZpdmUgbG9uZ2VyIHRoYW4gdGhlIFdlYiB3aWxsLiBH
T09HLUZCLUFNWk4gd2lsbCBzdGlsbCBkZXBlbmQgb24gc3VibWFyaW5lIGludGVy
bmV0IGNhYmxlcyAodGhlICJbQmFja2JvbmVdKGh0dHBzOi8vZW4ud2lraXBlZGlh
Lm9yZy93aWtpL0ludGVybmV0X2JhY2tib25lKSIpLCBiZWNhdXNlIGl0IGlzIGEg
dGVjaG5pY2FsIHN1Y2Nlc3MuIFRoYXQgc2FpZCwgbWFueSBhc3BlY3RzIG9mIHRo
ZSBpbnRlcm5ldCB3aWxsIGxvc2UgdGhlaXIgcmVsZXZhbmNlLCBhbmQgdGhlIHVu
ZGVybHlpbmcgaW5mcmFzdHJ1Y3R1cmUgY291bGQgYmUgb3B0aW1pemVkIG9ubHkg
Zm9yIEdPT0cgdHJhZmZpYywgRkIgdHJhZmZpYywgYW5kIEFNWk4gdHJhZmZpYy4g
SXQgd291bGRuJ3QgY29uY2VwdHVhbGx5IGJlIGFueW1vcmUgYSAibmV0d29yayBv
ZiBuZXR3b3JrcyIsIGJ1dCBqdXN0IGEgIm5ldHdvcmsgb2YgdGhyZWUgbmV0d29y
a3MiLCB0aGUgKlRyaW5ldCosIGlmIHlvdSB3aWxsLiBUaGUgY29uY2VwdCBvZiB3
b3JrcGxhY2UgbmV0d29yayB3aGljaCBnYXZlIGJpcnRoIHRvIHRoZSBpbnRlcm5l
dCBpbmZyYXN0cnVjdHVyZSB3b3VsZCBtaWdyYXRlIHRvIGEgbW9yZSBhYnN0cmFj
dCBsZXZlbDogRmFjZWJvb2sgR3JvdXBzLCBHb29nbGUgSGFuZ291dHMsIEcgU3Vp
dGUsIGFuZCBvdGhlciBjb21wZXRpbmcgc2VydmljZXMgd2hpY2ggY2FuIGJlIGFj
cXVpcmVkIGJ5IGEgdGVjaCBnaWFudC4gV29ya3BsYWNlIG5ldHdvcmtzIGFyZSBh
bHJlYWR5IHRvZGF5IGVtdWxhdGVkIGluIHNvZnR3YXJlIGFzIGEgc2VydmljZSwg
bm90IGFzIHRyYepkaXRpb25hbCBMb2NhbCBBcmVhIE5ldHdvcmtzLiBUbyBpbXBy
b3ZlIHVzZXIgZXhwZXJpZW5jZSwgdGhlIFRyaW5ldCB3b3VsZCBiZSBhIHRlY2hu
aWNhbCBldm9sdXRpb24gb2YgdGhlIGludGVybmV0LiBUaGVzZSBlZmZvcnRzIGFy
ZSBhbHJlYWR5IGhhcHBlbmluZyB0b2RheSwgW2F0IEdPT0ddKGh0dHBzOi8vd3d3
Lm5leHRwbGF0Zm9ybS5jb20vMjAxNy8wNy8xNy9nb29nbGUtd2FudHMtcmV3aXJl
LWludGVybmV0LykuIEluIHRoZSBsb25nLXRlcm0sIHN1cHBvcnRpbmcgcm91dGlu
ZyBmb3IgdGhlIG9sZCBpbnRlcm5ldCBhbmQgdGhlIG9sZCBXZWIgd291bGQgYmUg
YW4gb3ZlcmhlYWQsIHNvIGl0IGNvdWxkIGJlIGJlbmVmaWNpYWwgdG8gY3V0IHN1
cHBvcnQgZm9yIHRoZSBkaXZlcnNlIGludGVybmV0IG9uIHRoZSBwcm90b2NvbCBh
bmQgaGFyZHdhcmUgbGV2ZWwuIEFjY2VzcyB0byB0aGUgb2xkIGludGVybmV0IGNv
dWxkIGJlIGVtdWxhdGVkIG9uIEdPT0cncyBjbG91ZCBhY2Nlc3NlZCB0aHJvdWdo
IHRoZSBUcmluZXQsIG11Y2ggbGlrZSBob3cgW1dpbmRvd3MgOTUgY2FuIGJlIHRv
ZGF5IGVtdWxhdGVkIGluIHlvdXIgYnJvd3Nlcl0oaHR0cHM6Ly93aW45NS5hamYu
bWUvKS4gSVNQcyB3b3VsZCByZWNvZ25pemUgdGhlIG9ic29sZXNjZW5jZSBvZiB0
aGUgaW50ZXJuZXQgYW5kIHN1cHBvcnQgdGhlIFRyaW5ldCBvbmx5LCBkcml2ZW4g
YnkgbWFya2V0IGRlbWFuZCBmb3Igb3B0aW1hbCB1c2VyIGV4cGVyaWVuY2UgZnJv
bSBHT09HLUZCLUFNWk4uCgpQZXJoYXBzIGEgZnV0dXJlIHdpdGggZ3JlYXQgdXNl
ciBleHBlcmllbmNlIGluIEFSLCBWUiwgaGFuZHMtZnJlZSBjb21tZXJjZSBhbmQg
a25vd2xlZGdlIHNoYXJpbmcgY291bGQgZXZva2UgYW4gb3B0aW1pc3RpYyBwZXJz
cGVjdGl2ZSBmb3Igd2hhdCB0aGVzZSB0ZWNoIGdpYW50cyBhcmUgYnVpbGRpbmcu
IEJ1dCAyNSB5ZWFycyBvZiB0aGUgV2ViIGhhcyBnb3R0ZW4gdXMgdXNlZCB0byBm
b3VuZGF0aW9uYWwgZnJlZWRvbXMgdGhhdCB36WUgdGFrZSBmb3IgZ3JhbnRlZC4g
V2UgZm9yZ2V0IGhvdyB1c2VmdWwgaXQgaGFzIGJlZW4gdG8gcmVtYWluIGFub255
bW91cyBhbmQgY29udHJvbCB3aGF0IHdlIHNoYXJlLCBvciBob3cgZWFzeSBpdCB3
YXMgdG8gc3RhcnQgYW4gaW50ZXJuZXQgc3RhcnR1cCB3aXRoIGl0cyBvd24gaW5k
ZXBlbmRlbnQgc2VydmVycyBvcGVyYXRpbmcgd2l0aCB0aGUgc2FtZSByaWdodHMg
R09PRyBzZXJ2ZXJzIGhhdmUuIE9uIHRoZSBUcmluZXQsIGlmIHlvdSBhcmUgcGVy
bWFuZW50bHkgYmFubmVkIGZyb20gR09PRyBvciBGQiwgeW91IHdvdWxkIGhhdmUg
bm8gYWx0ZXJuYXRpdmUuIFlvdSBjb3VsZCBldmVuIGJlIHJlc3RyaWN0ZWQgZnJv
bSBjcmVhdGluZyBhIG5ldyBhY2NvdW50LiBBcyBwcml2YXRlIGJ1c2luZXNzZXMs
IEdPT0csIEZCLCBhbmQgQU1aTiBkb24ndCBuZWVkIHRvIGd1YXJhbnRlZSB5b3Ug
YWNjZXNzIHRvIHRoZWlyIG5ldHdvcmtzLiBZb3UgZG8gbm90IGhhdmUgYSBsZWdh
bCByaWdodCB0byBh6G4gYWNjb3VudCBpbiB0aGVpciBzZXJ2ZXJzLCBhbmQgYXMg
c29jaWV0aWVzIHdlIGFyZW4ndCBkZW1hbmRpbmcgZm9yIHRoZXNlIHJpZ2h0cyBh
cyB2ZWhlbWVudGx5IGFzIHdlIGNvdWxkLCB0byBjb3VudGVyIHRoZSBzdHJhdGVn
aWVzIHRoYXQgdGVjaCBnaWFudHMgYXJlIHB1dHRpbmcgZm9yd2FyZC4KClRoZSBX
ZWIgYW5kIHRoZSBpbnRlcm5ldCBoYXZlIHJlcHJlc2VudGVkIGZyZWVkb206IGVm
ZmljaWVudCBhbmQgdW5zdXBlcnZpc2VkIGV4Y2jnYW5nZSBvZiBpbmZvcm1hdGlv
biBiZXR3ZWVuIHBlb3BsZSBvZiBhbGwgbmF0aW9ucy4gSW4gdGhlIFRyaW5ldCwg
d2Ugd2lsbCBoYXZlIGV2ZW4gbW9yZSB2aXZpZCBleGNoYW5nZSBvZiBpbmZvcm1h
dGlvbiBiZXR3ZWVuIHDmZW9wbGUsIGJ1dCB3ZSB3aWxsIHNhY3JpZmljZSBmcmVl
ZG9tLiBNYW55IG9mIHVzIHdpbGwgd2FrZSB1cCB0b+UgdGhlIHRyYWdlZHkgb2Yg
dGhpcyB0cmFkZW9mZiBvbuRseSBvbmNlIGl0IGlzIHJl4mFsaXTheS7gCgDCwFwE
AAEKABAFAln5oJkJEJ7eI+p+ikiQAACOhQgAKX/uutJA5s9szo1QnMWxLd9gVk6E
m4MGQmrC+homwNK40tbC5hcJ2zxfrKlst9Drw08dCO1hvnsdEYQnqq3vrI49ZdM4
vnslTEehDUmwwwAq0TDsGTfjG90ZxLkq59HwhL7f8wipC13aVRIEfw1PDiAfJFYg
pbEDB9+6Y3deXFi9+/T+bUPnBANeLD9TTHHtLZa5j3ppW2Y59LJLiirc967miuaj
LZmk4vZ9pr+lCGu+0CJ3//EtGPnyWDWRqvwNXm9Z2BmFmvnWYaZak0QmFUvqUXia
kD7GAGdlWkvN8mvyJGJUGc0+nv6Usl7Ykaz1A4uNZoSA6OkL0QHftLk1qw==
=/1EZ
-----END PGP MESSAGE-----
