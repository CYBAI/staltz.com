-----BEGIN PGP MESSAGE-----
Comment: https://keybase.io/download
Version: Keybase Go 1.0.18 (darwin)

xA0DAAoBnt4j6n6KSJABy+F0AOIAAAAA7S0tLQpsYXlvdXQ6IHBvc3QKdGl0bGU6
ICJJcyB5b3VyIEphdmFTY3JpcHQgZnVuY3Rpb24gYWN0dWFsbHkgcHVyZT8iCnRh
Z3M6IFtibG9nXQotLS0KCldoYXQgZG9lcyAicHVyZSBmdW5jdGlvbiIgbWVhbiBp
biB0aGUgY29udGV4dCBvZiBKYXZhU2NyaXB0PyBJbiBwcm9ncmFtbWluZyBpbiBn
ZW5lcmFsLCBwdXJpdHkgaXMgYWxzbyBrbm93biBhcyAicmVmZXJlbnRpYWwgdHJh
bnNwYXJlbmN5IiwgYSBmYW5jeSB3YXkgb2Ygc2F5aW5nICIqcmVwbGFjaW5nIGFu
IGV4cHJlc3Npb24gb3IgZnVuY3Rpb24gY2FsbCB3aXRoIGl0cyByZXN1bHQgd2ls
bCBuZXZlciBjaGFuZ2UgdGhlIGJlaGF2aW9yIG9mIHRoZSBwcm9ncmFtKiIgb3Ig
YSB3YXkgb2Ygc2F5aW5nICIqZXZlcnkgdGltZSB5b3UgcGFzcyB0aGUgc2FtZSBp
bnB1dHMsIHlvdSBhbHdheXMgZ2V0IHRoZSBzYW1lIG91dHB1dHMqIi4KClRoYXQg
c291bmRzIGludHVpdGl2ZSwgYW5kIGEgZnVuY3Rpb24gbGlrZSBgeCA9PiB4ICog
MTBgIGxvb2tzIHB1cmUgYmVjYXVzZSBldmVyeSBzaW5nbGUgdGltZSB5b3UgcGFz
cyBpdCB0aGUgbnVtYmVyIGAzYCBhcyBhcmd1bWVudCB5b3Ugd2lsbCBnZXQgYDMw
YCBhcyBvdXRwdXQuIFNvIGhvdyBjYW4gd2UgdGVsbCB0aGF0IG9uZSBmdW5jdGlv
biBpcyBwdXJlIGFuZCB0aGUgb3RoZXIgaXNuJ3Q/IElzIGl0IGVub3VnaCB0aGF0
IHdlIGp1c3QgcmVhZCB0aGUgY29kZT8KCkxldCdzIHNlZSB3aGF0IHBlb3BsZSB0
aGluay4gWWVzdGVyZGF5IEkgbGF1bmNoZWQgYSBbVHdpdHRlciBwb2xsXShodHRw
czovL3R3aXR0ZXIuY29tL2FuZHJlc3RhbHR6L3N0YXR1cy83Njg4MzM3MTQ5OTAz
MDkzNzYpIHdpdGggdGhlIHF1ZXN0aW9uICJJcyB0aGlzIHB1cmUgb3IgaW1wdXJl
PyIgd2l0aCB0aHJlZSBvcHRpb25zOgoKLSBQdXJlCi0gSW1wdXJlCi0gTm90IHN1
cmUKCkZvciB0aGUgZm9sbG93aW5nIGNvZGUuCgpgYGBqcwpmdW5jdGlvbiBzdW0o
YXJyKSB7CiAgdmFyIHogPSAwOwogIGZvciAodmFyIGkgPSAwOyBpIDwgYXJyLmxl
bmd0aDsgaSsrKSB7CiAgICB6ICs9IGFycltpXTsKICB9CiAgcmV0dXJuIHo7Cn0K
YGBgCgpUaGUgcmVzdWx0cyBvZiB0aGUgcG9sbCB3ZXJlOgoKLSBBIG1hc3NpdmUg
NzQlIG9mIHBlb3BsZSB0aGluayBpdCdzIHB1cmUKLSAxOCUgY29uc2lkZXIgaXQg
aW1wdXJlCi0gOCUgYXJlIG5vdCBzdXJlCgpJdCdzIHVuZGVyc3RhbmRhYmxlIHdo
eSBtb3N0IHBlb3BsZSB0aGluayBpdCdzIHB1cmU6IGV2ZW4gdGhvdWdoIGl0IHVz
ZXMgbXV0YXRpb24gaW50ZXJuYWxseSwgZ2l2ZW4gYW4gYXJyYXkgd2l0aCB2YWx1
ZXMgYFsxLCAyLCAzXWAgYXMgYXJndW1lbnQsIHlvdSB3aWxsIGFsd2F5cyBnZXQg
YDZgIGFzIG91dHB1dC4gRXZlcnkuIFNpbmdsZS4gVGltZS4KCkJ1dCBpdCdzIGFs
c28gdW5kZXJzdGFuZGFibGUgd2h5IDE4JSBvZiBwZW9wbGUgdGhvdWdodCBpdCB3
YXMgaW1wdXJlOiB0aGUgYm9keSBvZiB0aGUgZnVuY3Rpb24gdXNlcyBpbXB1cmUg
ZXhwcmVzc2lvbnMgYW5kIHN0YXRlbWVudHMgd2l0aCBzaWRlIGVmZmVjdHMuIEFm
dGVyIGFsbCwgSSBhc2tlZCAiUHVyZSBvciBpbXB1cmU/Iiwgbm90ICJpcyB0aGlz
ICoqZnVuY3Rpb24qKiBwdXJlPyIuCgpXaGF0J3Mgc3VycHJpc2luZyBpcyB0aGF0
IGJvdGggY2FtcHMgYXJlIHdyb25nLiBUaG9zZSB1bnN1cmUgOCUgd2VyZSBjb3Jy
ZWN0OiBpdCBkZXBlbmRzIG9uIHJ1bnRpbWUgYmVoYXZpb3IuIEp1c3QgYnkgcmVh
ZGluZyB0aGUgZnVuY3Rpb24sIHdlIGNhbm5vdCBiZSBzdXJlLiBJbiBmYWN0LCB0
aGUgMTglIHdobyB0aGluayBpdCdzIGltcHVyZSBhcmUgIm1vcmUgY29ycmVjdCIg
dGhhbiB0aGUgNzQlIHBlcmNlbnQgdGhhdCB0aGluayBpdCdzIHB1cmUsIGJlY2F1
c2UgdGhlcmUgYXJlIGNhc2VzIHdoZXJlIGBzdW1gIGlzIGltcHVyZS4KClRoZSBj
b2RlIGlzIGRlY2VpdGZ1bGx5IHNpbXBsZSwgYW5kIHdoaWxlIHdlIHJlYWQgaXQs
IGFzIGh1bWFucyB3ZSBuYXR1cmFsbHkgbWFrZSBhc3N1bXB0aW9ucy4gSGVyZSBh
cmUgYSBjb3VwbGUgb2YgYXNzdW1wdGlvbnMgdGhhdCB5b3UgbWFkZSB3aXRob3V0
IHByb2JhYmx5IHJlYWxpemluZzoKCi0gYHN1bWAgbWVhbnMgdGhpcyBmdW5jdGlv
biB3aWxsIGFjdHVhbGx5IHN1bSBudW1iZXJzICh3aHkgY291bGRuJ3QgaXQgc3Rh
bmQgZm9yIFN1cHByZXNzIFVuaXZlcnNhbCBNYWNybz8pCi0gYGFycmAgbWVhbnMg
ImFycmF5IiAod2h5IGNvdWxkbid0IGl0IG1lYW4gImFycm93IiBvciAiYXJyaXZh
bHMiPykKLSBgYXJyYCBpcyBhY3R1YWxseSBhbiBhcnJheQotIGBhcnJgIGlzIG5v
bi1udWxsLCBub24tdW5kZWZpbmVkCi0gVGhlIGVsZW1lbnRzIGluIHRoZSBhcnJh
eSBhcmUgbnVtYmVycwotIFRoZSBlbGVtZW50cyBpbiB0aGUgYXJyYXkgZG9uJ3Qg
aGF2ZSB0aGVpciBgdmFsdWVPZmAgZnVuY3Rpb25zIHRhbXBlcmVkIHdpdGgKCkhl
cmUncyB0aGUgcHJvYmxlbTogYWxsIHRoZXNlIGFzc3VtcHRpb25zIG1heSBiZSBi
cm9rZW4sIGJ1dCB0aGUgY29kZSBhYm92ZSBkb2Vzbid0IHRlbGwgeW91IHRoYXQu
IEhlcmUgYXJlIGEgY291cGxlIG9mIHdheXMgd2UgY2FuIGJyZWFrIG91ciBmdW5j
dGlvbiBhbmQgbWFrZSBpdCBpbXB1cmU6CgpgYGBqcwpzdW0oKTsgLy8gVHlwZUVy
cm9yOiBDYW5ub3QgcmVhZCBwcm9wZXJ0eSAnbGVuZ3RoJyBvZiB1bmRlZmluZWQK
YGBgCgpgYGBqcwp2YXIgYXJyID0gW3t9LCB7fSwge31dOwphcnJbMF0udmFsdWVP
ZiA9IGFyclsxXS52YWx1ZU9mID0gYXJyWzJdLnZhbHVlT2YgPSBNYXRoLnJhbmRv
bTsKc3VtKGFycik7IC8vIDIuMzkzNjYwNjEyODQ4ODk5CnN1bShhcnIpOyAvLyAy
LjM0MTgzMzkyOTI4NDU5OTgKc3VtKGFycik7IC8vIDIuMTUwNDgwOTQ0NTIzMjQK
Ly8gU2FtZSBpbnB1dCwgZGlmZmVyZW50IG91dHB1dHMhCmBgYAoKT2ssIHNvIGBz
dW1gIGlzIGltcHVyZS4KCk5vdCBzbyBmYXN0ISBBbGwgSmF2YVNjcmlwdCBgZnVu
Y3Rpb25gcyBhcmUgYWN0dWFsbHkgInByb2NlZHVyZXMiLiBBIHB1cmUgYGZ1bmN0
aW9uYCBpcyBqdXN0IGEgInByb2NlZHVyZSIgdGhhdCAqKmJlaGF2ZXMqKiBNYXRo
ZW1hdGljYWwgRnVuY3Rpb24sIHRoZSBvbmx5IHRydWUgcHVyZSBmdW5jdGlvbnMu
IFNvIHRoZXJlIGlzIGEgZGlmZmVyZW5jZSBiZXR3ZWVuIGEgYGZ1bmN0aW9uYCBh
bmQgYSAiZnVuY3Rpb24iLiBXZSBjYW4gb25seSBzYXkgdGhhdCAibXkgSmF2YVNj
cmlwdCBmdW5jdGlvbiBpcyBiZWhhdmluZyBsaWtlIGEgTWF0aGVtYXRpY2FsIEZ1
bmN0aW9uIGluIHRoaXMgY2FzZSIuCgpJJ20ga2luZCBvZiBhc3N1bWluZyB5b3Ug
a25vdyB3aGF0IEknbSB0YWxraW5nIGFib3V0LCBidXQganVzdCB0byBnaXZlIGEg
aGludDogYSBNYXRoZW1hdGljYWwgRnVuY3Rpb24gaXMgYSByZWxhdGlvbiBkZWZp
bmVkIG92ZXIgYSBzZXQsIG1hcHBpbmcgdG8gYW5vdGhlciBzZXQuIEZvciBpbnN0
YW5jZSB3ZSBjb3VsZCBzYXkgYHN1bWAgaGFzIHRvIHdvcmsgb25seSBvbiBhcnJh
eXMgb2YgbnVtYmVycy4gQXJyYXlzIG9mIG9iamVjdHMgYXJlIG5vdCBhbGxvd2Vk
LgoKU28sIGJhY2sgdG8gSmF2YVNjcmlwdCwgYGZ1bmN0aW9uIHN1bWAgd2lsbCBi
ZWhhdmUgbGlrZSBhIE1hdGhlbWF0aWNhbCBGdW5jdGlvbiBkZXBlbmRpbmcgb24g
aG93IHlvdSB1c2UgaXQuIElmIHRoaXMgaXMgeW91ciBlbnRpcmUgcHJvZ3JhbToK
CmBgYGpzCmZ1bmN0aW9uIHN1bShhcnIpIHsKICB2YXIgeiA9IDA7CiAgZm9yICh2
YXIgaSA9IDA7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHsKICAgIHogKz0gYXJyW2ld
OwogIH0KICByZXR1cm4gejsKfQoKdmFyIGFyciA9IFsxLCAyLCAzXTsKdmFyIHgg
PSBzdW0oYXJyKTsKdmFyIHkgPSBzdW0oYXJyKTsKdmFyIHogPSBzdW0oYXJyKTsK
CmNvbnNvbGUubG9nKHgsIHksIHopOwpgYGAKClRoZW4sIHdlbGwsIG9mIGNvdXJz
ZSBgc3VtYCBpcyBwdXJlISBJdCAqKmJlaGF2ZWQqKiBsaWtlIGEgTWF0aGVtYXRp
Y2FsIEZ1bmN0aW9uLiBQdXQgaXQgaW4gYW5vdGhlciBzaXR1YXRpb24gYW5kIGl0
IHdvbid0IGJlaGF2ZSBsaWtlIGEgTWF0aGVtYXRpY2FsIEZ1bmN0aW9uLgoKU28s
IHRoZSBhbnN3ZXIgaXM6IGl0IGRlcGVuZHMuIFdoaWNoIG1lYW5zOiBnaXZlbiBh
bnkgSmF2YVNjcmlwdCBmdW5jdGlvbiwgbW9zdCBvZiB0aGUgdGltZXMgeW91IGNh
bm5vdCBrbm93IGlmIGl0IGlzIHB1cmUgb3IgaW1wdXJlIGp1c3QgYnkgcmVhZGlu
ZyB0aGUgY29kZS4gWW91IG5lZWQgdG8ga25vdyBob3cgdGhhdCBmdW5jdGlvbiBp
cyBjYWxsZWQgYW5kIHdoYXQgYXJlIGl0cyBhcmd1bWVudHMuCgpSZW1lbWJlciBv
dXIgaW5ub2NlbnQgYHggPT4geCAqIDEwYD8gUG9vciBmZWxsb3cuIFdlIGNhbid0
IGV2ZW4gc2F5IHRoYXQgdGhpcyBvbmUgaXMgcHVyZSBlaXRoZXIuIExvb2sgYXQg
aXQgYmVoYXZpbmcgaW1wdXJlbHk6CgpgYGBqcwp2YXIgYSA9IHt9OyBhLnZhbHVl
T2YgPSBNYXRoLnJhbmRvbTsKdmFyIGZuID0geCA9PiB4ICogMTA7CmZuKGEpOyAv
LyA1LjEwNzkyNjgxNzM3MzkzOApmbihhKTsgLy8gMy40MTAwNzc1NzU3MjQ1NDE2
CmZuKGEpOyAvLyA1LjE5MDM4MzE2MTM2OTUwOTUKLy8gU2FtZSBpbnB1dCwgZGlm
ZmVyZW50IG91dHB1dHMhCmBgYAoKR29zaCEgSXMgdGhlcmUgYW55dGhpbmcgcHVy
ZSBhdCBhbGwgaW4gSmF2YVNjcmlwdD8gQW5vdGhlciBjb21tZW50IHlvdSBjb3Vs
ZCB0b3NzIGF0IG1lIGlzOiAiKml0IGRvZXNuJ3QgbWF0dGVyIGJlY2F1c2UgaW4g
cHJhY3RpY2Ugd2Ugd29uJ3QgaGl0IHRoZXNlIGZ1bmt5IGNvcm5lciBjYXNlcyB5
b3UganVzdCBtYWRlIHVwKiIuIEluZGVlZCwgd2Ugd29uJ3QgaGF2ZSBgdmFsdWVP
ZmAgdGFtcGVyZWQgdG8gYmUgYE1hdGgucmFuZG9tYC4KClVudGlsLi4uIG9uZSBk
YXkgd2UgZG8uIFlvdSBrbm93IHRob3NlIHZlcnkgaGFpcnkgYnVncyB5b3UgZmln
aHQgYWdhaW5zdCBzb21ldGltZXM/IFlvdSBldmVuIGNvbnNpZGVyIHRoYXQgbWF5
YmUgdGhpcyBKYXZhU2NyaXB0IGhhcyBibGFjayBtYWdpYyBiZWhpbmQgaXQuIEl0
J3MgY3Vyc2VkLiBTb21ldGhpbmcgbXlzdGljYWwgaXMgZ29pbmcgb24uIFRob3Nl
IG15c3RpY2FsIGNhc2VzIHVzdWFsbHkgb2NjdXIgYmVjYXVzZSBzb21ldGhpbmcg
dmVyeSBjb3JuZXItY2FzZXkgaGFwcGVuZWQsIHdoaWNoIHlvdSBkaWRuJ3QgcHJl
ZGljdCBjb3VsZCBoYXBwZW4uIFllYWgsIG5vdyBpdCBmZWVscyBmYW1pbGlhciwg
cmlnaHQ/CgpTbywgYXJlIHdlIGN1cnNlZD8gYHggPT4geCAqIDEwYCBpcyBzbyBj
dXRlIGFuZCBlYXN5IHRvIHVzZSwgYnV0IGl0J3MgYWxzbyBub3QgcHVyZSBhbHdh
eXMuIElzIHRoZXJlIGFueXRoaW5nIHB1cmUgaW4gSmF2YVNjcmlwdD8gSXMgcHVy
aXR5IGluIEphdmFTY3JpcHQgZXZlbiBwb3NzaWJsZT8gSXMgSmF2YVNjcmlwdCBl
bnRpcmVseSBpbXB1cmU/CgpXZWxsLCBuby4gSGVyZSdzIGhvdyB3ZSBjYW4gbWFr
ZSBgc3VtYCAqYmVoYXZlIGxpa2UqIGEgTWF0aGVtYXRpY2FsIEZ1bmN0aW9uIGV2
ZXJ5IHNpbmdsZSB0aW1lOgoKYGBganMKZnVuY3Rpb24gc3VtKGFycikgewogIGlm
ICghYXJyKSByZXR1cm4gdm9pZCAwOwogIGlmICh0eXBlb2YgYXJyICE9PSAnb2Jq
ZWN0JykgcmV0dXJuIHZvaWQgMDsKICBpZiAoIUFycmF5LmlzQXJyYXkoYXJyKSkg
cmV0dXJuIHZvaWQgMDsKICB2YXIgeiA9IDA7CiAgZm9yICh2YXIgaSA9IDA7IGkg
PCBhcnIubGVuZ3RoOyBpKyspIHsKICAgIGlmICh0eXBlb2YgYXJyW2ldICE9PSAn
bnVtYmVyJykgewogICAgICByZXR1cm4gdm9pZCAwOwogICAgfQogICAgeiArPSBh
cnJbaV07CiAgfQogIHJldHVybiB6Owp9CmBgYAoKV2hhdCBpZiBzb21lb25lIHRh
bXBlcmVkIHdpdGggYEFycmF5LmlzQXJyYXlgPwoKYGBganMKQXJyYXkuaXNBcnJh
eSA9IChhcnIpID0+IE1hdGgucmFuZG9tKCkgPCAwLjU7CmBgYAoKT2ssIHdhaXQg
YSBtaW51dGU6CgpgYGBkaWZmCiBmdW5jdGlvbiBzdW0oYXJyKSB7CiAgIGlmICgh
YXJyKSByZXR1cm4gdm9pZCAwOwogICBpZiAodHlwZW9mIGFyciAhPT0gJ29iamVj
dCcpIHJldHVybiB2b2lkIDA7CisgIGlmIChBcnJheS5pc0FycmF5LnRvU3RyaW5n
KCkgIT09ICdmdW5jdGlvbiBpc0FycmF5KCkgeyBbbmF0aXZlIGNvZGVdIH0nKSB7
CisgICAgcmV0dXJuIHZvaWQgMDsKKyAgfQogICBpZiAoIUFycmF5LmlzQXJyYXko
YXJyKSkgcmV0dXJuIHZvaWQgMDsKICAgdmFyIHogPSAwOwogICBmb3IgKHZhciBp
ID0gMDsgaSA8IGFyci5sZW5ndGg7IGkrKykgewogICAgIGlmICh0eXBlb2YgYXJy
W2ldICE9PSAnbnVtYmVyJykgewogICAgICAgcmV0dXJuIHZvaWQgMDsKICAgICB9
CiAgICAgeiArPSBhcnJbaV07CiAgIH0KICAgcmV0dXJuIHo7CiB9CmBgYAoKVG8g
bWFrZSBpdCBwdXJlLCB3ZSBiYXNpY2FsbHkgbGlzdGVkIGFsbCB0aGUgYXNzdW1w
dGlvbnMgd2UgaGFkIGFib3V0IHRoZSBpbnB1dC4gQnkgdGhlIHdheSwgSSBzdGls
bCBmZWVsIHVuZWFzeSB0aGF0IHNvbWVvbmUgd2lsbCBmaW5kIGEgY2xldmVyIHdh
eSB0byBicmVhayBteSAicHVyZSIgYHN1bWAuIExpc3RpbmcgdGhlIGFzc3VtcHRp
b25zIGlzIHRlZGlvdXMgYW5kIG1ha2VzIHRoZSBjb2RlIGhhcmRlciB0byByZWFk
LiBQcm9iYWJseSB5b3UgaGF2ZSB3cml0dGVuIGNvZGUgbGlrZSB0aGlzIGZvciBj
b21tb24gaW5wdXRzIHRoYXQgYXJlIGludmFsaWQuIEJ1dCBqdXN0IGxpa2UgSSBm
ZWx0IHVuZWFzeSwgc28gc2hvdWxkIHlvdS4gQXJlIHlvdSBzdXJlIHlvdSBjb3Zl
cmVkIGFsbCBjb3JuZXIgY2FzZXMgYW5kIHBvc3NpYmxlIHNpdHVhdGlvbnM/IERv
ZXMgaXQgYWx3YXlzIGJlaGF2ZSBsaWtlIGEgTWF0aGVtYXRpY2FsIEZ1bmN0aW9u
PwoKSGVyZSdzIGhvdyBmdW5jdGlvbmFsIHByb2dyYW1taW5nIGxhbmd1YWdlcyBh
cmUgcHVyZTogdGhleSBtYWtlIGl0IGVhc3kgdG8gbGlzdCB0aGUgYXNzdW1wdGlv
bnMgYWJvdXQgeW91ciBmdW5jdGlvbi4KCkluIFR5cGVTY3JpcHQsIHdlIGNhbiB3
cml0ZSBvdXIgYXNzdW1wdGlvbnMgaW4gdGhlIHNpZ25hdHVyZToKCmBgYHR5cGVz
Y3JpcHQKZnVuY3Rpb24gc3VtKGFycjogQXJyYXk8bnVtYmVyPik6IG51bWJlcgpg
YGAKClRoZSBmdW5jdGlvbiBib2R5IGlzIHRoZSBzYW1lIGFzIGluIEphdmFTY3Jp
cHQ6CgpgYGB0eXBlc2NyaXB0CmZ1bmN0aW9uIHN1bShhcnI6IEFycmF5PG51bWJl
cj4pOiBudW1iZXIgewogIHZhciB6ID0gMDsKICBmb3IgKHZhciBpID0gMDsgaSA8
IGFyci5sZW5ndGg7IGkrKykgewogICAgeiArPSBhcnJbaV07CiAgfQogIHJldHVy
biB6Owp9CmBgYAoKSWYgeW91IHRyeSB0byB1c2UgdGhhdCBmdW5jdGlvbiB3aXRo
OgoKYGBganMKc3VtKCk7CmBgYAoKSXQgd29uJ3QgZXZlbiBjb21waWxlISBTbyBp
dCBtZWFucyB5b3VyIHByb2dyYW0gd29uJ3QgZXZlbiAiYmVoYXZlIiBpbiB0aGUg
Zmlyc3QgcGxhY2UuIEFsc28gdGhpcyB3b24ndCBjb21waWxlOgoKYGBganMKdmFy
IGFyciA9IFt7fSwge30sIHt9XTsKYXJyWzBdLnZhbHVlT2YgPSBhcnJbMV0udmFs
dWVPZiA9IGFyclsyXS52YWx1ZU9mID0gTWF0aC5yYW5kb207CnN1bShhcnIpOwpz
dW0oYXJyKTsKc3VtKGFycik7CmBgYAoKSG93ZXZlciwgdGhlIGNsZXZlciByZWFk
ZXJzIHdpbGwgc2VlIHRoYXQgbXkgVHlwZVNjcmlwdCBgc3VtYCBjYW4gYnJlYWsg
dG9vOgoKYGBgdHlwZXNjcmlwdApzdW0obnVsbCk7CmBgYAoKQ29tcGlsZXMgd2l0
aCBzdWNjZXNzLCBidXQgZ2l2ZXMgdGhlIHJ1bnRpbWUgZXJyb3IgIlR5cGVFcnJv
cjogQ2Fubm90IHJlYWQgcHJvcGVydHkgJ2xlbmd0aCcgb2YgbnVsbCIuIFRoYXQn
cyBiZWNhdXNlIFR5cGVTY3JpcHQgcHJlLXYyLjAgYWNjZXB0cyB0aGF0IGBBcnJh
eTxudW1iZXI+YCBpbmNsdWRlcyBgbnVsbGAgdG9vLiBFdmVuIGlmIHdlIHVzZSBU
eXBlU2NyaXB0IHYyLjEsIHdlIGNhbiB0cmljayBUeXBlU2NyaXB0IHdpdGggdHlw
ZSBjYXN0aW5nOgoKYGBgdHlwZXNjcmlwdAp2YXIgYXJyID0gW3t9LCB7fSwge31d
IGFzIEFycmF5PG51bWJlcj47IC8vIHRydXN0IG1lLCBjb21waWxlciEKYXJyWzBd
LnZhbHVlT2YgPSBhcnJbMV0udmFsdWVPZiA9IGFyclsyXS52YWx1ZU9mID0gTWF0
aC5yYW5kb207CnN1bShhcnIpOyAvLyAyLjM5MzY2MDYxMjg0ODg5OQpzdW0oYXJy
KTsgLy8gMi4z6zQxODMzOTI5Mjg0NTk5OApzdW0oYXJyKTsgLy8gMi4xNTA0ODA5
NDQ1MjMyNApgYGAKCldoaWNoIGNvbXBpbGVzIGJ1dCBnaXZlcyBkaWZmZXJlbnQg
b3V0cHV0cyBmb3IgYHN1bShhcnIpYC4KClNvLCBpcyBUeXBlU2NyaXB0IGRvb21l
ZCB0b28/IFdlbGwsIGtpbmQgb2YgeWVzLCBidXQgbXVjaCBsZXNzIGRvb21lZCB0
aGFuIEphdmFTY3JpcHQgaXMuIFR5cGVTY3JpcHQgdHlwaW5ncyBhZGQgYXNzdW1w
dGlvbnMgdG8geW91ciBjb2RlIHNvIGl0IHdpbGwgY2F0Y2ggbW9yZSBjb3JuZXIg
Y2FzZXMgdGhhbiB5b3Ugd291bGQgdHlwaWNhbGx5IGNhdGNoIHdoZW4gd3JpdGlu
ZyBuYWl2ZSBjb2RlLiBTbywgSSBsaWtlIFR5cGVTY3JpcHQuIEl0IGhlbHBzIG1l
IGZlZWwgYSBiaXQgbGVzcyB1bmVhc3kuCgpDYW4gd2UgcmVhbGx5IGJlIHN1cmUg
aWYgYSBmdW5jdGlvbiBpcyBwdXJlIGp1c3QgYnkgcmVhZGluZyBpdD8gV2VsbCwg
aW4gYW4gYWN0dWFsIGZ1bmN0aW9uYWwgcHJvZ3JhbW1pbmcgbGFuZ3VhZ2UgbGlr
ZSBQdXJlU2NyaXB0IG9yIEhhc2tlbGwgd2UgY2FuOgoKYGBgaGFza2VsbApzdW0g
OjogW0ludF0gLT4gSW50CnN1bSA9IGZvbGRsICgrKSAwCmBgYAoKSWYgeW91IGRv
bid0IHVuZGVyc3RhbmQgdGhlIHN5bnRheCwgaGVyZSdzIHRoZSBpbXBvcnRhbnQg
cGFydDogYFtJbnRdIC0+IEludGAuIEl0IG1lYW5zIGl0J3MgYSBmdW5jdGlvbiB0
aGF0IHRha2VzIGEgbGlzdCBvZiBgSW50YCBhbmQgcmV0dXJucyBqdXN0IGFuIGBJ
bnRgLiBUaGUgbGlzdCBjYW5ub3QgYmUgdW5kZWZpbmVkLCBjYW5ub3QgYmUgbnVs
bC4gQW5kIEkgZG9uJ3QgdGhpbmsgeW91IGNhbiB0YW1wZXIgd2l0aCB0aGUgbnVt
YmVycyBsaWtlIHlvdSBjYW4gaW4gSmF2YVNjcmlwdC4gQW5kIHRoZXJlJ3MgYSB3
aG9sZSBsb3Qgb2YgYXNzdW1wdGlvbnMgZW1iZWRkZWQgaW50byBgSW50YC4gSXQn
cyBhIHR5cGUgdGhhdCBzYXRpc2ZpZXMgbWFueSB0eXBlY2xhc3NlczogYE51bWAg
KGl0J3MgYSBudW1iZXIpLCBgT3JkYCAodGhlIGludGVnZXJzIGNhbiBiZSBvcmRl
cmVkKSwgYEVxYCAodGhlIGludGVnZXJzIGNhbiBiZSBgPT09YCBjb21wYXJlZCks
IGBTaG93YCAod2UgY2FuIG1ha2UgYSBodW1hbiByZWFkYWJsZSBmb3JtYXQgZm9y
IGludGVnZXJzKSwgZXRjLiBBbGwgdGhvc2UgYXNzdW1wdGlvbnMgY2F0Y2ggYSBs
b3Qgb2YgY29ybmVyIGNhc2VzLiBNYXliZSB0aGVyZSBhcmUgYSBmZXcgcnVudGlt
ZSBlcnJvcnMgYW5kIHVuc2FmZSBvcGVyYXRpb25zIGluIEhhc2tlbGwsIGJ1dCB0
aGUgcG9pbnQgaXMgaXQncyBkYW1uIGdvb2QgYXQgbWFraW5nIGNvZGUgYmVoYXZl
IGxpa2UgYSBNYXRoZW1hdGljYWwgRnVuY3Rpb24uCgo8aDIgaWQ9ImNvbmNsdXNp
b24iIGNsYXNzPSJociI+PHNwYW4gY2xhc3M9ImhyIj5DT05DTFVTSU9OPC9zcGFu
PjwvaDI+CgpPaywgc28gSGFza2VsbCBmdW5jdGlvbnMgYXJlIHB1cmUsIGFuZCB5
b3UgY2FuIGtub3cgdGhhdCBqdXN0IGJ5IHJlYWRpbmcgdGhlIGNvZGUuIEJ1dCBp
c24ndCB0aGUgdGl0bGUgb2YgdGhpcyBhcnRpY2xlIGFib3V0IEphdmFTY3JpcHQ/
CgpJJ3ZlIGJlZW4gdGhpbmtpbmcgYWJvdXQgcHVyaXR5IGluIEphdmFTY3JpcHQg
Zm9yIGEgd2hpbGUsIGJlY2F1c2UgcmVjZW50bHkgSSd2ZSBoYWQgYSBkaXNjdXNz
aW9uIHdpdGggcGVvcGxlIGFib3V0ICJpcyBSeEpTIFtgc2NhbmBdKGh0dHA6Ly9y
ZWFjdGl2ZXguaW8vcnhqcy9jbGFzcy9lczYvT2JzZXJ2YWJsZS5qc35PYnNlcnZh
YmxlLmh0bWwjaW5zdGFuY2UtbWV0aG9kLXNjYW4pIG9wZXJhdG9yIHB1cmU/IiBh
bmQgSSB3YXMgZGVmZW5kaW5nIHRoYXQgaXQgaXMgcHVyZS4gSSB3YXMgd3Jvbmcu
IEFjdHVhbGx5LCBJIHdhc24ndC4gSXQgZGVwZW5kcy4gSWYgdXNlZCBvdXRzaWRl
IG9mIHRoZSBjb250ZXh0IG9mIGhpZ2hlci1vcmRlciBPYnNlcnZhYmxlcywgbGlr
ZSBpdCB+fmlzfn4gW3dhc10oaHR0cDovL2VsbS1sYW5nLm9yZy9ibG9nL2ZhcmV3
ZWxsLXRvLWZycCkgaW4gRWxtIChhbiBhY3R1YWwgZnVuY3Rpb25hbCBw6nJvZ3Jh
bW1pbmcgbGFuZ3VhZ2UsIGluIHRoZSBsZWFndWUgb2YgSGFza2VsbCBhbmQgUHVy
ZVNjcmlwdCksIHRoZW4gaXQgaXMgcHVyZS4gSXQgKipiZWhhdmVzKiogbGlrZSBh
IE1hdGhlbWF0aWNhbCBGdW5jdGlvbi4gQnV0LCBpZiB5b3UgdXNlIGBzY2FuYCBp
biBoaWdoZXItb3JkZXIgT2JzZXJ2YWJsZXMsIHRoZXJlIGlzIGEgbG90IG9mIHBv
c3NpYmlsaXR5IGl0IHdvbid0IGJlaGF2ZSBsaWtlIGEgTWF0aGVtYXRpY2FsIEZ1
bmN0aW9uLgoKV2h5IGRvZXMgdGhpcyBhbGwgbWF0dGVyPyBCZWNhdXNlIEkgaG9w
ZSB3ZSBjYW4gc3RhcnQgc2hpZnRpbmcgb3VyIGRpc2N1c3Npb25zIGZyb20gImlz
IHRoaXMgcHVyZT8iIHRvCgo+ICJEb2VzIHRoaXMgYGZ1bmN0aW9uYCBiZWhhdmUg
bGlrZSBhIE1hdGhlbWF0aWNhbCBGdW5jdGlvbiBpbiBhbGwgdGhlIHNpdHVhdGlv
bnMgSSB3aWxsIGVuY291bnRlciBpbiAqKm15KiogY29kZT8iCgpJIGtub3cgaXQn
cyBhIGxvbmdlciBzZW50ZW5jZS4gSSBrbm93IGl0J3MgaGFyZCB0byBmaW5kIHRo
ZSBhbnN3ZXIgaW4gbW9zdCBjYXNlcy4gSG93ZXZlciBpdCdzIHRoZSBvbmx5IHRo
aW5nIHdlIGNhbiBkbyBhYm91dCBwdXJpdHkgaW4gSmF2YVNjcmlwdC4gV2UgY2Fu
bm90IGxvb2sgYXQgY29kZSBhbmQgZGVjbGFyZSB0aGF0IGl0J3MgcHVyZS4gV2Ug
d291bGQgbWlzcyBhIGxvdCBvZiB1bmNoZWNrZWQgYXNzdW1wdGlvbnMuIExldCdz
IHRhbGsgYWJvdXQgIipiZWhhdmVzIGxpa2UgTWF0aCBpbiB0aGlzIHBhcnRpY3Vs
YXIgc2l0dWF0aW9uKiIgaW5zdGVhZC4KCk15IG1vdGhlciB0b25ndWUgUG9ydHVn
dWVzZSB3b3VsZCBiZSB2ZXJ5IGNvbnZlbmllbnQgcmlnaHQgbm93IHRvIGV4cHJl
c3MgdHdvIGRpZmZlcmVudCBmbGF2b3JzIG9mICJpcyI6ICphIGZ1bsOnw6NvIG7D
o28gw6kgcHVyYSwgYSBmdW7Dp8OjbyAqKmVzdMOhKiogcHVyYSouIEVuZ2xpc2g6
ICJ0aGUgZnVuY3Rpb24gaXMgbm90IHB1cmUsIHRoZSBmdW5jdGlvbiBpcyBbY3Vy
cmVudGx5IGJlaW7jZ10gcHVyZSLgLgDCwFwEAAEKABAFAlg/BbgJEJ7eI+p+ikiQ
AAAVCggAM8IMZzEw1rbZRD/Vx4RtlAHj4OwP/RyPeO8kACHsZQFnaQLd1q+02ryr
4yTyL/f5UDtq0nUmzRVf164xuyPfDimrWYSW2g42KP33kcpWjTLkj5S4fYanLwpO
XC24jxgCw8sWUWbhzSAp2v/3SP6gM6lng7+Pwzu6j1yFKrN4dz7LZ/I09oOzyk6U
jrzKC1gpHv2Rk5M3j1dkfAHPtMrKCWNMoY6Kw44G11zNCgRmBtC1hChTMDuH0hdr
0o9IHJfEy0ZAbJ7b8fh2hZzNgQPdUJGgv4vXIHW1rh0/EiNm3CM76oeYmz/hsOzD
Xq0qM8uiyMrIw/oMaZi4a2TqiiGfwQ==
=Q4si
-----END PGP MESSAGE-----
