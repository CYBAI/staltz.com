-----BEGIN PGP MESSAGE-----
Comment: https://keybase.io/download
Version: Keybase Go 1.0.18 (darwin)

xA0DAAoBnt4j6n6KSJABy+F0AOIAAAAA7S0tLQpsYXlvdXQ6IHBvc3QKdGl0bGU6
ICJTb21lIHByb2JsZW1zIHdpdGggUmVhY3QvUmVkdXgiCnRhZ3M6IFtibG9nXQpy
ZWRpcmVjdF9mcm9tOgogIC0gL3doeS1yZWFjdC1yZWR1eC1pcy1hbi1pbmZlcmlv
ci1wYXJhZGlnbS5odG1sCi0tLQoKQWJvdXQgdHdvIHllYXJzIGFnbyBJIGZpcnN0
IHRyaWVkIFJlYWN0IGluIGEgcmVhbCBhcHBsaWNhdGlvbi4gQXMgSSBzdGFydGVk
IHVzaW5nIGl0IGV4dGVuc2l2ZWx5IGluIHRoYXQgYXBwbGljYXRpb24sIEkgZm91
bmQgaXQgdW53aWVsZHkgYW5kIHVubmVjZXNzYXJpbHkgY29tcGxpY2F0ZWQuIEFm
dGVyIHRoYXQgSSBkZWNpZGVkIHRvIGJ1aWxkIG15IG93biBzb2x1dGlvbnMgdXNp
bmcgUnhKUyBhbmQgdmlydHVhbC1kb20gYW5kIGFmdGVyIGEgeWVhciBvciBzbyBJ
IGNyZWF0ZWQgYSBmcmFtZXdvcmsgY2FsbGVkIFtDeWNsZS5qc10oaHR0cDovL2N5
Y2xlLmpzLm9yZykuCgpUb2RheSBhZnRlciB0d28geWVhcnMsIEkgbmVlZGVkIHRv
IHdyaXRlIGEgbGFyZ2UgYXBwbGljYXRpb24gdXNpbmcgUmVhY3QgYW5kIFJlZHV4
LCBiZWNhdXNlIEkgd2FzIHRhcmdldHRpbmcgUmVhY3QgTmF0aXZlLCBhbmQgW0N5
Y2xlIE5hdGl2ZV0oaHR0cHM6Ly9naXRodWIuY29tL2N5Y2xlanMvY3ljbGUtcmVh
Y3QtbmF0aXZlKSBpcyBzdGlsbCBleHBlcmltZW50YWwgYW5kIGRvZXNuJ3Qgc3Vw
cG9ydCB0aGluZ3Mgc3VjaCBhcyBuYXZpZ2F0aW9uL3JvdXRpbmcuIEkgaGFkIGhv
cGVzIFJlZHV4IHdvdWxkIG1ha2UgUmVhY3Qgbm90IHNvIHVud2llbGR5LCBidXQg
bm93IEkgY2FuIGNvbmZpcm0gUmVhY3QvUmVkdXggaXMgYW4gaW5mZXJpb3IgcGFy
YWRpZ20gY29tcGFyZWQgdG8gQ3ljbGUgb3IgRWxtLgoKW0kgdHdlZXRlZCBhYm91
dCB0aGlzIGJyaWVmbHldKGh0dHBzOi8vdHdpdHRlci5jb20vYW5kcmVzdGFsdHov
c3RhdHVzLzY4OTc0ODQ2NzIwODU2MDY0MCkgYnV0IGl0IGNyZWF0ZWQgY29uZnVz
aW9uLCBzbyBJJ2xsIGV4cGxhaW4gbXkgYXJndW1lbnRzIHdpdGggZmFjdHMgYXMg
bXVjaCBhcyBJIGNhbi4gU29ycnkgZm9yIG15IGxhbmd1YWdlIGluIFR3aXR0ZXIg
aWYgaXQgZmVsdCB3cm9uZyB0byB5b3UuCgpJIG5lZWQgdG8gZXhwbGFpbiB3aGF0
IEkgbWVhbiB3aXRoIGluZmVyaW9yIHBhcmFkaWdtLiBSZWFjdCBtYXkgYmUgc3Vw
ZXJpb3IgaW4gZWNvc3lzdGVtLCBvciB3aXRoIGZlYXR1cmUgY292ZXJhZ2UsIGJ1
dCBub3Qgc28gYXMgYSBwYXJhZGlnbS4gVGhlc2UgYXJlIHRocmVlIGRpZmZlcmVu
dCBjb25jZXJucyB5b3Ugc2hvdWxkIGJlYXIgaW4gbWluZCB3aGVuIGNob29zaW5n
IGEgbGlicmFyeS9mcmFtZXdvcmsuIFlvdSBtYXkgbmVlZCB0aGUgZWNvc3lzdGVt
IG9yIHNvbWUgc3BlY2lmaWMgZmVhdHVyZXMsIHNvIHBhcmFkaWdtIG1heSBub3Qg
YmUgaW1wb3J0YW50LiBJbiBvdGhlciBjYXNlcywgeW91IHdhbnQgdG8gY2hvb3Nl
IHRoZSBsaWJyYXJ5L2ZyYW1ld29yayB3aXRoIHRoZSBtb3N0IGVyZ29ub21pYyBw
YXJhZGlnbS4gVGhhdCBtZWFucyBhIGdvb2Qgc2lnbmFsLXRvLW5vaXNlIHJhdGlv
OiBlYWNoIGxpbmUgb2YgY29kZSBjb250cmlidXRlcyB0byBkZWxpdmVyaW5nIGZl
YXR1cmVzLCBlYWNoIGxpbmUgb2YgY29kZSBpcyAic2VtYW50aWMiIGFuZCByZWFk
cyBsaWtlIGEgc3BlY2lmaWNhdGlvbi4gSW4gc2hvcnQsIHRoZSBjbG9zZXIgdGhl
IGNvZGUgaXMgdG8gYSBkZXNjcmlwdGlvbiBvZiAid2hhdCBJIHdhbnQgdGhlIHBy
b2dyYW0gdG8gZG8iLCB0aGUgYmV0dGVyLiBCdXQgdGhlIG1vcmUgbWFudWFsIHdp
cmluZyB0aGVyZSBpcywgdGhlIG1vcmUgIm5vaXNlIiBpcyBhZGRlZCB0byB5b3Vy
IGNvZGUsIGFuZCB0aGUgbW9yZSB2ZXJib3NlIGl0IGdldHMuCgpUbyBtYWtlIHRo
YXQgY2xhaW0sIEkgYW0gYmlhc2VkIGJlY2F1c2UgSSBoYXZlIGJ1aWx0IEN5Y2xl
LmpzLCBidXQgSSBuZWVkIHRvIGluY2x1ZGUgRWxtIGluIHRoaXMgc3RvcnkgYXMg
d2VsbC4gSSBoYXZlIG5vdCBidWlsdCBFbG0gYW5kIG5laXRoZXIgYW0gSSBhIHN0
cm9uZyBtZW1iZXIgaW4gaXRzIGNvbW11bml0eS4gSW5pdGlhbGx5IEkgd2FzIHNr
ZXB0aWMgYWJvdXQgRWxtLCBidXQgYWZ0ZXIgaGF2aW5nIHVzZWQgaXQsIHRhbGtl
ZCB0byBSaWNoYXJkIEZlbGRtYW4gYW5kIEV2YW4gQ3phcGxpY2tpLCBhbmQgc2Vl
biBjb3dvcmtlcnMgdXNlIGl0LCBJJ20gY29udmluY2VkIGl0J3MgYSBmYW50YXN0
aWMgcGFyYWRpZ20gdG8gZ2V0IHRoaW5ncyBkb25lLiAiRWxtIiB1c3VhbGx5IGNv
bXByaXNlcyB0d28gdGhpbmdzOiB0aGUgRWxtIGxhbmd1YWdlIGFuZCB0aGUgRWxt
IGFyY2hpdGVjdHVyZS4gVGhlIEVsbSBsYW5ndWFnZSBpcyBmYW50YXN0aWMgdG8g
a2VlcCBkZXZlbG9wZXJzIHByb2R1Y3RpdmUgYW5kIGNvZGUgd2l0aCBsZXNzIGJ1
Z3MsIHNpbmNlIHRoZSBjb21waWxlciBkb2VzIGEgbG90IHRvIGFzc2lzdCB5b3Uu
IFRoZSBFbG0gYXJjaGl0ZWN0dXJlIGlzIHJlbWluaXNjZW50IHRvIFJlZHV4LCBi
dXQgaXMgbXVjaCBsZXNzIHZlcmJvc2Ugd2hlbiB1c2VkIGluIHRoZSBFbG0gbGFu
Z3VhZ2UuIEl0J3MgYW4gYXJjaGl0ZWN0dXJlIG1hZGUgZm9yIHRoZSBsYW5ndWFn
ZSAoYW5kIHNvbWV0aW1lcyBmZWVscyBsaWtlIGEgbGFuZ3VhZ2UgbWFkZSBmb3Ig
dGhlIGFyY2hpdGVjdHVyZSksIHVubGlrZSBhbiBhcmNoaXRlY3R1cmUgZmluZGlu
ZyBpdCdzIG93biB3YXkgdG8gImZpdCIgaW4gYSBsYW5ndWFnZS4KCkluIHRoZSBm
b2xsb3dpbmcgc2VjdGlvbnMgSSdsbCBwcm92aWRlIGZhY3RzLCBub3QganVzdCBv
cGluaW9ucy4KCjxoMiBpZD0iaW5pdGlhbC1zZXR1cCIgY2xhc3M9ImhyIj48c3Bh
biBjbGFzcz0iaHIiPklOSVRJQUwgU0VUVVA8L3NwYW4+PC9oMj4KCldpdGggbXkg
Y293b3JrZXIgW09zc2kgSGFuaGluZW5dKGh0dHBzOi8vdHdpdHRlci5jb20vb2hh
bmhpLyksIHdlIGluaXRpYWxseSBzdGFydGVkIGJ1aWxkaW5nIHRoZSBhcHBsaWNh
dGlvbiB3aXRoIEN5Y2xlIE5hdGl2ZSwgYW5kIHdlIGRpZCB0aGF0IHdpdGggcGFp
ciBwcm9ncmFtbWluZy4gT3NzaSB3YXMgdGhlIG1haW4gcHJvZ3JhbW1lciBhbmQg
aGFkIG5vdCBkb25lIEN5Y2xlLmpzIGRldmVsb3BtZW50IHNvIGZhci4gQmVzaWRl
cyBpbnN0YWxsaW5nIFhDb2RlLCBpdCB0b29rIE9zc2kgYWJvdXQgMWggb3IgMmgg
d2l0aCBteSBpbnN0cnVjdGlvbnMgdG8gZ2V0IHRoZSBpbml0aWFsIHNldHVwIGFu
ZCBoYXZlIGEgSGVsbG8gV29ybGQgZGVsaXZlcmVkLiBUaGVuLCBPc3NpIGFsb25l
IHdpdGhvdXQgYW55IHN1cHBvcnQgdG9vayAxaCBtb3JlIHRvIGRldmVsb3AgYW4g
YWRkaXRpb25hbCBmZWF0dXJlIHRvIGZldGNoIEpTT04gZnJvbSBhIGJhY2tlbmQg
YW5kIGRpc3BsYXkgdGhhdCBpbiB0aGUgYXBwLgoKVGhlbiwgd2UgaGFkIHRvIHBv
cnQgdGhpcyB3aG9sZSBhcHAgdG8gUmVhY3QvUmVkdXguIEluIHNob3J0LCBpdCB0
b29rIHVzIDdoIHRvIGFjY29tcGxpc2ggdGhpcyBzYW1lIGFwcC4gV2UgaGFkIHRv
IGNvbWJpbmUgdG9nZXRoZXIgbXVsdGlwbGUgbGlicmFyaWVzIGZvbGxvd2luZyB0
aGUgZGlyZWN0b3J5IHN0cnVjdHVyZSBpbiBSZWR1eCdzIGV4YW1wbGVzLiBUaGUg
bGlzdCBvZiBjb25jZXB0cyBvciBtb3ZpbmcgcGFydHMgdG8gYmUgYXdhcmUgb2Yg
aW4gUmVhY3QvUmVkdXggaXMgbG9uZ2VyIHRoYW4gaW4gQ3ljbGUgb3IgRWxtOgoK
LSBBY3Rpb24gdHlwZXMgKHdlIHVzZWQgYGVudW1pZnlgIHRvIGF0dGVtcHQgdG8g
cmVkdWNlIHNvbWUgYm9pbGVycGxhdGUgb2YgcmVwZWF0aW5nIGFjdGlvbiB0eXBl
IHN0cmluZ3MpCi0gQWN0aW9uIGNyZWF0b3IgZnVuY3Rpb25zCi0gUmVkdWNlcnMg
KGxvbmcgc3dpdGNoIHN0YXRlbWVudHMgd2hpY2ggYXJlIHN5bnRhY3RpY2FsbHkg
dWdseSBidXQgc2VtYW50aWNhbGx5IG9rLiBUaGV5IGFyZSBub3QgbmVjZXNzYXJ5
IGluIEN5Y2xlLCBhbmQgaW4gRWxtIHRoZXkgc3ludGFjdGljYWxseSBsb29rIGdv
b2QpCi0gU3RvcmUgKHNldHRpbmcgaXQgdXAgZG9lcyBub3QgZXhpc3QgbmVpdGhl
ciBpbiBDeWNsZSBub3IgRWxtKQotIE1pZGRsZXdhcmUgKG5vdCBpbiBDeWNsZSBu
b3IgRWxtKQotIFBpZ2d5YmFja2luZyBjb21wb25lbnREaWRNb3VudCB0byBzdGFy
dCBhZC1ob2MgZWZmZWN0cwotIFByb3ZpZGVyIChub3QgaW4gQ3ljbGUgbm9yIEVs
bSkKLSBDb250YWluZXJzCgpBbGwgb2YgdGhlc2UgYXJlIHNvbHV0aW9ucyB0aGF0
IGFjdHVhbGx5IHNvbHZlIHByb2JsZW1zIGluIHRoZSBjb250ZXh0IG9mIFJlYWN0
L1JlZHV4LiBIb3dldmVyLCBpbiBvdGhlciBwYXJhZGlnbXMsIHdlIGRvbid0IG5l
ZWQgdGhlc2Ugc29sdXRpb25zIGJlY2F1c2UgdGhlIHVuZGVybHlpbmcgcGFyYWRp
Z20gZG9lcyBub3QgY3JlYXRlIHRoZSByZXNwZWN0aXZlIHByb2JsZW1zLiBPdmVy
YWxsIG1vc3Qgb2YgdGhlIGNvbmNlcHRzIGFib3ZlIGFyZSBib2lsZXJwbGF0ZSBv
ciBoYXZlIGJvaWxlcnBsYXRlIChsaWtlIGFjdGlvbiB0eXBlIHJlZHVuZGFudCBz
dHJpbmdzIG9yIEphdmFTY3JpcHQgc3dpdGNoIGNhc2UgaW4gcmVkdWNlcnMpIHRo
YXQgYXJlICpub2lzZSogdG8gdGhlIGZlYXR1cmVzICgqc2lnbmFsKikgdGhhdCB3
ZSB3YW50IHRvIGRlbGl2ZXIuIEFuIGlkZWFsIGZyYW1ld29yay9wYXJhZGlnbSBt
YWtlcyB5b3UgZm9jdXMgb24gZGVsaXZlcmluZyBmZWF0dXJlcywgbm90IG9uIHdp
cmluZyB0aGUgbWFjaGluZXJ5LiBJIGFtIG5vdCBzbyBmYW1pbGlhciB3aXRoIEVt
YmVyIGluIHRoaXMgcmVnYXJkLCBidXQgSSBiZWxpZXZlIHRoZWlyIGVuZCBnb2Fs
IGlzIGFsc28gdG8gYmUgYSBmcmFtZXdvcmsgdGhhdCBoZWxwcyB5b3UgZm9jdXMg
b24gZmVhdHVyZXMuIEkgY2FuJ3Qgc3BlYWsgd2hldGhlciB0aGV5IGRlbGl2ZXIg
dGhhdCBwcm9taXNlLCBidXQgYXQgbGVhc3QgdGhlIGVuZCBnb2FsIGlzIGNvcnJl
Y3Q6IHBhcmFkaWdtIGVyZ29ub215LgoKT25lIGNvdWxkIGFyZ3VlIHRoYXQgUmVk
dXggaGFzIGhpZ2hlciBjb3N0IHVwZnJvbnQgdG8gc2V0dXAgZXZlcnl0aGluZyB3
aGlsZSBDeWNsZS5qcyBhcmNoaXRlY3R1cmUgYWxzbyBuZWVkcyBhbGwgb2YgdGhv
c2UgZWxlbWVudHMgZXZlbnR1YWxseSwgYnV0IHRoYXQncyBub3QgdGhlIGNhc2Ug
c2luY2UgdGhlIEN5Y2xlLmpzIGFyY2hpdGVjdHVyZSBpcyBzY2FsYWJsZSBhbmQg
Y29tcG9zYWJsZS4gSXQncyAiZnJhY3RhbCIsIHJlYWQgbW9yZSBhYm91dCBpdCBb
aGVyZV0oaHR0cDovL3N0YWx0ei5jb20vdW5pZGlyZWN0aW9uYWwtdXNlci1pbnRl
cmZhY2UtYXJjaGl0ZWN0dXJlcy5odG1sKS4KClRoaW5ncyBsaWtlIHVzaW5nIGBj
b21wb25lbnREaWRNb3VudGAgdG8gZGlzcGF0Y2ggYWN0aW9ucyBpbiBvcmRlciB0
byBnZXQgdGhlIGFwcCB0byBzdGFydCBhbiBvcGVyYXRpb24gYXJlIG1vcmUgdmVy
Ym9zZSBhbmQgbGVzcyBvYnZpb3VzIHRoYW4gYSBzaW1wbGUgYHN0YXJ0V2l0aCgp
YCBSeEpTIG9wZXJhdG9yIHVzZSBpbiBDeWNsZS5qcy4KCkVsbSBhbHNvIGdldHMg
b3V0IHlvdXIgd2F5IGJ5IGhhdmluZyBpbW11dGFibGUgdHlwZXMgYnVpbHQtaW4s
IHNpZ25hbHMgYnVpbHQtaW4sICJkaXNwYXRjaGVyIiAoTWFpbGJveCkgYnVpbHQt
aW4sIGFuZCBBRFRzIGZvciBhY3Rpb24gdHlwZXMgYnVpbHQtaW4uIFRoZSBleHBl
cmllbmNlIGlzIGdyZWF0IGZvciBhIGRldmVsb3BlciBhbmQgdGhlIGluaXRpYWwg
c2V0dXAgaXMgcXVpY2tlci4KCjxoMiBpZD0ianN4IiBjbGFzcz0iaHIiPjxzcGFu
IGNsYXNzPSJociI+SlNYPC9zcGFuPjwvaDI+CgpJIGFtIGEgcHJvcG9uZW50IG9m
IHVzaW5nIEphdmFTY3JpcHQgZnVuY3Rpb25zIGluc3RlYWQgb2YgSlNYIGZvciBt
YXJrdXAsIGJlY2F1c2UgaXQgaXMgZnJpZW5kbGllciB0byBhbnkgdGV4dC9jb2Rl
IGVkaXRvciwgYW5kIGxlc3MgdmVyYm9zZSB0aGFuIEhUTUwtaW5zcGlyZWQgSlNY
LiBDb21wYXJlIHRoZSBmb2xsb3dpbmc6Cgp7JSBoaWdobGlnaHQgdGV4dCAlfQov
LyBKU1gKPHVsIGlkPSJiZXN0ZXN0LW1lbnUiPgogIHtpdGVtcy5tYXAoIGl0ZW0g
PT4KICAgIDxsaSBjbGFzc05hbWU9Ii5pdGVtIiB7Li4uYXR0cnMoaXRlbS5pZCl9
PntpdGVtLnRpdGxlfTwvbGk+CiAgKX0KPC91bD4KeyUgZW5kaGlnaGxpZ2h0ICV9
Cgp7JSBoaWdobGlnaHQganMgJX0KLy8gaHlwZXJzY3JpcHQtaGVscGVycwp1bCgn
I2Jlc3Rlc3QtbWVudScsIGl0ZW1zLm1hcCggaXRlbSA9PgogIGxpKCcuaXRlbScs
IGF0dHJzKGl0ZW0uaWQpLCBpdGVtLnRpdGxlKSkKKTsKeyUgZW5kaGlnaGxpZ2h0
ICV9CgpOZWl0aGVyIG9mIHRoZXNlIHR3byBhcmUgdW5yZWFkYWJsZSAoYXMgbG9u
ZyBhcyB5b3Uga25vdyB0aGUgbGFuZ3VhZ2UpLCB5ZXQgSlNYIGlzIG1vcmUgdmVy
Ym9zZS4gYDxgIGFuZCBgPmAgYWRkIG5vIHZhbHVlLCB0aGV5IGFyZSBub2lzZSwg
YW1vbmcgb3RoZXIgcXVpcmtzIGxpa2UgYHsgfWAgYmxvY2tzLgoKVGhhdCBzYWlk
LCBSZWFjdCBkb2VzIG5vdCBoYXZlIGFuIG91dC1vZi10aGUtYm94IGVhc3kgc29s
dXRpb24gZm9yIEpTLW9ubHkgbWFya3VwLCBsZWFkaW5nIG1vc3QgZGV2ZWxvcGVy
cyB0byBjaG9vc2UgSlNYLCB1bmxlc3MgdGhleSBmaW5kIHRoaXJkLXBhcnR5IGxp
YnJhcmllcy4gSGVyZSBhcmUgc29tZSBleGFtcGxlczoKCioqUmVhY3QuY3JlYXRl
RWxlbWVudCBvciBSZWFjdC5jcmVhdGVGYWN0b3J5IGJvaWxlcnBsYXRlLioqIFRv
IHdyaXRlIEpTLW9ubHkgbWFya3VwIHdpdGggUmVhY3QsIHlvdSBoYXZlIHRvIHVz
ZSBlaXRoZXIgb2YgdGhvc2UgdHdvLgoKeyUgaGlnaGxpZ2h0IGpzICV9ClJlYWN0
LmNyZWF0ZUVsZW1lbnQoJ3VsJywgbnVsbCwgWwogIFJlYWN0LmNyZWF0ZUVsZW1l
bnQoJ2xpJywgbnVsbCwgJ0ZvbycpLAogIFJlYWN0LmNyZWF0ZUVsZW1lbnQoJ2xp
JywgbnVsbCwgJ0JhcicpLApdKQp7JSBlbmRoaWdobGlnaHQgJX0KCm9yCgp7JSBo
aWdobGlnaHQganMgJX0KY29uc3QgaCA9IFJlYWN0LmNyZWF0ZUVsZW1lbnQ7Cgpo
KCd1bCcsIG51bGwsIFsKICBoKCdsaScsIG51bGwsICdGb28nKSwKICBoKCdsaScs
IG51bGwsICdCYXInKSwKXSkKeyUgZW5kaGlnaGxpZ2h0ICV9CgpvcgoKeyUgaGln
aGxpZ2h0IGpzICV9CmNvbnN0IHVsID0gUmVhY3QuY3JlYXRlRmFjdG9yeSgndWwn
KTsKY29uc3QgbGkgPSBSZWFjdC5jcmVhdGVGYWN0b3J5KCdsaScpOwoKdWwobnVs
bCwgWwogIGxpKG51bGwsICdGb28nKSwKICBsaShudWxsLCAnQmFyJyksCl0pCnsl
IGVuZGhpZ2hsaWdodCAlfQoKV2l0aCB0aGUgYWRkaXRpb25hbCBjb21wbGljYXRp
b24gdGhhdCBub3QgYWxsIGZhY3RvcmllcyBjYW4gYmUgZ2F0aGVyZWQgYW5kIHBh
Y2thZ2VkIGFzIGEgdXRpbGl0eSwgc2luY2Ugd2UgbWlnaHQgbmVlZCB0byBtYWtl
IGEgZmFjdG9yeSBmb3IgYSBjdXN0b20gY29tcG9uZW50OgoKeyUgaGlnaGxpZ2h0
IGpzICV9CmNvbnN0IE15QnV0dG9uID0gUmVhY3QuY3JlYXRlRmFjdG9yeShNeVBh
Y2thZ2UuTXlCdXR0b24pOwoKdWwobnVsbCwgWwogIE15QnV0dG9uKHtteVByb3A6
IDEyM30pCl0pCnslIGVuZGhpZ2hsaWdodCAlfQoKT3ZlcmFsbCwgaGF2aW5nIHRv
IGhhbmRsZSBjcmVhdGVGYWN0b3J5IG9yIGNyZWF0ZUVsZW1lbnQgYnkgeW91cnNl
bGYgaXMgYm9pbGVycGxhdGUgYW5kIG5vdCBuZWNlc3NhcmlseSBsZXNzIHZlcmJv
c2UgdGhhbiBzaW1wbHkgSlNYLgoKKipQcm9wcyBvYmplY3QgYWx3YXlzIGV4cGVj
dGVkKioKCkluIEN5Y2xlLmpzIHlvdSBjYW4gb21pdCB0aGUgcHJvcHMgb2JqZWN0
LiBTaW5jZSBwcm9wcyBhcmUgYWx3YXlzIGFuIG9iamVjdCBhbmQgY2hpbGRyZW4g
YXJlIGFsd2F5cyBhbiBhcnJheSwgaXQncyBvYnZpb3VzIHdoaWNoIHBhcmFtZXRl
ciBpcyB3aGF0OgoKeyUgaGlnaGxpZ2h0IGpzICV9CnVsKFsKICBsaSgnRm9vJyks
CiAgbGkoJ0JhcicpLApdKQovLyB0aGUgc2FtZSBhcwp1bChudWxsLCBbCiAgbGko
bnVsbCwgJ0ZvbycpLAogIGxpKG51bGwsICdCYXInKSwKXSkKeyUgZW5kaGlnaGxp
Z2h0ICV9CgpUaGF0IGlzIG5vdCB0cnVlIGluIFJlYWN0LiBZb3UgYWx3YXlzIG5l
ZWQgdG8gcHJvdmlkZSB0aGUgcHJvcGVydGllcyBvYmplY3QuIElmIG5vdCBuZWVk
ZWQsIHRoZW4gaXQgc2hvdWxkIGJlIGBudWxsYCBvciBge31gLiBUaGlzIGp1c3Qg
YWRkcyB2ZXJi7G9zaXR5L25vaXNlLgoKKipDb21wb25lbnRzIHRoYXQgZXhwZWN0
ICJvbmx5Q2hpbGQiKioKClNvbWUgUmVhY3QgY29tcG9uZW50cyBoYXZlIGFuIGlu
dmFyaWFudDogIkludmFyaWFudCBWaW9sYXRpb246IG9ubHlDaGlsZCBtdXN0IGJl
IHBhc3NlZCBhIGNoaWxkcmVuIHdpdGggZXhhY3RseSBvbmUgY2hpbGQiLiBXaGlj
aCBtZWFucyB0aGlzIGlzIGFuIGVycm9yOgoKeyUgaGlnaGxpZ2h0IGpzICV9ClNv
bWVDb21wb25lbnQobnVsbCwgWwogIEJ1dHRvbihudWxsLCAnU3VibWl0JykKXSkK
eyUgZW5kaGlnaGxpZ2h0ICV9CgpBbmQgdGhpcyBpcyBjb3JyZWN0OgoKeyUgaGln
aGxpZ2h0IGpzICV9ClNvbWVDb21wb25lbnQobnVsbCwKICBCdXR0b24obnVsbCwg
J1N1Ym1pdCcpCikKeyUgZW5kaGlnaGxpZ2h0ICV9CgpUaGlzIGlzIGEgZ290Y2hh
IHRoYXQgbWFrZXMgaXQgYW5ub3lpbmcgdG8gZGV2ZWxvcCwgd2hlcmVhcyB3aXRo
IFtoeXBlcnNjcmlwdC1oZWxwZXJzXShodHRwczovL2dpdGh1Yi5jb20vb2hhbmhp
L2h5cGVyc2NyaXB0LWhlbHBlcnMpIG9yIEVsbSwgY2hpbGRyZW4gYXJlIChpbnR1
aXRpdmVseSkgYW4gYXJyYXkvbGlzdC4KClJlYWN0IGF1dGhvcnMgZG9uJ3QgdHJ5
IHRvIHN1cHBvcnQgdGhlIEpTLW9ubHkgUmVhY3Qgd29ya2Zsb3cgdGhhdCBtdWNo
LiBUaGV5IGxldCB5b3UgZmlndXJlIGl0IG9uIHlvdXIgb3duIGFuZCBqdXN0IHJl
Y29tbWVuZCBKU1guIEFjaGlldmluZyBhbiBlcmdvbm9taWMgSlMtb25seSBtYXJr
dXAgd29ya2Zsb3cgaXMgZWFzeSBhbmQgaGFzIGJlZW4gZG9uZSBpbiBvdGhlciBs
aWJyYXJpZXMgKHNlZSBoeXBlcnNjcmlwdC1oZWxwZXJzKSwgdGhlc2UgcHJvYmxl
bXMgbWVudGlvbmVkIGFib3ZlIGFyZSBub3QgaW5oZXJlbnQgdG8gSlMtb25seSBt
YXJrdXAsIHRoZXkgYXJlIGluaGVyZW50IHRvIFJlYWN0J3MgcGFydGljdWxhciBB
UEkuIEVpdGhlciB3YXksIHdpdGggUmVhY3QncyBKU1ggb3IgUmVhY3QncyBKUy1v
bmx5IG1hcmt1cCwgd2UgYXJlIHdyaXRpbmcgc3Vib3B0aW1hbCBjb2RlIHdpdGgg
cmVnYXJkIHRvIHNpZ25hbC10by1ub2lzZS4KCjxoMiBpZD0iZnVuY3Rpb25hbC1i
dXQtbm90LXJlYWxseSIgY2xhc3M9ImhyIj48c3BhbiBjbGFzcz0iaHIiPkZVTkNU
SU9OQUwgQlVUIE5PVCBSRUFMTFk8L3NwYW4+PC9oMj4KClJlYWN0J3MgY29tbXVu
aXR5IGNsYWltcyB0aGF0IFJlYWN0IHVzZXMgZnVuY3Rpb25hbCB0ZWNobmlxdWVz
IGhlYXZpbHksIGhvd2V2ZXIgdGhhdCBpcyBub3QgdHJ1ZSBpbiBwcmFjdGljZS4g
T09QLCBjbGFzc2VzLCBjYWxsYmFja3MsIGFuZCBgdGhpc2AgYXJlIGNvbW1vbnBs
YWNlLCBhcyB3ZWxsIGFzIGltcGVyYXRpdmUgbWV0aG9kIGNhbGxzIHN1Y2ggYXMg
YGRpc3BhdGNoYCwgYHNldFN0YXRlYCwgZXRjLiBUaGlzIGFsc28gbWVhbnMgdGhl
cmUgaXMgbm8gY2xlYXIgaW50ZXJmYWNlL2dhdGUgZm9yIEkvTyBhbmQgZWZmZWN0
cy4gSW4gQ3ljbGUuanMsIGFsbCByZWFkIGVmZmVjdHMgYXJlIGlucHV0cyBpbnRv
IHRoZSBgbWFpbigpYCBmdW5jdGlvbiwgYW5kIGFsbCB3cml0ZSBlZmZlY3RzIGFy
ZSBvdXRwdXRzIG9mIGBtYWluKClgLiBJbiBFbG0sIEkvTyBoYXBwZW5zIHRocm91
Z2ggcG9ydHMgb3IgYG1haW5gLCBub3doZXJlIGVsc2UuIEluIFJlYWN0L1JlZHV4
LCB3ZSBkb24ndCBoYXZlIHN1Y2ggZ3VpZGVsaW5lLCB5b3UgY2FuIHNwcmVhZCBl
ZmZlY3RzIGFueXdoZXJlLCB3aGljaCBtYWtlcyB0aGUgIm1vZGVsIGVhc3kgdG8g
cmVhc29uIGFib3V0IiBjbGFpbSBjcnVtYmxlLgoKQXMgW0RhbiBBYnJhbW92IHBv
aW50ZWQgb3V0IGp1c3QgdG9kYXldKGh0dHBzOi8vdHdpdHRlci5jb20vZGFuX2Fi
cmFtb3Yvc3RhdHVzLzY4OTYzOTU4MjEyMDQxNTIzMiksIHRoZXJlIGlzIG5vIGRl
LWZhY3RvIHN0YW5kYXJkIGZvciBJL08sIGVmZmVjdHMsIGFuZCBhc3luYyBpbiB0
aGUgUmVhY3QvUmVkdXggY29tbXVuaXR5LiBUaGUgZXhpc3Rpbmcgc29sdXRpb25z
IGFyZSBpbnRlcmVzdGluZyBhbmQgZWxlZ2FudCBpbiB0aGVtc2VsdmVzLCBidXQg
dGhlIHByb2JsZW0gb2YgSS9PIGlzIHN5c3RlbWljIHNpbmNlIFJlYWN0IGRvZXMg
bm90IHNwZWNpZnkgYSBjbGVhciBpbnRlcmZhY2UvZ2F0ZSBmb3IgZWZmZWN0cyBj
b21pbmcgaW4gb3IgZ29pbmcgb3V0LiBgUmVhY3QucmVuZGVyYCBmb3IgaW5zdGFu
Y2UgaXMgYW4gZWZmZWN0LCBidXQgaXQncyBub3QgdHlwaWNhbGx5IGhhbmRsZWQg
Ynkgc3VjaCByZWR1eCBlZmZlY3RzIGxpYnJhcmllcy4gSW4gQ3ljbGUgYW5kIEVs
bSwgZXZlbiB2aXJ0dWFsIERPTSByZW5kZXJpbmcgbmVlZHMgdG8gcGFzcyB0aHJv
dWdoIHRoZSBleHBsaWNpdCBJL08gZ2F0ZS4gQWxsIG9mIHRoaXMgYWRkcyB0byBh
ICJzcGFnaGV0dGkgZWZmZWN0IiBpbiBSZWFjdC9SZWR1eDogc29tZSBlZmZlY3Rz
IGFyZSB3ZWxsIHNlcGFyYXRlZCwgb3RoZXJzIGFyZSBtaXhlZCBlbHNld2hlcmUu
CgpQbGFjaW5nIGFzeW5jIGVmZmVjdHMgYWxzbyBvZnRlbiBoYXBwZW5zIGluIHNv
bWUgY29tcG9uZW50J3MgYGNvbXBvbmVudERpZE1vdW50YCwgd2hpY2ggaXMgYW4g
YWQtaG9jIHNvbHV0aW9uLCBzaW5jZSBjb21wb25lbnRzIGFyZSBvZnRlbiBtZWFu
dCBvbmx5IGZvciB2aWV3IGNvbmNlcm5zIChtYXJrdXApLiBJdCBvZnRlbiBmZWVs
cyBpbmNvcnJlY3QgdG8gbWl4IHRoZXNlIGNvbmNlcm5zIHNpbmNlIFJlZHV4IGFu
ZCBpdHMgYXN5bmMgc29sdXRpb25zIGFyZSBtZWFudCB0byBzZXBhcmF0ZSB0aGVt
IGZyb20gbWFya3VwLgoKPGgyIGlkPSJjb25jbHVzaW9uIiBjbGFzcz0iaHIiPjxz
cGFuIGNsYXNzPSJociI+Q09OQ0xVU0lPTjwvc3Bhbj48L2gyPgoKQXMgYSAqKnBh
cmFkaWdtKiogdG8gcmVhc29uIGFib3V0IGFuZCBnZXQgZmVhdHVyZXMgZG9uZSwg
UmVhY3QvUmVkdXggYWRkcyB2ZXJib3NpdHkgYW5kIGRvZXMgbm90IHByb3ZpZGUg
c3RydWN0dXJlcyBmb3Igc2VwYXJhdGluZyBjb25jZXJucyAoSSBhbSBub3QgdGFs
a2luZyBhYm91dCBzZXBhcmF0aW9uIG9mIHRlY2hub2xvZ2llcyBzdWNoIGFzIEhU
TUwvQ1NTKS4gUmVhY3QvUmVkdXggaGFzIGEgZ3JlYXQgY29tbXVuaXR5L2Vjb3N5
c3RlbSwgd2hpY2ggbWlnaHQgYmUgaW1wb3J0YW50IGluIG1ha2luZyBhIGNob2lj
ZS4gUmVhY3QvUmVkdXggYWxzbyBzdXBwb3J0cyBhbGwgZmVhdHVyZXMgeW91IHdp
bGwgbmVlZCwgd2hpY2ggbWlnaHQgYmUgaW1wb3J0YW50IGZvciBhIGJ1c2luZXNz
IGRlY2lzaW9uLiBIb3dldmVyIGluIHRob3NlIGNhc2VzIHdoZXJlIG5laXRoZXIg
bGFyZ2UgY29tbXVuaXR5IG5vciBmZWF0dXJlIGNvdmVyYWdlIGFyZSBlc3NlbnRp
YWwsIFJlYWN0L1JlZHV4IGZhbGxzIHNob3J0LiBBbmQgdGhvc2UgY2FzZXMgYXJl
IG5vdCByYXJlLgoKT25jZSB5b3UgbGVhcm4gRWxtIG9yIEN5Y2xlLCBnZXR0aW5n
IHRoaW5ncyBkb25lIHdpbGwgYmUgbW9yZSBwcm9kdWN0aXZlLCBsZXNzIGluZGly
ZWN0LCBsZXNzIHZlcmJvc2UsIG1vcmUgb3JnYW5pemVkLiBBbGwgb2YgdGhlIEph
dmFTY3JpcHQgZGV2ZWxvcGVycyB3aG8gSSBtZXQgdGhhdCBsZWFybmVkIGFuZCB1
c2VkIEVsbSBzbyBmYXIgaGF2ZSBiZWVuIGV4dHJlbWVseSBwb3NpdGl2ZSBhYm91
dCB0aGVpciBleHBlcmllbmNlLiBUaGUgb25seSBFbG0gdXNlcnMgd2hvIEkndmUg
c2VlbiBkaXNhcHBvaW50ZWQgb2Z0ZW4gY29tZSBmcm9tIGEgaGFyZC1jb3JlIGZ1
bmN0aW9uYWwgcHJvZ3JhbW1pbmcgSGFza2VsbCBiYWNrZ3JvdW5kLCBhbmQgYXJl
IHRoZXJlZm9yZSBtb3JlIGNvbWZvcnRhYmxlIHdpdGggUHVyZVNjcmlwdC4gRWxt
IGRvZXMgbm90IGhhdmUgdHlwZWNsYXNzZXMgYW5kIG90aGVyIGZlYXR1cmVzIHdo
aWNoIG1ha2VzIGl0IGxlc3MgYXBwZWFsaW5nIGZvciBoYXJkLWNvcmUgZnVuY3Rp
b25hbCBwcm9ncmFtbWVycy4gVGhhdCBzYWlkLCBFbG0gaXMgYSBsYW5ndWFnZSB0
aGF0IGFwcGVhbHMgdG8gZGV2ZWxvcGVycyB3aXRoIGEgSmF2YVNjcmlwdCBiYWNr
Z3JvdW5kIHdobyBvbmx5IHdhbnQgdG8gZ2V0IHRoaW5ncyBkb25lLCB3aXRob3V0
IGxlYXJuaW5nIGNhdGVnb3J5IHRoZW9yeSDrb3IgZW1icmFjaW5nIGhpZ2hseSBh
YnN0cmFjdCBjb25jZXB0cy4gSXQgbWFrZXMgdGhlIGNvcmUgYmVuZWZpdHMgb2Yg
ZnVuY3Rpb25hbCBwcm9ncmFtbWluZyBtdWNoIG1vcmUgYWNjZXNzaWJsZS4gTGVh
cm5pbmcgaXQgaXMgYSB3b3J0aHdoaWxlIGludmVzdG1lbnQsIEkgaGF2ZSB3aXRu
ZXNzZWQgdGhyZWUgZGV2ZWxvcGVycyBhdCB3b3JrIHBpY2sgaXQgdXAgaW4gYSBm
ZXcgZGF5cyBhbmQgYmUgYm90aCBwcm9kdWN0aXZlIGFuZCBoYXBweSBmb3IgdGhl
IHN1YnNlcXVlbnQgd2Vla3MuCgpXaXRoIEN5Y2xlLmpzLCBJIGhhdmUgd2l0bmVz
c2VkIHR3byBkZXZlbG9wZXJzIHVuZGVyc3RhbmQgaXQgaW4gYSBmZXcgZGF5cyBh
bmQgZW5qb3kgaXQncyBzaW1wbGljaXR5LCBidXQgSSdsbCByZWZyYWluIGZyb20g
c3BlYWtpbmcgbXVjaCBhYm91dCBDeWNsZS5qcyBzaW5jZSBJJ20gYmlhc2VkLiBU
aGUgZ29hbCBvZiBib3RoIEVsbSBhbmQgQ3ljbGUuanMgaXMgdG8gcHJvdmlkZSBh
IHBhcmFkaWdtIHRvIGdldCBmZWF0dXJlcyBkZWxpdmVyZWQgaW4gYW4gZW5qb3lh
YmxlIG1hbm5lciB3aXRoIGdvb2Qgc2lnbmFsLXRvLW5vaXNlLiBTdWNoIHBhcmFk
aWdtIGlzIGN1cnJlbnRseSB1bmFjaGlldmFibGUgd2l0aCBSZWFjdC9SZWR1eCB1
bmxlc3MgaXQgaXMgcmVpbnZlbnRlZCwgYmVjYXVzZSBhIHBhcmFkaWdtIGlzIHRo
ZSBmb3VuZGF0aW9uLiBFbG0gaXMga25vd24gdG8gbm90IHByb3Blcmx5IHN1cHBv
cnQgc2VydmVyLXNpZGUgcmVuZGVyaW5nLCBzbyBmcm9tIGEgZmVhdHVyZSBjb3Zl
cmFnZSBwZXJzcGVjdGl2ZSwgUmVhY3QgaXMgYmV0dGVyIGluIHRoYXQgcmVnYXJk
LiBIb3dldmVyLCBzZXJ2ZXItc2lkZSByZW5kZXJpbmcgaW4gRWxtIGNhbiBiZSBh
ZGRlZCBhbmQgW3RoZXJlIGlzIG9uZ29pbmcgd29yayB0byBhY2hpZXZlIHRoYXRd
KGh0dHBzOi8vZ2l0aHViLmNvbS9Ob1JlZEluay90YWtlLWhvbWUpLiBIb3dldmVy
LCBhICJnb29kIiBwYXJhZGlnbSBjYW5ub3QgYmUgYWRkZWQgdG8gUmVhY3QvUmVk
dXguIEl0IGlzIGEgZm91bmRhdGlvbiwgYW5kIGNhbiBvbmx5IGJlIHJlcGxhY2Vk
LgoKT25lIGNvdWxkIGFyZ3VlIHRoYXQgcGFyYWRpZ21zIGFsd2F5cyBoYXZlIHRy
YWRlb2ZmcywgYW5kIEkgaGF2ZSB0byBhZ3JlZS4gVGhlIFJlYWN0L1JlZHV4IHBh
cmFkaWdtIG1pZ2h0IGhhdmUgYmVuZWZpdHMgdGhhdCB0aGUgQ3ljbGUgcGFyYWRp
Z20gb3IgRWxtIHBhcmFkaWdtIGRvbid0IG9mZmVyLiBCdXQganVzdCBsaWtlIGhv
cnNlcyBhbmQgY2FycyBoYXZlIHRyYWRlb2ZmcyBmb3IgdHJhbnNwb3J0aW5nIHBl
b3BsZSwgb25lIG9mIHRoZW0gaXMgYSBjbGVhciB3aW5uZXIsIGRlc3BpdGUgZGlz
YWR2YW50YWdlcyAoY2FycyBjYW4gb25seSBkcml2ZSBvbiBhc3BoYWx0LCBkcml2
aW5nIGNhcnMgbmVlZCBtb3JlIHRyYWluaW5nLCBldGMpLgoKQXMgYSByZW1pbmRl
ciwgdGhlcmUgYXJlIG11bHRpcGxlIGFzcGVjdHMgdG8gY29uc2lkZXIgd2hlbiBw
aWNraW5nIGEgRnJvbnRlbmQgdGVjaG5vbG9neToKCi0gTGVhcm5pbmcgY29zdAot
IFBhcmFkaWdtIGVyZ29ub215Ci0gQ29tbXVuaXR5IHNpemUKLSBGZWF0dXJlIGNv
dmVyYWdlCgpSZWFjdC9SZWR1eCBpcyBjbGVhcmx5IHN1cGVyaW9yIGluIHNvbWUs
IGJ1dCBub3QgaW4gYWxsIHRoZXNlIGFzcGVjdHMuIE5laXRoZXIgaXMgQ3ljbGUg
Z3JlYXQgaW4gYWxsIGFzcGVjdHMuIFRoZSBzYW1lIGNhbiBiZSBzYWlkIGZvciBF
bG0uIFRoaXMgcG9zdCBpcyBqdXN0IHRvIGNsYXJpZnkgaG93IFJlYWN0L1JlZHV4
IGlzIG5vdCB0aGUgYmVzdCBpbiB0aGUgIlBhcmFkaWdtIGVyZ29ub215IiBhc3Bl
Y3QuCgpBcyBhIGNvbmNsdXNpb24sIG15IG1lc3NhZ2UgdG8gdGhlIEZyb250ZW5k
IGNvbW11bml0eSBpcyB0byBjb250aW51ZSBzZWFyY2hpbmcgZm9yIGJldHRlciBz
b2x1dGlvbnMuIE9uIFR3aXR0ZXIsIEkgaGF2ZSBzZWVuIHJlc3BlY3RhYmxlIHBl
b3BsZSBjbGFpbWluZyAid2Ugc2hvdWxkIGRlY2xhcmUgUmVhY3QvUmVkdXggYXMg
dGhlIHdpbm5lci7pIFdlIGNhbiBmaW5hbGx5IHN0b3AgZXZvbHZpbmciIGFuZCBJ
IGZ1bGx5IGRpc2FncmVlLiAqRXZlbiB3aXRoIHNvbHV0aW9ucyBsaWtlIEVsbSBh
bmQgQ3ljbGUqIHdlIGNhbid0IGNvbnNpZGVyIEZyb250ZW5kIGRldmVsb3BtZW50
IHNvbHZlZCwgd2UgbmVlZCB0byBjb250aW51ZSBzZWVraW5nIGZvciBpbXByb3Zl
bWVudHMgdG8gb3VyIHdvcmtmbG93LiBJIGFtIG5vdCBzYXlpbmcgQ3ljbGUuanMg
aXMgcGVyZmVjdCBlaXRoZXIuIElmIHlvdSBoYXZlIGFueSBmZWVkYmFjayBvciBp
ZiBhbnl0aGluZyBpcyDigJxpbmZlcmlvcuKAnSwgSSBhbSBvcGVuIHRvIGZlZWRi
YWNrLiBJZiB5b3Ugd2FudCB0byBsZWFybiBDeWNsZS5qcywgaXQgdGFrZXMganVz
dCBbMWggMzBtaW4gdG8gbGVhcm4gdGhyb3VnaCB0aGVzZSBmcmVlIEVnZ2hlYWQg
dmlkZW8gY291cnNlc10oaHR0cHM6Ly9lZ2doZWFkLmlvL3Nlcmllcy9jeWNsZS1q
cy1mdW5kYW1lbnRhbHMpLgoKVGhlIEZyb250ZW5kIGNvbW11bml0eSBoYXPnIHNl
ZW4gbWFqb3IgaW1wcm92ZW1lbnRzIGhhcHBlbmluZyBtdWx0aXBsZSB0aW1lcywg
Zmlyc3Qgd2l0aCBqUXVlcnkgZXQgYWwsIHRoZW4gQmFja2JvbmUsIHRoZW4gQW5n
dWxhciwgYW5kIG5vdyBSZWFjdC4gTGV0J3Mgbm/jdCBzdG9wIHTiaGVyZeEuCgDC
wFwEAAEKABAFAlg/BbQJEJ7eI+p+ikiQAAB66QgAPoLM/H6qKuq8WacUJP/hWxrG
iLYJbmv8HhjIb58TmUWfeoHzHEULrP1EPxCdFre83A1tEp6KP/RuqLm7xBy42P6w
p5qpcGySEPmIz8f9/8zRfPbzU03lWvrrDmVfqg95LC/ZwhCypGkX7QveX+HgWqm1
nIWGvMCe6zelkrggeRYE+Cefhh997JgNbUusCBJCMy66dRACm5fppt9gkGXIUe07
silNC+S6INtW6E/zhsV79QqL/bAXooGhHxOsSXMDR5YwINvLMNqHI6cPZsaSqMgk
BnPhYEIVsZtQo2AfgHdVjCsP7HJiQOT2wcR3fK1ehT0O4paKQbcT9JH6QH/cpQ==
=ILCE
-----END PGP MESSAGE-----
