-----BEGIN PGP MESSAGE-----
Comment: https://keybase.io/download
Version: Keybase Go 1.0.22 (darwin)

xA0DAAoBnt4j6n6KSJABy+F0AOIAAAAA7i0tLQpsYXlvdXQ6IHBvc3QKdGl0bGU6
ICJHdWlkZWxpbmVzIGZvciBhIG5ldyBwcm9ncmFtbWluZyBsYW5ndWFnZSIKdGFn
czogW2Jsb2ddCi0tLQoKKlRoaXMgaXMgYSB0cmFuc2NyaXB0IG9mIGEgdGFsayBJ
IGdhdmUgYXQgW0N5Y2xlQ29uZiAyMDE3XShodHRwOi8vY3ljbGVjb25mLmNvbS8p
IGFib3V0IGEgcG90ZW50aWFsIGZ1dHVyZSBmb3IgQ3ljbGUuanMgd2hlcmUgd2Ug
d291bGQgZXhwbG9yZSBidWlsZGluZyBhIGZ1bmN0aW9uYWwgYW5kIHZpc3VhbCBw
cm9ncmFtbWluZyBsYW5ndWFnZSBmb3IgZGF0YWZsb3cuIEl0IGlzIHBhcnQgMiBv
ZiB0aGUgdGFsayAiUGFzdCwgUHJlc2VudCBhbmQgRnV0dXJlIG9mIEN5Y2xlLmpz
Ii4qCgo8aWZyYW1lIHNyYz0iaHR0cHM6Ly9wbGF5ZXIudmltZW8uY29tL3ZpZGVv
LzIxNjk3NTk3OSIgd2lkdGg9IjYwMCIgaGVpZ2h0PSIzMzgiIGZyYW1lYm9yZGVy
PSIwIiB3ZWJraXRhbGxvd2Z1bGxzY3JlZW4gbW96YWxsb3dmdWxsc2NyZWVuIGFs
bG93ZnVsbHNjcmVlbj48L2lmcmFtZT4KCjxoMiBpZD0iaW50cm9kdWN0aW9uIiBj
bGFzcz0iaHIiPjxzcGFuIGNsYXNzPSJociI+SU5UUk9EVUNUSU9OPC9zcGFuPjwv
aDI+CgpUaGUgW3ByZXZpb3VzIHRhbGtdKGh0dHBzOi8vdmltZW8uY29tL2FsYnVt
LzQ1Nzg5MzcvdmlkZW8vMjE2Nzg3ODY5KSB3YXMgYmFzaWNhbGx5ICJ0aGUgZnV0
dXJlIG9mIEN5Y2xlLmpzIiwgZGlmZmVyZW50IHR5cGVzIG9mIHRoaW5ncyB3ZSBj
b3VsZCBkby4gT25lIGlkZWEgd2FzIHRoYXQgd2UgY291bGQgYnVpbGQgYSBsYW5n
dWFnZS4gV2h5PyBCZWNhdXNlIHdoZW4gW05pY2sgd2FzIHRhbGtpbmddKGh0dHBz
Oi8vdmltZW8uY29tL2FsYnVtLzQ1Nzg5MzcvdmlkZW8vMjE3NDQ0NzMzKSwgZm9y
IGluc3RhbmNlLCBhYm91dCBCb256YWkgZWRpdG9yLCBoZSBhbHNvIGhhZCB0aGF0
IGluIEFTQ0lJLCBkaWFncmFtcyBpbiBBU0NJSS4gVGhhdCdzIGJhc2ljYWxseSBh
IGxhbmd1YWdlIGFscmVhZHksIHRvIHNvbWUgZXh0ZW50LgoKQW5kIHRoZW4gd2Ug
anVzdCBzdGFydGVkIHRoaW5raW5nIHRoYXQgSmF2YVNjcmlwdCBtaWdodCBub3Qg
YmUgdGhlIGJlc3QgaG9zdCBsYW5ndWFnZSBmb3IgdGhpcywgYmVjYXVzZSBzb21l
dGltZXMgcGVvcGxlIGRvIGxpa2UgIm1hcCB0aGUgc3RyZWFtLCBwdXQgYSBjb25z
b2xlLmxvZyIgYW5kIGlmIHlvdSBkbyB0aGF0IHdpdGggYXJyYXlzLCBpdCB3b3Jr
cywgYmVjYXVzZSB0aGF0IHJ1bnMgaW1tZWRpYXRlbHksIGJ1dCB3aXRoIHN0cmVh
bXMgaXQgZG9lc24ndC4gUGVvcGxlIGdldCB0aGVzZSBwcm9ibGVtcy4gQW5kIGFs
bCBvZiB0aGF0IGlzIGJlY2F1c2Ugd2UgZG9uJ3QgaGF2ZSB0aGF0IGdvb2Qgb2Yg
YSBzdXBwb3J0IGluIHRoZSBsYW5ndWFnZS4gKFRoZXNlIGFyZSBteSBzbGlkZXMs
IEknbSBzb3JyeS4gVGhlIHNsaWRlcyBhcmUgbXkgbm90ZXMsIHNvIHlvdSBjYW4g
Zm9sbG93IGV2ZXJ5dGhpbmcuKQoKV2hlbiB3ZSB3ZW50IHRvIFtUeXBlU2NyaXB0
XShodHRwOi8vdHlwZXNjcmlwdGxhbmcub3JnLyksIHRoaW5ncyB3ZXJlIGEgYml0
IGJldHRlciAob2YgY291cnNlIHlvdSBjYW4gc3RpbGwgdXNlIEphdmFTY3JpcHQp
LCBhbmQgaXQncyBub3QgcGVyZmVjdC4gVGhlbiB3ZSB3ZXJlIHRoaW5raW5nOiB3
aGF0IHdvdWxkIGJlIHBlcmZlY3Q/IEFuZCBJIGRvIGhhdmUgc29tZSBpZGVhcyBv
ZiBidWlsZGluZyBhIHByb2dyYW1taW5nIGxhbmd1YWdlLCBJIHdhcyBhIGxvdCBp
bnNwaXJlZCBieSBbRWxtXShodHRwOi8vZWxtLWxhbmcub3JnLykuIFdoYXQgSSB0
aG91Z2h0IGZpcnN0IHdhczogd2h5IGRvIHdlIG5lZWQgcHJvZ3JhbW1pbmcgbGFu
Z3VhZ2VzPyBPZiBjb3Vyc2Ugd2Ugd2FudCB0byBnZXQgc29mdHdhcmUgZG9uZSwg
YnV0IHdoYXQgaXMgb3VyIGdvYWwsIHRoYXQncyB0aGUgcXVlc3Rpb24sIGFuZCBo
b3cgdG8gZ2V0IHRvIHRoYXQgZ29hbD8KClVzdWFsbHkgKipzb21lIGxhbmd1YWdl
cyBoYXZlIGRlc2lnbiBwcmluY2lwbGVzIG9yIGd1aWRpbmcgcHJpbmNpcGxlcyoq
LiBbUHl0aG9uXShodHRwczovL3d3dy5weXRob24ub3JnLykgaGFzIFBFUCAyMCwg
W3RoZSBaZW4gb2YgUHl0aG9uXShodHRwczovL3d3dy5weXRob24ub3JnL2Rldi9w
ZXBzL3BlcC0wMDIwLyksIGFuZCB0aGlzIGlzIGxpa2UgdGhlIFRlbiBDb21tYW5k
bWVudHMgb2YgUHl0aG9uLCBzdWNoIGFzICJ0aGVyZSBzaG91bGQgYmUgb25seSBv
bmUgb2J2aW91cyB3YXkgb2YgZG9pbmcgc3R1ZmYiIGFuZCBldGMuIEFuZCB0aGF0
IHNvcnQgb2YgZ3VpZGVzIHRoZW0gaWYgdGhleSdyZSBnb2luZyB0byBtYWtlIG5l
dyBmZWF0dXJlcyBpbiBQeXRob24sIHRoZXkgYXNrICJkb2VzIHRoYXQgZm9sbG93
IHRoZSBaZW4gb2YgUHl0aG9uIj8gSmF2YVNjcmlwdCBkb2Vzbid0IGhhdmUgdGhh
dCwgc28geW91IGhhdmUgYSB0b24gb2YgaW5jb25zaXN0ZW5jeSwgY29tbWl0dGVl
IGRlc2lnbiwgYW5kIGEgYnVuY2ggb2YgZGlmZmVyZW50IGNvbXBhbmllcyB0cnlp
bmcgdG8gcHVzaCBhIGJ1bmNoIG9mIHN0dWZmIGludG8gSmF2YVNjcmlwdCwgYW5k
IGl0J3Mgb25seSBnb2luZyB0byBnZXQgYmlnZ2VyIGFuZCBtb3JlIGZ1bGwgb2Yg
ZmVhdHVyZXMuIFNvIGl0IHdpbGwgZ2V0IGhhcmRlciBhbmQgaGFyZGVyIHRvIGhh
dmUgYSBtb3JlIGZvY3VzZWQgZXhwZXJpZW5jZSB3aGVuIHVzaW5nIEphdmFTY3Jp
cHQsIGJlY2F1c2UgaXQgd2lsbCBiZSBzdXBlciBnZW5lcmljLgoKU28gSSBzdGFy
dGVkIGFza2luZyBteXNlbGY6IHdoYXQgaXMgcHJvZ3JhbW1pbmc/IFdoYXQgaXMg
Y29kZT8gV2hhdCBpcyBvdXIgZ29hbCBhbmQgaG93IGNhbiB3ZSBnZXQgdGhlcmU/
IERvIHdlIG5lZWQgYSBwcm9ncmFtbWluZyBsYW5ndWFnZSB0byBhY2hpZXZlIG91
ciBnb2FsPyBCYXNpY2FsbHkgdGhpcyB0YWxrIGlzOiBpZiBJIHdvdWxkIG1ha2Ug
YSBsYW5ndWFnZSwgaXQgd291bGQgYmUgZ3VpZGVkIGJ5IHNvbWUgZ3VpZGluZyBw
cmluY2lwbGVzLiBUaGF0J3MgdGhlIG1vc3QgaW1wb3J0YW50IHRoaW5nIHRvIGhh
dmUgaW4gdGhlIGJlZ2lubmluZywgYmVjYXVzZSBvbmNlIHlvdSBzdGFydCBidWls
ZGluZyBldmVyeXRoaW5nLCB5b3Ugd2FudCB0byBjaGVjayBpZiB0aGF0IGxhbmd1
YWdlIGlzIGZvbGxvd2luZyB0aGVzZSBwcmluY2lwbGVzLiBJIGRvbid0IGtub3cg
aWYgSSdtIGdvaW5nIHRvIGJ1aWxkIGl0LCBtaWdodCBiZSB0b28gbXVjaCB3b3Jr
LCBidXQgSSdtIGp1c3QgcHV0dGluZyBvdXQgdGhhdCB0aGVzZSBhcmUgdGhlIGtp
bmQgb2YgcHJpbmNpcGxlcyB0aGF0IEkgd291bGQgcHV0IGluIGEgbGFuZ3VhZ2Uu
IFRoZW4sIHRoaXMgd2lsbCBwcm9iYWJseSBsaWZ0IHVwIHNvbWUgZGlzY3Vzc2lv
bnMgYWJvdXQgdGhlIG5hdHVyZSBvZiBzb21lIHRoaW5ncyBpbiBwcm9ncmFtbWlu
Zy4KCjxoMiBpZD0iYXNzdW1wdGlvbnMtYWJvdXQtY29kZSIgY2xhc3M9ImhyIj48
c3BhbiBjbGFzcz0iaHIiPkFTU1VNUFRJT05TIEFCT1VUIENPREU8L3NwYW4+PC9o
Mj4KClRoZXNlIGFyZSB0aGluZ3MgdGhhdCBJICphc3N1bWUqIGFyZSB0cnVlIGlu
IHByb2dyYW1taW5nLCBvciBvZiBjb2RlLiBUaGV5IG1heSBub3QgYmUgdHJ1ZSwg
YnV0IEkgYmVsaWV2ZSB0aGF0IHRoZXkgYXJlIHByb2JhYmx5IHRydWUuCgpGaXJz
dCBvZiBhbGwsICoqY29kZSBpcyBhIGRlc2NyaXB0aW9uIG9mIGEgdmVyeSBjb21w
bGV4IHN5c3RlbSoqLiBXZSBoYXZlIG91ciBwcm9ncmFtcywgdGhleSBhcmUgdGhl
IHN5c3RlbSwgaW50ZWdyYXRlZCB3aXRoIGFsbCBraW5kcyBvZiBzdHVmZi4gQW5k
IGNvZGUgaXMgdGhlIGRlc2NyaXB0aW9uIG9mIHRoYXQuIFNvIHR5cGljYWxseSBj
b2RlICoqaXMgZGVjbGFyYXRpdmUqKiBieSBuYXR1cmUsIGJlY2F1c2UgeW91IGFy
ZSAqZGVjbGFyaW5nKiB0aGUgc3lzdGVtLCBubyBtYXR0ZXIgaWYgeW91IGFyZSBk
ZWNsYXJpbmcgdGhhdCB3aXRoIGltcGVyYXRpdmUgc3R5bGUgb3Igd2l0aCBvdGhl
ciBzdHlsZXMsIHRoZSBpZGVhIG9mIGFueSBjb2RlIGlzIHRvIGRlY2xhcmUgeW91
ciBzeXN0ZW0uIElmIHlvdSB3YW50IHRvIGFuc3dlciAid2hlcmUgaXMgdGhlIGNv
bmZlcmVuY2U/IiwgeW91IGNhbiBzYXkgdGhlIGFkZHJlc3MgKHRoYXQncyBkZWNs
YXJhdGl2ZSkgb3IgeW91IGNhbiBzYXkgImdvIGZvcndhcmQsIHRoZW4gbGVmdCwg
Z28gcmlnaHQiLCB0aGF0IHR5cGUgb2Ygc3R1ZmYuIEl0J3Mgb25lIGFzc3VtcHRp
b24gSSBoYWQgYWJvdXQgd2hhdCBpcyBjb2RlLgoKSSB0aGVuIEkgYWxzbyB0aG91
Z2h0IHRoYXQgc29tZSBwZW9wbGUgcmVhbGx5IGxpa2UgY29kZSBhcyBhcnQsIGFu
ZCB0aGF0J3Mgb2theS4gQnV0IEkgYXNzdW1lIHRoYXQgKipzb2NpZXR5IHZhbHVl
cyBjb2RlIG1vcmUgdG8gZGVsaXZlciBmZWF0dXJlcyB0aGFuIHRvIGRlbGl2ZXIg
YXJ0KiouIEkgYXNzdW1lIHRoYXQgcGVvcGxlIHRoaW5rIG9mIGNvZGUgaW4gdGhh
dCBzZW5zZS4gT2YgY291cnNlLCBjb2RlIGNhbiBzdGlsbCBiZSB2YWx1YWJsZSBh
cyBhcnQsIGJ1dCBJIGFzc3VtZSB0aGF0IHNvY2lldHkgdGhpbmtzIHRoYXQgY29k
ZSBpcyBtb3JlIHZhbHVhYmxlIHRvIGRlbGl2ZXJzIGZlYXR1cmVzLiBTbyBpdCdz
IGJhc2ljYWxseSBmZWF0dXJlcy4gU29jaWV0eSBkb2Vzbid0IHJlYWxseSB1bmRl
cnN0YW5kIGFsbCBvZiB0aGUgb3RoZXIgaXNzdWVzIGxpa2UgIml0J3Mgd3JpdHRl
biBpbiBuaWNlIGNvZGUiLCBhbmQgdGhleSBhcmUgbGlrZSAic28gd2hhdD8iLiBU
aGV5IGRvbid0IHRvbGVyYXRlIHNsb3cgcGVyZm9ybWFuY2UgYW5kIGJ1Z3MsIGFu
ZCB0aGF0J3MganVzdCBzb21ldGhpbmcgdGhhdCB0aGV5IGFzc3VtZS4gVGhleSB3
b24ndCBhc2sgdG8gYnVpbGQgYSBmZWF0dXJlIGFuZCBtYWtlIGl0IGZhc3QsIHRo
ZXkgd2lsbCBqdXN0IGFzc3VtZSB0aGF0IGl0IHdpbGwgYmUgZmFzdCBvbmNlIHRo
ZXkgYXNrIGZvciB0aGF0IGZlYXR1cmUuIFNvIGNvZGUgaXMgYSBuZWNlc3Nhcnkg
ZXZpbCwgYmVjYXVzZSB0aGV5IGp1c3Qgd2FudCBmZWF0dXJlcywgdGhleSB3YW50
IGEgc3lzdGVtIHRoYXQgZGVsaXZlcnMgdGhvc2UgZmVhdHVyZXMuIEFuZCBpdCBo
YXBwZW5zIHRvIGJlIHRoYXQgdGhlIHdheSB0aGF0IHdlIGhhdmUgcmlnaHQgbm93
IGlzIHRvIGRlc2NyaWJlIHRoaXMgY29tcGxleCBzeXN0ZW0gdGhyb3VnaCB0ZXh0
LgoKSSBhc3N1bWUgdGhhdCAqKmNvZGUgaXMgbW9yZSBvZnRlbiByZWFkIHRoYW4g
d3JpdHRlbioqLiBJZiB5b3UgdGFrZSB0aGUgd2hvbGUgcHJvZ3JhbW1pbmcgYWN0
aXZpdHkgYW5kIHlvdSBtZWFzdXJlIHRpbWUsIGl0J3MgcHJvYmFibHkgdGhlIGNh
c2UgdGhhdCB5b3UncmUgcmVhZGluZyBjb2RlIG1vcmUgdGhhbiB3cml0aW5nIGl0
LgoKQW5kIHRoZW4gb25lIHRoYXQgSSBkaXNjb3ZlcmVkIHdhcyB0aGUgaWRlYSBv
ZiAqKnZhbGlkIGFuZCBpbnZhbGlkIHN0YXRlcyBpbiBwcm9ncmFtbWluZyoqLiBZ
b3UgY2Fubm90IGJlIHZhZ3VlIHdoZW4gcHJvZ3JhbW1pbmcsIHRoZXJlJ3MgYWx3
YXlzIHRoZSBpZGVhIG9mICJ0aGlzIGlzIGludmFsaWQiLCAidGhhdCBpcyBpbnZh
bGlkIi4gU28geW91IGFsd2F5cyBoYXZlIHRoZXNlIHZlcnkgc3RyaWN0IHJ1bGVz
IGluIGNvbXB1dGVycywgYW5kIHRoZXJlIGlzbid0IHRoYXQgbXVjaCB3YXkgb2Yg
YmVpbmcgdmFndWUuIFRoaXMgaXMgYWN0dWFsbHkgc29tZXRoaW5nIHRoYXQgd2Ug
c3RydWdnbGUgd2l0aCBiZWNhdXNlIG9mIGR5bmFtaWMgcHJvZ3JhbW1pbmcgbGFu
Z3VhZ2VzLiBJbiBubyBwcm9ncmFtbWluZyBsYW5ndWFnZSBjYW4geW91IHNheSAi
Z2l2ZSBtZSBhbnl0aGluZywgYW5kIEknbGwgZG8gYW55dGhpbmciLiBFdmVuIGlu
IEphdmFTY3JpcHQgKHdoaWNoIGlzIGhpZ2hseSBkeW5hbWljKSB5b3UgY2FuJ3Qg
dXN1YWxseSBnaXZlIGFueXRoaW5nIHRvIGFueSBmdW5jdGlvbi4gSWYgeW91IGRv
LCB5b3UncmUgZ29pbmcgdG8gZ2V0IG91dCBpbnZhbGlkIHN0dWZmIGxpa2UgYE5h
TmAsIGB1bmRlZmluZWRgLCBvciB3aGF0bm90LiBXaGF0IHN0cm9uZ2x5IHR5cGVk
IGxhbmd1YWdlcyBkbyBpcyB0aGF0IHRoZXkgYnJpbmcgdGhlc2UgcmVzdHJpY3Rp
b25zIGZvcndhcmQsIHRoZXkgbWFrZSBpdCB2ZXJ5IG9idmlvdXMgdGhhdCB0aGVy
ZSBhcmUgdGhlc2UgaW52YWxpZCBzdGF0ZXMuIER5bmFtaWMgbGFuZ3VhZ2VzLCB3
aGF0IHRoZXkgdHJ5IHRvIGRvLCBpcyBoaWRlIHRoZW0gYW5kIHByZXRlbmQgdGhh
dCB5b3UgZG9uJ3QgaGF2ZSB0aG9zZSByZXN0cmljdGlvbnMuIE5vdywgdGhpcyBp
cyBhIGdvb2QgdGhpbmcgYmVjYXVzZSB3ZSwgYXMgaHVtYW5zLCBkb24ndCBsaWtl
IHRvIHdvcmsgd2l0aCB2ZXJ5IHN0cmljdCBwZW9wbGUsIGxpa2UgdmVyeSBwZWRh
bnRpYyBwZW9wbGUuIElmIEkgdGVsbCB5b3U6CgotICJDYW4geW91IHR1cm4gb2Zm
IHRoZSBsaWdodHM/IgotIFJlcGx5OiAiV2hpY2ggbGlnaHRzPyIKLSAiVGhlIGxp
Z2h0cyB0aGVyZSBpbiB0aGUgY29ybmVyPyIKLSBSZXBseTogIldoaWNoIGNvcm5l
cj8gV2hhdCBpcyBhIGNvcm5lcj8iCi0gIkNvbWUgb24sIGp1c3QgdHVybiBvZmYg
dGhlIGxpZ2h0cyEiCgpTbyBJIHVuZGVyc3RhbmQgd2h5IHBlb3BsZSB3YW50IGR5
bmFtaWMgbGFuZ3VhZ2VzLCBpdCBpcyB2ZXJ5IHVuZGVyc3RhbmRhYmxlLiBCdXQg
d2UgaGF2ZSB0aGlzIHdvcmxkIG9mIGNvbXB1dGVycyB3aGljaCBhcmUgc3VwZXIg
c3RyaWN0LCBhbmQgd2UgaGF2ZSB0aGUgd29ybGQgb2YgcGVvcGxlLCBhbmQgaG93
IHRvIG1ha2UgdGhhdCBicmlkZ2UgaXMgaGFyZC4gVGhhdCdzIHdoeSBwZW9wbGUg
cHJlZmVyIGR5bmFtaWMgbGFuZ3VhZ2VzLCBiZWNhdXNlIHRoZXkgZ2V0IHRoZSBm
ZWVsaW5nIHRoYXQgdGhleSBkb24ndCBuZWVkIHRvIGJlIHdvcmtpbmcgd2l0aCBh
IHBlZGFudGljIHN5c3RlbS4KCkkgcmVhbGx5IHdhbnQgdG8gc2hvdyB0aGlzIGNv
bWljLCBKYXZhIHZlcnN1cyBKYXZhU2NyaXB0LCB0aGlzIGlzIHRoZSBiZXN0OgoK
W2h0dHA6Ly9pLmltZ3VyLmNvbS83Nld0dGh5LmpwZ10oaHR0cDovL2kuaW1ndXIu
Y29tLzc2V3R0aHkuanBnKQoKWW91IG1heSBiZWxpZXZlIHRoYXQgeW91J3JlIHRh
bGtpbmcgdG8gc29tZW9uZSB0aGF0IGp1c3QgdW5kZXJzdGFuZHMgeW91LCBidXQg
aW4gZmFjdCwgdGhleSBhcmUgc28gd2VpcmQuIFdoYXQgZHluYW1pYyBwcm9ncmFt
bWluZyBkb2VzIGlzIHRoYXQgaXQgZGVsYXlzIHRoZXNlIGludmFsaWQgc3RhdGVz
LiBZb3UgY2Fubm90IGhpZGUgdGhlIGludmFsaWQgc3RhdGVzIGluIHByb2dyYW1t
aW5nLCBzbyB3aGF0IHlvdSdyZSBkb2luZyB3aXRoIGR5bmFtaWMgcHJvZ3JhbW1p
bmcgbGFuZ3VhZ2VzIGlzIHRoYXQgeW91J3JlIGp1c3QgYmVpbmcgdmFndWUgd2hl
biBkZXNjcmliaW5nIHRoZSBzeXN0ZW0sIGJ1dCB0aG9zZSBpbnZhbGlkIHN0YXRl
cyB3aWxsIHN0aWxsIGJlIHRoZXJlLCBhbmQgeW91J3JlIG5vdCBoYW5kbGluZyB0
aGVtLiBXaGF0IHdpbGwgaGFwcGVuIGlzIHRoYXQgdGhvc2UgaW52YWxpZCBzdGF0
ZXMgd2lsbCBzaG93IHVwIGluIHRoZSBsYXRlc3Qgc3RhZ2VzLCB3aGljaCBhcmUg
d2l0aCB0aGUgdXNlci4gVXNpbmcgeW91ciBwcm9ncmFtLCBpdCBjcmFzaGVzLiAq
KkEgYnVnIHJlcG9ydCBmcm9tIGEgdXNlciBpcyBhIGNvbXBpbGUgZXJyb3IgdGhh
dCB5b3UgZGlkbid0IGdldCB3aGlsZSB3cml0aW5nIGNvZGUqKi4gU28gaXQgaXMg
a2luZCBvZiBsaWtlIGEgbGllIHRvIGJlbGlldmUgaW4gZHluYW1pYyBwcm9ncmFt
bWluZyBsYW5ndWFnZXMsIGJlY2F1c2UgeW91IHdpbGwgZ2V0IHRoaXMgYnVnIGlu
IHRoZSBsYXRlc3Qgc3RhZ2VzLCBhbmQgdGhhdCdzIGVtYmFycmFzc2luZyBhbmQg
YWxzbyBiYWQgZm9yIGJ1c2luZXNzLiBTbyB3aGF0IGR5bmFtaWMgcHJvZ3JhbW1p
bmcgZ2l2ZXMgeW91IGlzIHNob3J0IHRlcm0gYmVuZWZpdHMgb2Ygbm90IGhhdmlu
ZyB0byBkZWFsIHdpdGggdGhlc2Ugbml0cGlja2luZyBjYXNlcywgYnV0IGluIHRo
ZSBlbmQsIHRoZSB1c2VyIHdpbGwgdGVsbCB5b3UgdGhlc2Ugbml0cGlja2luZyB0
aGluZ3MuIEknbSBub3QgdGFsa2luZyBzbyBtdWNoIGFib3V0IGR5bmFtaWMgdmVy
c3VzIHR5cGVkIGFuZCBzYXlpbmcgdGhhdCAidHlwZWQgaXMgdGhlIGZ1dHVyZSIs
IHdoYXQgSSdtIHNheWluZyBpcyAqKndlIHNob3VsZCBicmluZyB0aGVzZSBpbnZh
bGlkIHN0YXRlcyBjbG9zZXIgdG8gdGhlIHBvaW50IHdoZXJlIHlvdSdyZSB3cml0
aW5nIHRoZSBwcm9ncmFtKiouIEl0IGNvdWxkIGJlIHRocm91Z2ggdHlwZXMsIGl0
IGNvdWxkIGJlIHRocm91Z2ggYW55dGhpbmcgZWxzZS4gVGhlIHBvaW50IGlzIHRo
YXQgd2UgYXJlIG5vdCBkZWxheWluZyB0aGlzIHRvIHRoZSBsYXRlc3Qgc3RhZ2Us
IHdoaWNoIGlzIGVtYmFycmFzc2luZy4KCihBbmQgaGVyZSBpcyBhIGJpZyBwYXJl
bnRoZXNpcy4gU2luY2Ugd2UgbGlrZSB0byBiZSB2YWd1ZSBhcyBodW1hbiBiZWlu
Z3MgYW5kIEFydGlmaWNpYWwgSW50ZWxsaWdlbmNlIGlzIGFsc28gY2F0Y2hpbmcg
dXAsIGhlcmUgaXMgYSBtdWx0aW1pbGxpb24tZG9sbGFyIG9wcG9ydHVuaXR5OiB0
byBoYXZlIGEgcHJvZ3JhbW1pbmcgbGFuZ3VhZ2Ugd2hlcmUgeW91IGp1c3QgdGVs
bCBhIHN0YXRlbWVudCwgbGlrZSAicHV0IHN0dWZmIG9uIHRoZSBzY3JlZW4iLCBh
bmQgdGhlIEFJIGlzIGdvaW5nIHRvIGZpZ3VyZSBvdXQgd2hhdCBkb2VzIHRoYXQg
bWVhbi4gQW5kIGl0J3MgZ29pbmcgdG8gaGF2ZSBubyBzeW50YXgsIGJlY2F1c2Ug
eW91IGhhdmUgbm8gc3RyaWN0IHdheSBvZiBleHBsYWluaW5nIHRoZSBzeXN0ZW0s
IHlvdSBqdXN0IGV4cGxhaW4gaXQgaG93ZXZlciB5b3Ugd2FudCwgYW5kIHRoZSBB
SSB3aWxsIGZpZ3VyZSBvdXQuIFNvIGl0IGNvdWxkIHR1cm4gb3V0IHRoYXQgeW91
IGp1c3Qgd3JpdGUgd2hhdGV2ZXIgdGhpbmdzIHRoYXQgeW91IHdhbnQgYXMgaWYg
eW91IHdvdWxkIGJlIGEgbWFuYWdlciB3cml0aW5nIGFuIGVtYWlsIHRvIGEgcHJv
Z3JhbW1lciwgYW5kIHRoZSBBSSB3b3VsZCBqdXN0IGZpZ3VyZSBpdCBvdXQuIE1h
eWJlIGl0IHdvdWxkIHRlbGwgeW91ICJjYW4geW91IGdpdmUgbWUgYSBsaXR0bGUg
Yml0IG1vcmUgZGV0YWlscywgYmVjYXVzZSBJIGFtIHN0cnVnZ2xpbmcgaGVyZSIs
IHRoYXQgdHlwZSBvZiBzdHVmZi4gVGhpcyBjb3VsZCBwcm9iYWJseSByZW1vdmUg
YWxsIG91ciBqb2JzIGluIHRoZSBmdXR1cmUsIGJ1dCBtYXliZSBub3Qgc28gc29v
bi4gTWF5YmUgdGhlIGJ1c2luZXNzIHBlb3BsZSB3b3VsZG4ndCB1c2UgdGhpcywg
YnV0IHByb2JhYmx5IHRoZXkgd291bGQgcGFzcyB0aGlzIHRvIHNvbWUgZGVzaWdu
ZXIsIHdoaWNoIGlzIGEgaHlicmlkIGJldHdlZW4gYSBkZXNpZ25lciBhbmQgYSBk
ZXZlbG9wZXIsIGFuZCB0aGV5IHdvdWxkIGRlc2NyaWJlIHRoZSBzeXN0ZW0uIEJ1
dCBsZXQncyBnbyBiYWNrIHRvIGxhbmd1YWdlcy4pCgpMZXQncyB0YWxrIGEgbGl0
dGxlIGJpdCBhYm91dCBib2lsZXJwbGF0ZSBhbmQgaW1wbGljaXQgc3R1ZmYuIElu
IEN5Y2xlLmpzIHdlIHNheSAidGhpcyBpcyBhbiBleHBsaWNpdCBmcmFtZXdvcmsi
LCBidXQgd2hhdCBkb2VzIHRoYXQgZXZlbiBtZWFuPyBJdCdzIGtpbmQgb2YgaGFy
ZC4gSXQncyBhbGwgYWJvdXQgYXNzdW1wdGlvbnMuIFNvIGZvciBpbnN0YW5jZSwg
Q3ljbGUuanMgaXMgbm90IGVudGlyZWx5IGV4cGxpY2l0IGJlY2F1c2Ugd2UgZG9u
J3Qgc2hvdyB0aGUgW2Fzc2VtYmxlciBjb2RlXShodHRwczovL2VuLndpa2lwZWRp
YS5vcmcvd2lraS9Bc3NlbWJseV9sYW5ndWFnZSkgdGhhdCBpcyBydW5uaW5nIGZv
ciBldmVyeXRoaW5nLiBTbyB3ZSBhc3N1bWUgc29tZSBzdHVmZiB0byBiZSByYXRo
ZXIgb2J2aW91cywgYW5kIHRoZW4gd2UgYnVpbGQgb24gdGhhdC4gQnV0IHRoZXJl
IGlzIGEgc3BlY3RydW0uIFRoZSBtb3JlIHlvdSBhc3N1bWUgdGhhdCB0aGUgcHJv
Z3JhbW1lciByZWFkaW5nIGNvZGUga25vd3MsIHRoZSBjbG9zZXIgeW91IGFyZSBn
ZXR0aW5nIHRvICJtYWdpYyIuIEl0J3MgdGhvc2UgY2FzZXMgd2hlcmUgeW91IGRv
bid0IG5lZWQgdG8gaW1wb3J0IGFueXRoaW5nLCB5b3UgZG9uJ3QgbmVlZCB0byBk
byBhbnl0aGluZyBlbHNlIHRoYW4gcHV0IHNvbWUgY29kZSBzb21ld2hlcmUsIGFu
ZCBldmVyeXRoaW5nIG1hZ2ljYWxseSB3b3Jrcy4gVGhhdCBpcyBiYXNpY2FsbHkg
KmFzc3VtaW5nKiB0aGF0IHlvdSBrbm93IHRoYXQgdGhlcmUgaXMgdGhpcyBzeXN0
ZW0gaW4gcGxhY2UuCgpFeHBlcmllbmNlZCBwcm9ncmFtbWVycyB1c3VhbGx5IHBy
ZWZlciBhIGJpdCBtb3JlIG1hZ2ljYWwgc3R1ZmYsIGJlY2F1c2UgdGhleSBhbHJl
YWR5IGhhdmUgYWxsIG9mIHRob3NlIGFzc3VtcHRpb25zIGVtYmVkZGVkIGluIHRo
ZW0uIEZvciBpbnN0YW5jZSwgaWYgeW91J3JlIHRpcmVkIG9mIGltcG9ydGluZyBh
bGwgb2YgdGhvc2UgcGFja2FnZXMsIHlvdSBjb3VsZCBqdXN0IG5vdCBpbXBvcnQs
IGFuZCBqdXN0IHdyaXRlIHlvdXIgY29kZS4gWW91IGhpZGUgYXNzdW1wdGlvbnMs
IGJlY2F1c2UgeW91IGtub3cgdGhhdCB5b3Ugd291bGQgaW1wb3J0IHRoZW0gYW55
d2F5LCBzbyB5b3UgZG9uJ3QgbmVlZCB0byB0eXBlIHRoZW0uIFlvdSBqdXN0IG1h
ZGUgaXQgbW9yZSBtYWdpY2FsLiBTbyB0aGVuIHlvdSBjYW4gZm9jdXMgb24gWypz
aWduYWwqIGluc3RlYWQgb2YgKm5vaXNlKl0oaHR0cHM6Ly9lbi53aWtpcGVkaWEu
b3JnL3dpa2kvU2lnbmFsLXRvLW5vaXNlX3JhdGlvKS4gWW91IGNhbiBmb2N1cyBv
biB0aG9zZSB0aGluZ3MgdGhhdCBkZWxpdmVyIGZlYXR1cmVzLCBhbmQgdHlwZSBs
ZXNzIGNvZGUuIEV4cGVyaWVuY2VkIHByb2dyYW1tZXJzIGxpa2UgdG8gdHlwZSBs
ZXNzLCBiZWNhdXNlIGl0J3Mgc28gdGVkaW91cyB0byB3cml0ZSBzdHVmZi4gQnV0
LCAqKm1hZ2ljIGlzIGFudGktYmVnaW5uZXJzKiosIGJlY2F1c2UgaXQgaXMgYXNz
dW1pbmcgdG9vIG11Y2ggZnJvbSB0aGUgcmVhZGVyLiBJZiB5b3UncmUgYSBiZWdp
bm5lciwgeW91IGRvbid0IGtub3cgdGhhdCBtdWNoLCB5b3UgZG9uJ3QgaGF2ZSB0
aG9zZSBhc3N1bXB0aW9ucyBlbWJlZGRlZCBidWlsdCBpbnRvIHlvdS4gQW5kIHRo
ZW4geW91IG1pZ2h0IHJlYWQgY29kZSBhbmQgYmUgdmVyeSBjb25mdXNlZC4gSXQg
bWlnaHQgbG9vayBsaWtlIGEgdmVyeSBjb21wbGV4IHN5c3RlbSB3aGVuIGluIGZh
Y3QgaXQgY291bGQgaGF2ZSBsb29rZWQgc2ltcGxlciBieSBqdXN0IHNob3dpbmcg
dGhvc2UgYXNzdW1wdGlvbnMuIFNvIGl0J3MgdmVyeSBoYXJkIHRvIGdvIGZ1bGx5
IGV4cGxpY2l0IGJlY2F1c2UgdGhlbiBpdCBtZWFucyB3ZSdyZSBnb2luZyB0byBz
aG93IEFzc2VtYmx5IGNvZGUuIEJ1dCB3aGF0IHdlIGNhbiBkbyBpcyB0aGluayAi
d2hhdCBkb2VzIHRoZSBhdmVyYWdlIGJlZ2lubmVyIGxvb2sgbGlrZSwgYW5kIHdo
YXQgYXJlIHRoZSB0aGluZ3MgdGhhdCB0aGV5IGtub3cgYWJvdXQgcHJvZ3JhbW1p
bmciLCBhbmQgbGV0J3MgdXNlIHRob3NlIHRoaW5ncyBhcyBhc3N1bXB0aW9ucy4K
CjxoMiBpZD0iYXNzdW1wdGlvbnMtYWJvdXQtcHJvZ3JhbW1pbmciIGNsYXNzPSJo
ciI+PHNwYW4gY2xhc3M9ImhyIj5BU1NVTVBUSU9OUyBBQk9VVCBQUk9HUkFNTUlO
Rzwvc3Bhbj48L2gyPgoKQWJvdXQgcHJvZ3JhbW1pbmcsIEkgc3RhcnRlZCBub3Rp
Y2luZyB0aGF0IHByb2dyYW1taW5nIHRvIGdlbmVyYXRlIGNvZGUgaXMgYW4gYWN0
aXZpdHkgdGhhdCB3ZSBkbyB0aGF0IGhhcyB0d28gbW9kZXMsIGJhc2ljYWxseS4g
SW4gb25lIG1vZGUsICoqeW91IGFyZSBhIHN0dWRlbnQgKHJlYWRpbmcpKiouIEFu
ZCBpbiB0aGUgb3RoZXIgbW9kZSwgKip5b3UgYXJlIGEgcHV6emxlIHNvbHZlciAo
d3JpdGluZykqKi4KCkluIHRoZSBzdHVkZW50IG1vZGUsIHlvdSBhcmUgcHV0dGlu
ZyB0aGUgc3lzdGVtIGludG8geW91ciBoZWFkLCB0cnlpbmcgdG8gdW5kZXJzdGFu
ZCB0aGF0IHN5c3RlbS4gVGhpcyBoYXBwZW5zIGEgbG90IHdoZW4geW91IGFyZSBy
ZWFkaW5nIGNvZGUsIHRyeWluZyB0byBsZWFybiB0aGUgbGFuZ3VhZ2UsIHRyeWlu
ZyB0byBsZWFybiB0aGUgbGlicmFyaWVzLiBBbmQgdGhlIHN0dWRlbnQgbW9kZSBo
YXBwZW5zIGFsd2F5cywgbm90IGp1c3QgZm9yIGxlYXJuaW5nIGxpYnJhcmllcywg
YnV0IHdoZW4geW91IGpvaW4gYSBuZXcgcHJvamVjdCwgeW91IGhhdmUgdG8gbGVh
cm4gaG93IGRvZXMgdGhhdCBuZXcgcHJvamVjdCB3b3JrLiBXaGVuIHlvdSBsb29r
IGF0IGEgcHVsbCByZXF1ZXN0LCB5b3UgaGF2ZSB0byBsZWFybiBob3cgZG9lcyB0
aGF0IHB1bGwgcmVxdWVzdCBhZmZlY3QgeW91ciBzeXN0ZW0uIFNvIGl0J3MgYWx3
YXlzIGFib3V0IGxlYXJuaW5nLiBJdCdzIGEgbW9kZSB0aGF0IGlzIGFsd2F5cyB0
aGVyZS4gSXQncyBhYm91dCByZWFkaW5nLCBhbmQgc2lua2luZyBpbiB0aGF0IHN0
dWZmLiBFdmVuIGlmIHlvdSBoYXZlIHRoZSBzYW1lIGxpYnJhcmllcyBhbmQgc2Ft
ZSBwcm9ncmFtbWluZyBsYW5ndWFnZXMgZm9yZXZlciwgdGhlIHN5c3RlbSAodGhl
IHJ1bnRpbWUpIHN0aWxsIHdpbGwgbmVlZCB0byBiZSBsZWFybmVkLgoKVGhlIG90
aGVyIG1vZGUgaXMsIHdlIG1pZ2h0IHRoaW5rIGlzIGJ1aWxkaW5nIHN0dWZmLCBi
dXQgaXQncyBtb3N0bHkgYWJvdXQgc29sdmluZyBwdXp6bGVzIHRoYXQga2luZCBv
ZiBsb29rIGxpa2UgYnVpbGRpbmcuICoqVGhlIGJlc3QgYW5hbG9neSB0aGF0IEkg
Zm91bmQgd2FzIFRldHJpcyoqLCBiZWNhdXNlIGluIFRldHJpcyB5b3UgaGF2ZSBz
b21lIHJlc3RyaWN0aW9ucyAoZS5nLiB3YWxscyksIHlvdSBoYXZlIHNvbWUgcG9z
c2libGUgY2hvaWNlcyB3aXRoIHRob3NlIGRpZmZlcmVudCB0eXBlcyBvZiBibG9j
a3MgdGhhdCBjb21lIGluLCBhbmQgeW91IGhhdmUgc29tZSBmcmVlZG9tIHRvIGNo
b29zZSB3aGVyZSB0byBwdXQgdGhvc2UgYmxvY2tzLCBidXQgb25jZSB5b3UgcHV0
IHRob3NlIGJsb2NrcyBpbiBhIHNwZWNpZmljIHdheSwgeW91IG1heSB0cmlnZ2Vy
IHNvbWV0aGluZyBmdW5ueSB0byBoYXBwZW4sIGxpa2Ugcm93cyB0byBiZSByZW1v
dmVkLiBCdXQgaW4gcHJvZ3JhbW1pbmcgd2UgZG9uJ3QgaGF2ZSB0aGUgdGltZSBy
ZXN0cmljdGlvbiBvZiBUZXRyaXMuIFRoYXQgd291bGQgYmUgcXVpdGUgaG9ycmli
bGUsIGltYWdpbmUsICJ5b3UgaGF2ZSAyIHNlY29uZHMgdG8gd3JpdGUgdGhpcyEi
IEJ1dCB3aXRob3V0IHRpbWUsIHByb2dyYW1taW5nIHdvdWxkIGJlIGJhc2ljYWxs
eSBsaWtlIHRoaXMsIHdoZXJlIHlvdSdyZSBzb2x2aW5nIHRoYXQga2luZCBvZiBz
dHVmZi4KCllvdSBoYXZlICpmbG93KiB3aGVuIHlvdSB1bmRlcnN0YW5kIHRoZSBz
eXN0ZW0sIHRoYXQncyB3aHkgeW91IG5lZWQgdG8gaGF2ZSB0aGUgc3R1ZGVudCBw
YXJ0LCBhbmQgd2hlbiB5b3UgYXJlIHB1dHRpbmcgdGhvc2UgcGllY2VzIHRvZ2V0
aGVyIGFuZCBiZWluZyBwcm9kdWN0aXZlLgoKT25lIHRoaW5nIHRoYXQgSSBub3Rp
Y2VkIGlzIHRoYXQgdGhlIHJpZ2h0IGFtb3VudCBvZiBsaW1pdGF0aW9ucyBjcmVh
dGVzIGZsb3cgYW5kIGZvY3VzLiBGb3IgaW5zdGFuY2UsIHRoaXMgaXMgd2hhdCB3
ZSBkbyBpbiBbeHN0cmVhbV0oaHR0cHM6Ly9naXRodWIuY29tL3N0YWx0ei94c3Ry
ZWFtLyk6IFtSeEpTXShodHRwOi8vcmVhY3RpdmV4LmlvL3J4anMvKSBoYXMgbGlr
ZSAxNTArIG9wZXJhdG9ycywgYW5kIHRoYXQgbWF5IGJyaW5nIGFuYWx5c2lzIHBh
cmFseXNpcyB3aGVyZSB5b3UgYXJlIGxpa2UgIm9rYXkgSSBuZWVkIHRvIGJ1aWxk
IHRoaXMgc3R1ZmYsIGxldCdzIGNob29zZSBhbiBvcGVyYXRvciIsIHRoZW4gc3Bl
bmQgYSBsb3Qgb2YgdGltZSBjaG9vc2luZyB0aG9zZS4gSW4geHN0cmVhbSwgd2hh
dCB3ZSBkaWQgaXMgdGhhdCB3ZSBoYXZlIGEgbGl0dGxlIGFtb3VudCBvZiBvcGVy
YXRvcnMsIHRoYXQgZm9jdXMgeW91ciBhdHRlbnRpb24gdG8gdGhlc2UsIGl0IG1h
a2VzIGl0IGVhc2llciB0byBjaG9vc2UuIElmIEkgYXNrIHlvdSAiZG8geW91IHdh
bnQgYW4gYXBwbGUgb3IgYW4gb3JhbmdlPyIsIHlvdSBtaWdodCBxdWl0ZSBxdWlj
a2x5IGNob29zZSBzb21ldGhpbmcuIEJ1dCBpZiBJIGFzayB5b3UgIndoaWNoIG9m
IHRoZXNlIDEyMCBmcnVpdHMgZG8geW91IHdhbnQ/IiwgeW91IG1pZ2h0IGNob29z
ZSBzb21ldGhpbmcgeW91IGFyZSBmYW1pbGlhciB3aXRoLCB3aXRob3V0IGFjY3Vy
YXRlbHkgYW5hbHlzaW5nIGFsbCBvZiB0aG9zZSBmcnVpdHMuIEJ1dCBhbHNvLCBp
ZiB5b3UgaGF2ZSB0b28gbXVjaCBsaW1pdGF0aW9uLCB0aGVuIHlvdSBjcmVhdGUg
ZnJ1c3RyYXRpb24sIHdoZXJlIHlvdSB3YW50IHRvIGdldCBzdHVmZiBkb25lIGJ1
dCB5b3UgYXJlIGxpbWl0ZWQuCgpJIG5vdGljZWQgdGhhdCB0aGVyZSBuZWVkcyB0
byBiZSBhIGJhbGFuY2UgdGhlcmUsIGFuZCBpdCdzIGFib3V0IGFsbG93aW5nIGNy
ZWF0aXZpdHkgYXMgbXVjaCBhcyBwb3NzaWJsZSwgYnV0IGNyZWF0aW5nIGZvY3Vz
LiBXZSBjYW4gZG8gdGhhdCBieSBiYXNpY2FsbHkgKmFkZGluZyBjb3N0KiwgYW5k
IHlvdSBhcmUgZ29pbmcgdG8gZGVmYXVsdCB0byB3aGF0IGlzIGNoZWFwZXIuIEFu
IGFuYWxvZ3kgd291bGQgYmUsIGlmIEkgd291bGQgZGVzaWduIGEgcGxhY2UgZm9y
IHlvdSB0byBsaXZlLCB3aGVyZSB0aGVyZSB3b3VsZCBvbmx5IGJlIGhlYWx0aHkg
Zm9vZCBncm9jZXJ5IHN0b3JlcyBhcm91bmQgeW91IGluIDEwMCBtZXRlcnMgb3Ig
bGVzcywgYW5kIHRoZSBvbmx5IGNsb3Nlc3QgZmFzdCBmb29kIG9yIHVuaGVhbHRo
eSBmb29kIHBsYWNlIHdvdWxkIGJlIDUga2lsb21ldGVycyBhd2F5LCBhbmQgeW91
IGhhdmUgdG8gZ28gYnkgYmljeWNsZSwgdGhlbiB5b3Ugd291bGQgZW5kIHVwIGRl
ZmF1bHRpbmcgdG8gaGVhbHRoeSBmb29kLiBCdXQgaWYgeW91IHJlYWxseSB3YW50
IHVuaGVhbHRoeSBmb29kLCB5b3UgY2FuIGdvIGFuZCBnZXQgaXQuIFNvIHRoZXJl
IGlzIGNvc3QgdGhlcmUsIHRoYXQgdGVuZHMgdG8gbGVhZCB5b3UgdG8gdGhlIGNo
ZWFwZXIgc3R1ZmYuIFdpdGggeHN0cmVhbSwgd2hlbiB5b3Ugd2FudCBhbiBvcGVy
YXRvciwgeW91IGNhbiBqdXN0IHR5cGUgZG90LCBhbmQgaXQgc2hvd3MgYW4gYXV0
b2NvbXBsZXRlIHBhbmVsIG9mIHRoZSBvcGVyYXRvcnMsIHdoaWNoIGNvc3RzIGFs
bW9zdCBub3RoaW5nIGJlY2F1c2UgaXQncyB2ZXJ5IHF1aWNrLCBvciB5b3UgY2Fu
IGltcG9ydCBhbiBleHRyYSBvcGVyYXRvciwgYW5kIFtgY29tcG9zZSgpYF0oaHR0
cHM6Ly9naXRodWIuY29tL3N0YWx0ei94c3RyZWFtLyNjb21wb3NlKSBpdCwgdGhl
cmUgaXMgYSBiaXQgbW9yZSBjb3N0IHRoZXJlLCBzbyB5b3UgZW5kIGRlZmF1bHRp
bmcgdG8gdGhlIGNoZWFwZXIgb25lLiBUaGF0IGhlbHBzLCBiZWNhdXNlIHdlIGNy
ZWF0ZSBmb2N1cywgYnV0IGRvbid0IG1ha2UgaXQgc3RyaWN0LiBXZSBkb24ndCBt
YWtlIGl0IGFzICJiZXNpZGVzIHRoZXNlLCB5b3UgY2Fubm90IHVzZSBhbnl0aGlu
ZyBlbHNlLCBzb3JyeSIuIFdlIG5lZWQgdG8gYWxsb3cgaW5maW5pdGUgcG9zc2li
aWxpdGllcywgYnV0IG5vdCBpbmZpbml0ZSBwYXJhbHlzaXMgd2hlbiB5b3UncmUg
YW5hbHlzaW5nLgoKPGgyIGlkPSJhc3N1bXB0aW9ucy1hYm91dC10ZWFtd29yayIg
Y2xhc3M9ImhyIj48c3BhbiBjbGFzcz0iaHIiPkFTU1VNUFRJT05TIEFCT1VUIFRF
QU1XT1JLPC9zcGFuPjwvaDI+CgpBIGxpdHRsZSBvbiB0ZWFtd29yaywgY29kZSBz
dHlsZSBiaWtlLXNoZWRkaW5nIGJyaW5ncyBsaXR0bGUgb3Igbm8gYmVuZWZpdCB0
byBzb2NpZXR5LiBTbyBbUHJldHRpZXJdKGh0dHBzOi8vZ2l0aHViLmNvbS9wcmV0
dGllci9wcmV0dGllci8pIGZvciBKYXZhU2NyaXB0IGlzIGdyZWF0LiBBbmQgaXMg
c29tZXRoaW5nIHRoYXQgSSBhY3R1YWxseSBhc2tlZCBvbiBUd2l0dGVyOiB3aGF0
IGRvIHlvdSB0aGluayBpcyBnb29kIHRlYW13b3JrLCBnb29kIHBhaXIgcHJvZ3Jh
bW1pbmcgYW5kIGdvb2QgY29kZSByZXZpZXdzPyBBbmQgdGhpcyBpcyBhIGxpdHRs
ZSBiaXQgb2Ygd2hhdCBwZW9wbGUgc2FpZDogIkdvb2QgY29kZSByZXZpZXdzIGZv
Y3VzIG9uIHRoZSBtYWNyb3Njb3BpYyBpZGVhcyBpbiB0aGUgY29kZSBjaGFuZ2Us
IG5vdCB0aGUgbWljcm9zY29waWMiLgoKPGgyIGlkPSJkZXNpZ24tcHJpbmNpcGxl
cyIgY2xhc3M9ImhyIj48c3BhbiBjbGFzcz0iaHIiPkRFU0lHTiBQUklOQ0lQTEVT
PC9zcGFuPjwvaDI+CgpTbyB3aGF0IGtpbmQgb2YgZGVzaWduIHByaW5jaXBsZXMg
SSBjYW1lIHVwIHdpdGg/IEl0J3MgcHJldHR5IHNpbXBsZTogaWYgcHLsb2dyYW1t
aW5nIGlzIGFib3V0IHN0dWR5aW5nIHN5c3RlbXMgYW5kIHNvbHZpbmcgcHV6emxl
cywgbGV0J3MgbWFrZSBpdCBlYXN5IHRvIHN0dWR5IGNvZGUsIGFuZCBsZXQncyBt
YWtlIGl0IGVhc3kgdG8gc29sdmUgcHV6emxlcy4KCk9uIHdyaXRpbmcgKCJzb2x2
aW5nIHB1enpsZXMiKSwgSSBhbHJlYWR5IGdhdmUgc29tZSBoaW50cyBsaWtlIGhh
dmluZyB0aGUgcmlnaHQgYW1vdW50IG9mIGxpbWl0YXRpb25zLCBhbmQga2VlcGlu
ZyB5b3Vyc2VsZiBpbiB0aGUgZmxvdy4gSSBjYW4gc2hvdyBhbiBleGFtcGxlIG9m
IHRoZSBbT1AtMV0oaHR0cHM6Ly90ZWVuYWdlLmVuZ2luZWVyaW5nL3Byb2R1Y3Rz
L29wLTEpIGRldmljZSBieSBUZWVuYWdlIEVuZ2luZWVyaW5nLCBpdCBpcyBtYWRl
IGluIFN0b2NraG9sbSwgYW5kIGl0J3MgYSBtdXNpYyBzeW50aGVzaXplci4KCiFb
b3AxXSgvaW1nL29wMS5qcGcpCgpVc3VhbGx5IHN5bnRoZXNpemVycyBhcmUgaHVn
ZSBtYWNoaW5lcyB3aXRoIHRob3VzYW5kcyBvZiBidXR0b25zLCBidXQgdGhpcyBv
bmUganVzdCBoYXMgdGhlc2UgbXVjaC4gWW91IGNhbiBnZXQgc3VwZXIgaW4gdGhl
IGZsb3cgd2l0aCB0aGlzLiBZb3Ugc3RhcnQgZmlkZGxpbmcgd2l0aCBpdCwgYW5k
IHlvdSBpbnR1aXRpdmVseSBzdGFydCBsZWFybmluZyAidGhpcyBkb2VzIHRoYXQi
LCAidGhhdCBkb2VzIHRoYXQiLCBhbmQgaW4gZml2ZSBtaW51dGVzIHlvdSdyZSBj
cmVhdGluZyBtdXNpYy4gSSd2ZSB1c2VkIG90aGVyIG11c2ljIHRvb2xzIGFuZCBz
b2Z0d2FyZXMsIGFuZCB3aGVuIHlvdSBkZWNpZGUgIkknbSBnb2luZyB0byBtYWtl
IHNvbWV0aGluZyIsIHRoZW4geW91IHNwZW5kIHR3byBob3VycyBqdXN0IGNvbmZp
Z3VyaW5nIGhvdyB0aGUgZHJ1bSBzb3VuZHMuIEFuZCB0aGVuIHlvdSBsb3N0IHRo
ZSBpZGVhLiBBbHNvIHdpdGggdGhlIE9QLTEsIHlvdSBoYXZlIGEgY29ubmVjdGlv
biB0byB0aGUgcmFkaW8sIHNvIHlvdSBjYW4gc2FtcGxlIHRoZSByYWRpbywgb3Ig
eW91IGNhbiBwdXQgYSBtaWNyb3Bob25lIGhlcmUsIHNvIHRoZXJlIGlzIHRoZSBw
bHVnIGZvciBoYXZpbmcgaW5maW5pdGUgY3JlYXRpdml0eSwgaXMgdGhhdCB5b3Ug
Y2FuIGFsd2F5cyBwbHVnIHNvbWV0aGluZyB0aGVyZSBhbmQgYWRkIGl0IHRvIHRo
aXMuIFNvIHRoaXMgaXMgYSBiaWcgaW5zcGlyYXRpb24gaG93IHlvdSB3b3VsZCBz
b2x2ZSBwdXp6bGVzIGlzIHRoYXQgeW91IGhhdmUgdmVyeSBsaW1pdGVkIG9wdGlv
bnMsIGJ1dCB3aXRoIGEgcGx1ZyBmb3IgaW5maW5pdGUgY3JlYXRpdml0eS4KCkhv
dyBjYW4gd2UgbWFrZSBpdCBlYXN5IHRvIHN0dWR5IGNvZGU/IEkgbGVhcm5lZCB0
aGF0ICoqcmVhZGFibGUgY29kZSBtZWFucyBxdWlja2x5IGxlYXJuYWJsZSBjb2Rl
KiouIEl0IGRvZXNuJ3QgbWVhbiBzbyBtdWNoIGFib3V0IGEgdmFyaWFibGUgbmFt
ZSBiZWluZyAicmVhZGFibGUiLCB3aGF0IG9ubHkgbWF0dGVycyBpcyB3aGV0aGVy
IHlvdSBjYW4gc3BlbmQgZml2ZSBzZWNvbmRzIHdpdGggc29tZXRoaW5nIGFuZCBs
ZWFybiB3aGF0IGl0IGlzLiBUaGVyZSBhcmUgbXVsdGlwbGUgd2F5cyB3ZSBjb3Vs
ZCBhY2hpZXZlIHRoYXQsIGFuZCBuYW1pbmcgaXMganVzdCBvbmUgb2YgdGhvc2Ug
d2F5cy4gRm9yIGluc3RhbmNlLCBzb21lIHBlb3BsZSBjb21tZW50IGV2ZXJ5dGhp
bmcgaW4gdGhlaXIgY29kZSwgdGhlbiBtb3N0IG9mIHRoZSBjb2RlIGlzIGp1c3Qg
Y29tbWVudHMuIFNvbWUgcGVvcGxlIGZpbmQgdGhhdCB2ZXJ5IHVucmVhZGFibGUs
IGJlY2F1c2UgeW91IGRvbid0IHNlZSB0aGUgYWN0dWFsIGNvZGUuIEJ1dCB3aGF0
IGlmIHlvdSBjb3VsZCBnZXQgYWxsIG9mIHRob3NlIGNvbW1lbnRzIGFuZCBoaWRl
IHRoZW0gc29tZXdoZXJlIHNvIHRoYXQgaWYgeW91IGhvdmVyIG9uIHRoYXQgc3Bv
dCwgeW91IHdvdWxkIHNlZSBhbGwgdGhlIGNvbW1lbnRzLiBMZXQncyBzYXksIHRo
aXMgZnVuY3Rpb24gd291bGQgaGF2ZSBzb21lIGNvbW1lbnRzLCBhbmQgdGhlIHBy
b2dyYW1tZXIgd291bGQgaGF2ZSB3cml0dGVuICJJIGtub3cgdGhhdCB3ZSBzaG91
bGRuJ3QgaGF2ZSB0aGlzIGxpbmUgaGVyZSwgZXRjIi4gQnV0IHdoZW4geW91IG9w
ZW4gdGhhdCBmaWxlIHlvdSB3b3VsZCBvbmx5IHNlZSBjb2RlLCBpZiB5b3Ugd2Fu
dCB0byBsZWFybiBhYm91dCBpdCwgeW91IGNvdWxkIHNlZSB0aG9zZSBjb21tZW50
cyBxdWl0ZSBlYXNpbHkuIFdlIGNhbiB0aGluayBob3cgZG8gd2Ugc2hvdyB0aGF0
IGluIGRpZmZlcmVudCB3YXlzLgoKRGlmZmVyZW50IHBlb3BsZSBoYXZlIGRpZmZl
cmVudCB3YXlzIG9mIGxlYXJuaW5nLiBTb21lIHBlb3BsZSBwcmVmZXIgdG8gZmlk
ZGxlIHdpdGggaXQgaW4gcnVudGltZSwgbGlrZSBbR2xlYiBCYWhtdXRvdiBkZW1v
ZWQgaW4gYSB2ZXJ5IG5pY2Ugd2F5XShodHRwczovL3ZpbWVvLmNvbS8yMTY4Mjk1
NTQpLCBzb21lIHBlb3BsZSBwcmVmZXIgdG8gaGF2ZSBjb21tZW50cy4gVGhlcmUg
YXJlIGRpZmZlcmVudCB3YXlzIG9mIGxlYXJuaW5nLiBJIHByZWZlciB0byBqdXN0
IGxlYXJuIHdpdGggZGlhZ3JhbXMsIHN0YXRpYyBkaWFncmFtcywgdGhhdCdzIHdo
eSBJJ20gZm9jdXNlZCBvbiBkaWFncmFtcywgYnV0IHdlIGNvdWxkIGhhdmUgYWxs
IG9mIHRoZXNlIHRvZ2V0aGVyLiAqKlRoZSBnb2FsIGlzIHRvIHN1cHBvcnQgcGVv
cGxlIHRvIHN0dWR5IGNvZGUgdGhhdCB0aGV5J3JlIHNlZWluZy4qKgoKPGgyIGlk
PSJzeW50YXgiIGNsYXNzPSJociI+PHNwYW4gY2xhc3M9ImhyIj5TWU5UQVg8L3Nw
YW4+PC9oMj4KCk9mIGNvdXJzZSwgd2hlbiB3ZSB0YWxrIGFib3V0IGxhbmd1YWdl
LCBwZW9wbGUganVzdCBpbWFnaW5lIHdoYXQgaXMgdGhlIHN5bnRheCBnb2luZyB0
byBiZSBsaWtlPyBJcyBpdCBnb2luZyB0byBiZSBsaWtlIFtIYXNrZWxsXShodHRw
Oi8vaGFza2VsbC5vcmcvKSwgbGlrZSBbQ10oaHR0cHM6Ly9lbi53aWtpcGVkaWEu
b3JnL3dpa2kvQ18ocHJvZ3JhbW1pbmdfbGFuZ3VhZ2UpKT8KCkkgbm90aWNlZCB0
aGF0IEhhc2tlbGwgaXMgZ3JlYXQsIEkgbGVhcm5lZCBzb21lIEhhc2tlbGwsIGJ1
dCBpdCBjYW4gYmUgdmVyeSBzY2FyeSwgYW5kIHBlb3BsZSBhcmUgdmVyeSBzZW5z
aXRpdmUgdG8gc3ludGF4LiBJIGFsc28gbm90aWNlZCB0aGF0IGl0J3Mgbm90IHRo
YXQgcmVsZXZhbnQuIE9mIGNvdXJzZSBpdCBjYW4gaGVscCB0byBtYWtlIHRoaW5n
cyBzaG9ydGVyLCBidXQgaG93IG11Y2ggc2hvcnRlcj8gSXMgaXQgMiBsaW5lcyBv
ZiBjb2RlIHNob3J0ZXIsIG9yIDU3IGxpbmVzIHNob3J0ZXI/IFRoZXJlIGlzIGEg
YmlnIGRpZmZlcmVuY2UgdGhlcmUuIElmIGl0J3MgdHdvIGxpbmVzLCBtYXliZSB0
aGF0J3Mgbm90IGEgcHJvYmxlbS4gRm9yIGluc3RhbmNlIGEgbG90IG9mIHBlb3Bs
ZSBmaW5kIHRoZSBbUmVhc29uXShodHRwczovL2ZhY2Vib29rLmdpdGh1Yi5pby9y
ZWFzb24vKSBzeW50YXggbW9yZSBhcHByb2FjaGFibGUgdGhhbiBbT0NhbWxdKGh0
dHBzOi8vb2NhbWwub3JnLyksIGFuZCB0aGF0J3Mgd2h5IHBlb3BsZSBhcmUgcmFn
aW5nIGFib3V0IFJlYXNvbi4KCkFsc28sIHdobyBzYWlkIHRoYXQgc3ludGF4IG5l
ZWRzIHRvIGJlIHRleHQ/IEp1c3QgbGlrZSB3ZSBoYXZlIGxhbmd1YWdlcyBmb3Ig
aHVtYW5zLCB3aGljaCBhcmUgdm9pY2Ugb3IgdGV4dCwgd2UgYWxzbyBoYXZlIHNp
Z24gbGFuZ3VhZ2UsIGFuZCBpdCdzIGFsc28gYSBsZWdpdGltYXRlIGxhbmd1YWdl
LiBUaGF0J3Mgd2h5LCB3aGVuIE5pY2sgbWVudGlvbmVkIGFib3V0IEJvbnphaSwg
dGhhdCdzIGEgdmlzdWFsIGxhbmd1YWdlLCB0aGF0IGNhbiBhbHNvIGJlIHRleHR1
YWwuCgpUaGVyZSBhcmUgYWN0dWFsbHkgc29tZSBwcm9qZWN0cyB0aGF0IGFyZSB2
ZXJ5IHNpbWlsYXIgdG8gd2hhdCBJIGltYWdpbmUgSSB3b3VsZCBidWlsZC4gT25l
IG9mIHRoZW0gaXMgY2FsbGVkIFtMdW5hXShodHRwOi8vbHVuYS1sYW5nLm9yZy8p
LCBhbmQgaXQncyBhIHZpc3VhbCAqYW5kKiB0ZXh0dWFsIGZ1bmN0aW9uYWwgcHJv
Z3JhbW1pbmcgbGFuZ3VhZ2UuIFRydXN0IG1lLCB0aGlzIGlzIHRoZSBDeWNsZS5q
cyBpZGVhLiBZb+t1IGhhdmUgdGhlIGRhdGFmbG93IGdyYXBoIGFuZCB0aGluZ3Mg
YXJlIGNvbm5lY3RlZC4gVGhpcyBpcyBDeWNsZS5qcywga2luZCBvZi4gQnV0IGl0
IGFsc28gaGFzIGEgZHVhbCByZXByZXNlbnRhdGlvbiwgZWl0aGVyIGdyYXBocyBv
ciBjb2RlLCBzbyB5b3UgY2FuIHNlZSB3aGljaGV2ZXIgb25lIHlvdSB3YW50LiBU
aGlzIGFsbG93cyBiZXR0ZXIgcmVhZGFiaWxpdHksIHlvdSBjYW4gZ28gaGVyZSBv
ciB0aGVyZSwgd2hpY2hldmVyIHlvdSBwcmVmZXIsIG9yIGJvdGguIFRoaXMgaXMg
dGhlIG9ubHkgdGhpbmcgd2Uga25vdyBhYm91dCBMdW5hLCBpcyB0aGUgZnJvbnRw
YWdlLiBJdCdzIGEgcHJpdmF0ZSB0aGluZywgd2UgY2FuJ3QgZmlkZGxlIHdpdGgg
aXQuIEl0IHdvdWxkIGJlIHJlYWxseSBncmVhdCBpZiB3ZSBjb3VsZCB0ZXN0IGl0
IG91dCBhbmQgc2VlIGlmIGl0IGNhbiBiZSBzb21ldGhpbmcuIFRoZXkgc2F5IHRo
YXQgdGhleSBhcmUgYnVpbGRpbmcgaW50ZXJvcCBmb3IgSGFza2VsbCwgUHl0aG9u
LCBhbmQgdGhleSBhcmUgdGhpbmtpbmcgb2YgQysrIGFuZCBKYXZhU2NyaXB0LCBz
byB3aG8ga25vd3MuCgpBbm90aGVyIGxhbmd1YWdlIHRoYXQgaW5zcGlyZWQgbWUg
d2FzIHRoaXMgb25lIGNhbGxlZCBbS29rYV0oaHR0cHM6Ly9rb2thLWxhbmcuZ2l0
aHViLmlvL2tva2EvZG9jL2tva2FzcGVjLmh0bWwpLiBJdCdzIG1hZGUgYnkgdGhl
IFtwZXJzb24gd2hvIHdyb3RlIFBhcnNlYyBmb3IgSGFza2VsbF0oaHR0cHM6Ly93
d3cubWljcm9zb2Z0LmNvbS9lbi11cy9yZXNlYXJjaC9wZW9wbGUvZGFhbi8pIChz
b21laG93IHlvdSBuZWVkIHRvIGluc3RhbGwgYm90aCBIYXNrZWxsIGFuZCBOb2Rl
LmpzKS4gV2hhdCdzIHJlYWxseSBpbnRlcmVzdGluZyBhYm91dCB0aGlzIGxhbmd1
YWdlIGlzIHRoYXQgaXQga2luZCBvZiBsb29rcyBsaWtlIHR5cGljYWwgQy1zdHls
ZSBjb2RlIG9yIFB5dGhvbiwgYW5kIHlvdSBtaWdodCBpdCdzIGp1c3QgaW1wZXJh
dGl2ZSBjb2RlLiBXaGF0J3MgY29vbCBpcyB0aGF0IHRoaXMgaXMgaW1wZXJhdGl2
ZSBjb2RlIHRoYXQgc29ydCBvZiAidHJhbnNwaWxlcyIgdG8gZnVuZGFtZW50YWxs
eSBmdW5jdGlvbmFsIHByb2dyYW1taW5nIGNvZGUuIFRoZXJlIGFyZSBzb21lIGNv
b2wgaWRlYXMgaGVyZSwgb25lIG9mIHRoZW0gd2hpY2ggSSByZWFsbHkgbGlrZWQg
ZnJvbSB0aGlzIGxhbmd1YWdlIHdoaWNoIEkgd291bGQgcHJvYmFibHkgdGFrZSBh
cyBpbnNwaXJhdGlvbiBpcywgd2hlbiB5b3Ugc2F5IGBzLmVuY29kZSgzKWAsIGl0
IGRvZXNuJ3QgYWN0dWFsbHkgZ2V0IHRoZSBgZW5jb2RlYCAibWV0aG9kIiBvbiBg
c2AsIGJ1dCBpdCBjYWxscyBgZW5jb2RlKHMsIDMpYC4gU28geW91IGNvdWxkIHVz
ZSBmdW5jdGlvbnMgZXZlcnl3aGVyZSwgYnV0IHdpdGggYSBjb252ZW5pZW50IGFu
ZCBmYW1pbGlhciBkb3Qgc3ludGF4LiBTbyB5b3UgY291bGQgZG8gYHMuZW5jb2Rl
KDMpLmNvdW50LnByaW50bG5gIGFuZCBpdCBhY3R1YWxseSBkb2VzIGBwcmludGxu
KGxlbmd0aChlbmNvZGUocywgMykpKWAuIFlvdSBjYW4gdXNlIHRoaXMgdmVyeSBm
YW1pbGlhciBzeW50YXggdGhhdCBKYXZhIHByb2dyYW1tZXJzLCBDIHByb2dyYW1t
ZXJzLCBKYXZhU2NyaXB0IHByb2dyYW1tZXJzIGFyZSBjb21mb3J0YWJsZSB3aXRo
LCBidXQgaXQncyBmdW5jdGlvbmFsIHBpcGluZy4gU28gSSB3b3VsZCB0YWtlIHRo
YXQgaW50byBjb25zaWRlcmF0aW9uLCBiYXNpY2FsbHksIHRyeWluZyB0byBtYWtl
IHNvbWV0aGluZyBhcHByb2FjaGFibGUgaW4gQy1zdHlsZSwgYnV0IGZ1bmRhbWVu
dGFsbHkgdGhlIGNvbmNlcHRzIGFyZSBmdW5jdGlvbmFsIGFuZCBkYXRhZmxvdy4K
CkFub3RoZXIgdGhpbmcgaXMgd2hlbiB5b3UgaW5wdXQgQ2hpbmVzZSB0ZXh0LCB5
b3UgYXJlIHR5cGluZyBpbiBvbmUgY2hhcmFjdGVyIGdyb3VwIGFuZCB5b3UgZ2V0
dGluZyBvdXQgc29tZXRoaW5nIGluIGFub3RoZXIgY2hhcmFjdGVyIGdyb3VwLCB3
aGF0IGlmIHdlIGhhZCBzb21ldGhpbmcgbGlrZSB0aGlzPyBZb3Ugd291bOpkIHR5
cGUgdGV4dHVhbCwgYW5kIGF0IHRoZSBzYW1lIHRpbWUgeW91IHdvdWxkIGdldCB2
aXN1YWwgZGlhZ3JhbXMgZ2V0dGluZyBidWlsdCwgb24gdGhlIHNpZGUuIFNvIGV4
cGxvcmluZyBhbGwgdGhlc2Uga2luZCBvZiBpZGVhcyBpcyBzb21ldGhpbmcgdGhh
dCBJIGhhdmUgZm9yIHRoZSBzeW50YXguCgpXaGF0IEkgdGhpbmsgaXMgdGhhdCBw
cm9ncmFtbWluZyBpcyBub3Qgc28gbXVjaCBhYm91dCBwdXR0aW5nIHdvcmRzIHRv
Z2V0aGVyLCBidXQgYWJvdXQgKipwbHVnZ2luZyBpZGVhcyB0b2dldGhlcioqLiBX
aGVuIHlvdSBzYXkgc29tZXRoaW5nIGluIEVuZ2xpc2gsIG9mIGNvdXJzZSB0aGVy
ZSBpcyB0aGUgc3ludGF4IGFuZCB0aGUgZ3JhbW1hciwgYnV0IHRoZXJlIGlzIGFs
c28gdGhlICpzZW1hbnRpY3MqIGFuZCB0aGlzIHN1YmplY3QsIHRoYXQgdmVyYiwg
dGhvc2UgYXJlIHdoYXQgYXJlIG1vcmUgaW1wb3J0YW50LCBhbmQgc3ludGF4IGNh
biB0aGVuIGJlIG5lZ290aWF0ZWQgbGF0ZXIuCgo8aDIgY2xhc3M9ImhyIj48c3Bh
biBjbGFzcz0iaHIiPk5FWFQ8L3NwYW4+PC9oMj4KCldpbGwgdGhpcyBoYXBwZW4/
IEkgZG9uJ3Qga25vdywgYmVjYXVzZSBsYW5ndWFnZXMgYXJlIHByb2plY3RzIGZv
ciAxMCB5ZWFycyBvciBkZWNhZGVzLiBZb3UgY2FuJ3QganVzdCBtYWtlIGEgc21h
bGwgbGFuZ3VhZ2UgYW5kIHVzZSBpdCwgdGhlcmUgYXJlIGFsbCBraW5kcyBvZiBx
dWVzdGlvbnMgYWJvdXQgcGFja2FnZSBtYW5hZ2VycyBhbmQgbGludGluZyB0b29s
cyBhbmQgdGVzdGluZyB0b29scy4gSXQncyBqdXN0IHNvIGRlZXAsIGFuZCBJJ20g
bm90IHN1cmUgaWYgSSBoYXZlIHRoZSB0aW1lIHRvIGJ1aWxkIHRoYXQuIFdoaWNo
IGJhc2ljYWxseSBtZWFucyAiZG8geW91IHdhbnQgdG8gZ2V0IG1hcnJpZWQgdG8g
YSBwcm9ncmFtbWluZyBsYW5ndWFnZT8iLiBCdXQgYWxzbywgdHJhbnNwaWxpbmcg
bGFuZ3VhZ2VzIGNhbiBiZSBzbWFsbCwgb3IgY2FuIGJlIGh1Z2UuIFtQdXJlU2Ny
aXB0XShodHRwOi8v53d3dy5wdXJlc2NyaXB0Lm9yZy8pIGFuZCBUeXBlU2NyaXB0
IGFyZSBodWdlLCBpbiBjb21taXRtZW50IGFuZCBob3cgbXVjaCB5b3UgbmVlZCB0
byBkbyB0aGVyZSwgYnV0IHNvbWUgbGFuZ3VhZ2VzIGFyZSBzbWFsbC4gSXQg5mNv
dWxkIGJlIHRoYXQgd2UganVzdCBoYXZlIGEgbmljZSBzeW50YXggZm9yIHByb2R1
Y2luZyBhIEN5Y2xlLmrlcyBhcHAuIFdpbGwgaXQgaGFwcGVuPyBJIGRvbid0IGvk
bm93LiBUaGFuayB5b3UgZuNvciBsaXN0ZeJuaW5n4S4KAMLAXAQAAQoAEAUCWRrq
7AkQnt4j6n6KSJAAAEN2CAAKN0EG7xXOGPe9Bt0vRwZ0aLhe72L33+LOKO1ePWyl
AOsfXuj4K2EMhDAG8o/NxWHPiBK4P/jiHZfVWjxaqW5cndGZXP5+0X6VozcGvLPv
+nmnaXuVZ2ggwa2bXKH52UyqZHgoxnJSrISsQVwrkomn/+8JBRcK+aSgDfs0zQHL
E/IB9nH6VmJihAfhDU2EM3MCbBzdnGtGgUnTCydh46Wm2m9biF+kLszqG28Tt4Zf
tAnhBV6T3yhDp4SX8UT+94CzwEasuaVzA4MFJMDGwkFTps9azc+FJpECMSzkmeu8
keK6Wc94uhEtfK0hZA/GFOC9x9qE2ZiDYs8AP6rA90EQ
=KJKk
-----END PGP MESSAGE-----
